{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2","program":"C:\\Users\\Anubi\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","widestring","C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=ae456441f90cd4dc","-C","extra-filename=-ae456441f90cd4dc","--out-dir","c:\\Users\\Anubi\\Udemy\\Rust\\MyRustWebsocket\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Anubi\\Udemy\\Rust\\MyRustWebsocket\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Anubi\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Anubi\\Udemy\\Rust\\MyRustWebsocket\\target\\rls\\debug\\deps\\libwidestring-ae456441f90cd4dc.rmeta"},"prelude":{"crate_id":{"name":"widestring","disambiguator":[6888333079036616781,12907598047075205168]},"crate_root":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src","external_crates":[{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2951836381390344939,16649128255697415692]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11710271729537087300,7936810236211621860]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[221620535861096092,14052674651022364528]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6754765288211962248,11319126938093173531]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12146955935630897969,9411134559866261862]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14833668363639865695,5655522694650611187]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4272166054306925428,11429919485785531186]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12683507629027033058,3032465482526171902]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3621516987667804763,14118985286121416357]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3114763798488812350,3771385689256703239]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[12308387851717752688,1271721453298801945]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[41357415245366713,267475365531445088]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14877867959531453948,6948897495248942720]}}],"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":0,"byte_end":11268,"line_start":1,"line_end":238,"column_start":1,"column_end":25}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":10523,"byte_end":10524,"line_start":210,"line_end":210,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"UCStr, MissingNulError","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":10523,"byte_end":10524,"line_start":210,"line_end":210,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"UCString","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":10523,"byte_end":10524,"line_start":210,"line_end":210,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"FromUtf32Error, UStr","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":10523,"byte_end":10524,"line_start":210,"line_end":210,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"UString","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":0,"byte_end":11268,"line_start":1,"line_end":238,"column_start":1,"column_end":25},"name":"","qualname":"::","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":698},{"krate":0,"index":5},{"krate":0,"index":16},{"krate":0,"index":77},{"krate":0,"index":280},{"krate":0,"index":332},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509}],"decl_id":null,"docs":" A wide string FFI module for converting to and from wide string variants.","sig":null,"attributes":[{"value":"! A wide string FFI module for converting to and from wide string variants.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":78,"byte_end":81,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides multiple types of wide strings: `U16String`, `U16CString`, `U32String`,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":82,"byte_end":178,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"! and `U32CString`. These types are backed by two generic implementations parameterized by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":179,"byte_end":271,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"! element size: `UString<C>` and `UCString<C>`. The `UCString` types are analogous to the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":272,"byte_end":363,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"! standard `CString` FFI type, while the `UString` types are analogous to `OsString`. Otherwise,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":364,"byte_end":462,"line_start":6,"line_end":6,"column_start":1,"column_end":99}},{"value":"! `U16` and `U32` types differ only in character width and encoding methods.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":463,"byte_end":541,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":542,"byte_end":545,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! For `U16String` and `U32String`, no guarantees are made about the underlying string data; they","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":546,"byte_end":644,"line_start":9,"line_end":9,"column_start":1,"column_end":99}},{"value":"! are simply a sequence of UTF-16 *code units* or UTF-32 code points, both of which may be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":645,"byte_end":737,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"! ill-formed or contain nul values. `U16CString` and `U32CString`, on the other hand, are aware","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":738,"byte_end":835,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"! of nul values and are guaranteed to be terminated with a nul value (unless unchecked methods","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":836,"byte_end":932,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"! are used to construct the strings). Because `U16CString` and `U32CString` are C-style,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":933,"byte_end":1023,"line_start":13,"line_end":13,"column_start":1,"column_end":91}},{"value":"! nul-terminated strings, they will have no interior nul values. All four string types may still","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1024,"byte_end":1122,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"! have unpaired UTF-16 surrogates or invalid UTF-32 code points; ill-formed data is preserved","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1123,"byte_end":1218,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"! until conversion to a basic Rust `String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1219,"byte_end":1265,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1266,"byte_end":1269,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Use `U16String` or `U32String` when you simply need to pass-through strings, or when you know","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1270,"byte_end":1367,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"! or don't care if you're not dealing with a nul-terminated string, such as when string lengths","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1368,"byte_end":1465,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"! are provided and you are only reading strings from FFI, not writing them out to a FFI.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1466,"byte_end":1556,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1557,"byte_end":1560,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! Use `U16CString` or `U32CString` when you must properly handle nul values, and must deal with","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1561,"byte_end":1658,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"! nul-terminated C-style wide strings, such as when you pass strings into FFI functions.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1659,"byte_end":1749,"line_start":23,"line_end":23,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1750,"byte_end":1753,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! # Relationship to other Rust Strings","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1754,"byte_end":1794,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1795,"byte_end":1798,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! Standard Rust strings `String` and `str` are well-formed Unicode data encoded as UTF-8. The","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1799,"byte_end":1894,"line_start":27,"line_end":27,"column_start":1,"column_end":96}},{"value":"! standard strings provide proper handling of Unicode and ensure strong safety guarantees.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1895,"byte_end":1987,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1988,"byte_end":1991,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! `CString` and `CStr` are strings used for C FFI. They handle nul-terminated C-style strings.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":1992,"byte_end":2088,"line_start":30,"line_end":30,"column_start":1,"column_end":97}},{"value":"! However, they do not have a builtin encoding, and conversions between C-style and other Rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":2089,"byte_end":2185,"line_start":31,"line_end":31,"column_start":1,"column_end":97}},{"value":"! strings must specifically encode and decode the strings, and handle possibly invalid encoding","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":2186,"byte_end":2283,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"! data. They are safe to use only in passing string-like data back and forth from C APIs but do","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":2284,"byte_end":2381,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"! not provide any other guarantees, so may not be well-formed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":2382,"byte_end":2446,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":2447,"byte_end":2450,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! `OsString` and `OsStr` are also strings for use with FFI. Unlike `CString`, they do no special","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":2451,"byte_end":2549,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"! handling of nul values, but instead have an OS-specified encoding. While, for example, on Linux","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":2550,"byte_end":2649,"line_start":37,"line_end":37,"column_start":1,"column_end":100}},{"value":"! systems this is usually the UTF-8 encoding, this is not the case for every platform. The","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":2650,"byte_end":2742,"line_start":38,"line_end":38,"column_start":1,"column_end":93}},{"value":"! encoding may not even be 8-bit: on Windows, `OsString` uses a malformed encoding sometimes","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":2743,"byte_end":2837,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"! referred to as \"WTF-8\". In any case, like `CString`, `OsString` has no additional guarantees","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":2838,"byte_end":2934,"line_start":40,"line_end":40,"column_start":1,"column_end":97}},{"value":"! and may not be well-formed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":2935,"byte_end":2966,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":2967,"byte_end":2970,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! Due to the loss of safety of these other string types, conversion to standard Rust `String` is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":2971,"byte_end":3069,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"! lossy, and may require knowledge of the underlying encoding, including platform-specific","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":3070,"byte_end":3162,"line_start":44,"line_end":44,"column_start":1,"column_end":93}},{"value":"! quirks.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":3163,"byte_end":3174,"line_start":45,"line_end":45,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":3175,"byte_end":3178,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! The wide strings in this crate are roughly based on the principles of the string types in","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":3179,"byte_end":3272,"line_start":47,"line_end":47,"column_start":1,"column_end":94}},{"value":"! `std::ffi`, though there are differences. `U16String`, `U32String`, `U16Str`, and `U32Str` are","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":3273,"byte_end":3371,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"! roughly similar in role to `OsString` and `OsStr`, while `U16CString`, `U32CString`, `U16CStr`,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":3372,"byte_end":3471,"line_start":49,"line_end":49,"column_start":1,"column_end":100}},{"value":"! and `U32CStr` are roughly similar in role to `CString` and `CStr`. Conversion to FFI string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":3472,"byte_end":3567,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"! types is generally very straight forward and safe, while conversion directly between standard","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":3568,"byte_end":3665,"line_start":51,"line_end":51,"column_start":1,"column_end":98}},{"value":"! Rust `String` is a lossy conversion just as `OsString` is.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":3666,"byte_end":3728,"line_start":52,"line_end":52,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":3729,"byte_end":3732,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! `U16String` and `U16CString` are treated as though they use UTF-16 encoding, even if they may","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":3733,"byte_end":3830,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"! contain unpaired surrogates. `U32String` and `U32CString` are treated as though they use UTF-32","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":3831,"byte_end":3930,"line_start":55,"line_end":55,"column_start":1,"column_end":100}},{"value":"! encoding, even if they may contain values outside the valid Unicode character range.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":3931,"byte_end":4019,"line_start":56,"line_end":56,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":4020,"byte_end":4023,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! # Remarks on UTF-16 Code Units","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":4024,"byte_end":4058,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":4059,"byte_end":4062,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! *Code units* are the 16-bit units that comprise UTF-16 sequences. Code units","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":4063,"byte_end":4143,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"! can specify Unicode code points either as single units or in *surrogate pairs*. Because every","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":4144,"byte_end":4241,"line_start":61,"line_end":61,"column_start":1,"column_end":98}},{"value":"! code unit might be part of a surrogate pair, many regular string operations, including","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":4242,"byte_end":4332,"line_start":62,"line_end":62,"column_start":1,"column_end":91}},{"value":"! indexing into a wide string, writing to a wide string, or even iterating a wide string should","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":4333,"byte_end":4430,"line_start":63,"line_end":63,"column_start":1,"column_end":98}},{"value":"! be handled with care and are greatly discouraged. Some operations have safer alternatives","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":4431,"byte_end":4524,"line_start":64,"line_end":64,"column_start":1,"column_end":94}},{"value":"! provided, such as Unicode code point iteration instead of code unit iteration. Always keep in","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":4525,"byte_end":4622,"line_start":65,"line_end":65,"column_start":1,"column_end":98}},{"value":"! mind that the number of code units (`len()`) of a wide string is **not** equivalent to the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":4623,"byte_end":4717,"line_start":66,"line_end":66,"column_start":1,"column_end":95}},{"value":"! number of Unicode characters in the string, merely the length of the UTF-16 encoding sequence.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":4718,"byte_end":4816,"line_start":67,"line_end":67,"column_start":1,"column_end":99}},{"value":"! In fact, Unicode code points do not even have a one-to-one mapping with characters!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":4817,"byte_end":4904,"line_start":68,"line_end":68,"column_start":1,"column_end":88}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":4905,"byte_end":4908,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! UTF-32 simply encodes Unicode code points as-is in 32-bit values, but Unicode character code","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":4909,"byte_end":5005,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"! points are reserved only for 21-bits. Again, Unicode code points do not have a one-to-one","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5006,"byte_end":5099,"line_start":71,"line_end":71,"column_start":1,"column_end":94}},{"value":"! mapping with the concept of a visual character glyph.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5100,"byte_end":5157,"line_start":72,"line_end":72,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5158,"byte_end":5161,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! # FFI with C/C++ `wchar_t`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5162,"byte_end":5192,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5193,"byte_end":5196,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! C/C++'s `wchar_t` (and C++'s corresponding `widestring`) varies in size depending on compiler","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5197,"byte_end":5294,"line_start":76,"line_end":76,"column_start":1,"column_end":98}},{"value":"! and platform. Typically, `wchar_t` is 16-bits on Windows and 32-bits on most Unix-based","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5295,"byte_end":5386,"line_start":77,"line_end":77,"column_start":1,"column_end":92}},{"value":"! platforms. For convenience when using `wchar_t`-based FFI's, type aliases for the corresponding","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5387,"byte_end":5486,"line_start":78,"line_end":78,"column_start":1,"column_end":100}},{"value":"! string types are provided: `WideString` aliases `U16String` on Windows or `U32String`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5487,"byte_end":5576,"line_start":79,"line_end":79,"column_start":1,"column_end":90}},{"value":"! elsewhere, `WideCString` aliases `U16CString` or `U32CString`, etc. The `WideChar` alias","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5577,"byte_end":5669,"line_start":80,"line_end":80,"column_start":1,"column_end":93}},{"value":"! is also provided, aliasing `u16` or `u32`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5670,"byte_end":5716,"line_start":81,"line_end":81,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5717,"byte_end":5720,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! When not interacting with a FFI using `wchar_t`, it is recommended to use the string types","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5721,"byte_end":5815,"line_start":83,"line_end":83,"column_start":1,"column_end":95}},{"value":"! directly rather than via the wide alias.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5816,"byte_end":5860,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5861,"byte_end":5864,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! This crate supports `no_std` when default features are disabled. The `std` and `alloc` features","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5865,"byte_end":5964,"line_start":86,"line_end":86,"column_start":1,"column_end":100}},{"value":"! (enabled by default) enable the `U16String`, `U32String`, `U16CString`, and `U32CString` types","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":5965,"byte_end":6063,"line_start":87,"line_end":87,"column_start":1,"column_end":99}},{"value":"! and aliases. Other types do not require allocation and can be used in a `no_std` environment.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6064,"byte_end":6161,"line_start":88,"line_end":88,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6162,"byte_end":6165,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6166,"byte_end":6180,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6181,"byte_end":6184,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! The following example uses `U16String` to get Windows error messages, since `FormatMessageW`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6185,"byte_end":6281,"line_start":92,"line_end":92,"column_start":1,"column_end":97}},{"value":"! returns a string length for us and we don't need to pass error messages into other FFI","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6282,"byte_end":6372,"line_start":93,"line_end":93,"column_start":1,"column_end":91}},{"value":"! functions so we don't need to worry about nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6373,"byte_end":6430,"line_start":94,"line_end":94,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6431,"byte_end":6434,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6435,"byte_end":6446,"line_start":96,"line_end":96,"column_start":1,"column_end":12}},{"value":"! # #[cfg(not(windows))]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6447,"byte_end":6473,"line_start":97,"line_end":97,"column_start":1,"column_end":27}},{"value":"! # fn main() {}","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6474,"byte_end":6492,"line_start":98,"line_end":98,"column_start":1,"column_end":19}},{"value":"! # extern crate winapi;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6493,"byte_end":6519,"line_start":99,"line_end":99,"column_start":1,"column_end":27}},{"value":"! # extern crate widestring;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6520,"byte_end":6550,"line_start":100,"line_end":100,"column_start":1,"column_end":31}},{"value":"! # #[cfg(windows)]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6551,"byte_end":6572,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"! # fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6573,"byte_end":6590,"line_start":102,"line_end":102,"column_start":1,"column_end":18}},{"value":"! use winapi::um::winbase::{FormatMessageW, LocalFree, FORMAT_MESSAGE_FROM_SYSTEM,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6591,"byte_end":6675,"line_start":103,"line_end":103,"column_start":1,"column_end":85}},{"value":"!                           FORMAT_MESSAGE_ALLOCATE_BUFFER, FORMAT_MESSAGE_IGNORE_INSERTS};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6676,"byte_end":6769,"line_start":104,"line_end":104,"column_start":1,"column_end":94}},{"value":"! use winapi::shared::ntdef::LPWSTR;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6770,"byte_end":6808,"line_start":105,"line_end":105,"column_start":1,"column_end":39}},{"value":"! use winapi::shared::minwindef::HLOCAL;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6809,"byte_end":6851,"line_start":106,"line_end":106,"column_start":1,"column_end":43}},{"value":"! use std::ptr;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6852,"byte_end":6869,"line_start":107,"line_end":107,"column_start":1,"column_end":18}},{"value":"! use widestring::U16String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6870,"byte_end":6900,"line_start":108,"line_end":108,"column_start":1,"column_end":31}},{"value":"! # use winapi::shared::minwindef::DWORD;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6901,"byte_end":6944,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"! # let error_code: DWORD = 0;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6945,"byte_end":6977,"line_start":110,"line_end":110,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6978,"byte_end":6981,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! let U16Str: U16String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":6982,"byte_end":7008,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"! unsafe {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7009,"byte_end":7021,"line_start":113,"line_end":113,"column_start":1,"column_end":13}},{"value":"!     // First, get a string buffer from some windows api such as FormatMessageW...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7022,"byte_end":7107,"line_start":114,"line_end":114,"column_start":1,"column_end":86}},{"value":"!     let mut buffer: LPWSTR = ptr::null_mut();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7108,"byte_end":7157,"line_start":115,"line_end":115,"column_start":1,"column_end":50}},{"value":"!     let strlen = FormatMessageW(FORMAT_MESSAGE_FROM_SYSTEM |","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7158,"byte_end":7222,"line_start":116,"line_end":116,"column_start":1,"column_end":65}},{"value":"!                                 FORMAT_MESSAGE_ALLOCATE_BUFFER |","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7223,"byte_end":7291,"line_start":117,"line_end":117,"column_start":1,"column_end":69}},{"value":"!                                 FORMAT_MESSAGE_IGNORE_INSERTS,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7292,"byte_end":7358,"line_start":118,"line_end":118,"column_start":1,"column_end":67}},{"value":"!                                 ptr::null(),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7359,"byte_end":7407,"line_start":119,"line_end":119,"column_start":1,"column_end":49}},{"value":"!                                 error_code, // error code from GetLastError()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7408,"byte_end":7489,"line_start":120,"line_end":120,"column_start":1,"column_end":82}},{"value":"!                                 0,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7490,"byte_end":7528,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"!                                 (&mut buffer as *mut LPWSTR) as LPWSTR,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7529,"byte_end":7604,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"!                                 0,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7605,"byte_end":7643,"line_start":123,"line_end":123,"column_start":1,"column_end":39}},{"value":"!                                 ptr::null_mut());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7644,"byte_end":7697,"line_start":124,"line_end":124,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7698,"byte_end":7701,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"!     // Get the buffer as a wide string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7702,"byte_end":7744,"line_start":126,"line_end":126,"column_start":1,"column_end":43}},{"value":"!     U16Str = U16String::from_ptr(buffer, strlen as usize);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7745,"byte_end":7807,"line_start":127,"line_end":127,"column_start":1,"column_end":63}},{"value":"!     // Since U16String creates an owned copy, it's safe to free original buffer now","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7808,"byte_end":7895,"line_start":128,"line_end":128,"column_start":1,"column_end":88}},{"value":"!     // If you didn't want an owned copy, you could use &U16Str.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7896,"byte_end":7963,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"!     LocalFree(buffer as HLOCAL);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":7964,"byte_end":8000,"line_start":130,"line_end":130,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8001,"byte_end":8006,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"! // Convert to a regular Rust String and use it to your heart's desire!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8007,"byte_end":8081,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"! let message = U16Str.to_string_lossy();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8082,"byte_end":8125,"line_start":133,"line_end":133,"column_start":1,"column_end":44}},{"value":"! # assert_eq!(message, \"The operation completed successfully.\\r\\n\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8126,"byte_end":8197,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"! # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8198,"byte_end":8205,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8206,"byte_end":8213,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8214,"byte_end":8217,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! The following example is the functionally the same, only using `U16CString` instead.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8218,"byte_end":8306,"line_start":138,"line_end":138,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8307,"byte_end":8310,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8311,"byte_end":8322,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"! # #[cfg(not(windows))]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8323,"byte_end":8349,"line_start":141,"line_end":141,"column_start":1,"column_end":27}},{"value":"! # fn main() {}","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8350,"byte_end":8368,"line_start":142,"line_end":142,"column_start":1,"column_end":19}},{"value":"! # extern crate winapi;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8369,"byte_end":8395,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"! # extern crate widestring;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8396,"byte_end":8426,"line_start":144,"line_end":144,"column_start":1,"column_end":31}},{"value":"! # #[cfg(windows)]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8427,"byte_end":8448,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"! # fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8449,"byte_end":8466,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"! use winapi::um::winbase::{FormatMessageW, LocalFree, FORMAT_MESSAGE_FROM_SYSTEM,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8467,"byte_end":8551,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"!                           FORMAT_MESSAGE_ALLOCATE_BUFFER, FORMAT_MESSAGE_IGNORE_INSERTS};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8552,"byte_end":8645,"line_start":148,"line_end":148,"column_start":1,"column_end":94}},{"value":"! use winapi::shared::ntdef::LPWSTR;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8646,"byte_end":8684,"line_start":149,"line_end":149,"column_start":1,"column_end":39}},{"value":"! use winapi::shared::minwindef::HLOCAL;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8685,"byte_end":8727,"line_start":150,"line_end":150,"column_start":1,"column_end":43}},{"value":"! use std::ptr;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8728,"byte_end":8745,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"! use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8746,"byte_end":8777,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"! # use winapi::shared::minwindef::DWORD;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8778,"byte_end":8821,"line_start":153,"line_end":153,"column_start":1,"column_end":44}},{"value":"! # let error_code: DWORD = 0;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8822,"byte_end":8854,"line_start":154,"line_end":154,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8855,"byte_end":8858,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"! let U16Str: U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8859,"byte_end":8886,"line_start":156,"line_end":156,"column_start":1,"column_end":28}},{"value":"! unsafe {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8887,"byte_end":8899,"line_start":157,"line_end":157,"column_start":1,"column_end":13}},{"value":"!     // First, get a string buffer from some windows api such as FormatMessageW...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8900,"byte_end":8985,"line_start":158,"line_end":158,"column_start":1,"column_end":86}},{"value":"!     let mut buffer: LPWSTR = ptr::null_mut();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":8986,"byte_end":9035,"line_start":159,"line_end":159,"column_start":1,"column_end":50}},{"value":"!     FormatMessageW(FORMAT_MESSAGE_FROM_SYSTEM |","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9036,"byte_end":9087,"line_start":160,"line_end":160,"column_start":1,"column_end":52}},{"value":"!                    FORMAT_MESSAGE_ALLOCATE_BUFFER |","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9088,"byte_end":9143,"line_start":161,"line_end":161,"column_start":1,"column_end":56}},{"value":"!                    FORMAT_MESSAGE_IGNORE_INSERTS,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9144,"byte_end":9197,"line_start":162,"line_end":162,"column_start":1,"column_end":54}},{"value":"!                    ptr::null(),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9198,"byte_end":9233,"line_start":163,"line_end":163,"column_start":1,"column_end":36}},{"value":"!                    error_code, // error code from GetLastError()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9234,"byte_end":9302,"line_start":164,"line_end":164,"column_start":1,"column_end":69}},{"value":"!                    0,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9303,"byte_end":9328,"line_start":165,"line_end":165,"column_start":1,"column_end":26}},{"value":"!                    (&mut buffer as *mut LPWSTR) as LPWSTR,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9329,"byte_end":9391,"line_start":166,"line_end":166,"column_start":1,"column_end":63}},{"value":"!                    0,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9392,"byte_end":9417,"line_start":167,"line_end":167,"column_start":1,"column_end":26}},{"value":"!                    ptr::null_mut());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9418,"byte_end":9458,"line_start":168,"line_end":168,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9459,"byte_end":9462,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"!     // Get the buffer as a wide string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9463,"byte_end":9505,"line_start":170,"line_end":170,"column_start":1,"column_end":43}},{"value":"!     U16Str = U16CString::from_ptr_str(buffer);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9506,"byte_end":9556,"line_start":171,"line_end":171,"column_start":1,"column_end":51}},{"value":"!     // Since U16CString creates an owned copy, it's safe to free original buffer now","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9557,"byte_end":9645,"line_start":172,"line_end":172,"column_start":1,"column_end":89}},{"value":"!     // If you didn't want an owned copy, you could use &U16CStr.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9646,"byte_end":9714,"line_start":173,"line_end":173,"column_start":1,"column_end":69}},{"value":"!     LocalFree(buffer as HLOCAL);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9715,"byte_end":9751,"line_start":174,"line_end":174,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9752,"byte_end":9757,"line_start":175,"line_end":175,"column_start":1,"column_end":6}},{"value":"! // Convert to a regular Rust String and use it to your heart's desire!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9758,"byte_end":9832,"line_start":176,"line_end":176,"column_start":1,"column_end":75}},{"value":"! let message = U16Str.to_string_lossy();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9833,"byte_end":9876,"line_start":177,"line_end":177,"column_start":1,"column_end":44}},{"value":"! # assert_eq!(message, \"The operation completed successfully.\\r\\n\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9877,"byte_end":9948,"line_start":178,"line_end":178,"column_start":1,"column_end":72}},{"value":"! # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9949,"byte_end":9956,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9957,"byte_end":9964,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"deny(future_incompatible)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9966,"byte_end":9995,"line_start":182,"line_end":182,"column_start":1,"column_end":30}},{"value":"warn(unused, anonymous_parameters, missing_docs,\n       missing_copy_implementations, missing_debug_implementations,\n       trivial_casts, trivial_numeric_casts)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":9996,"byte_end":10177,"line_start":183,"line_end":191,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":12303,"byte_end":12318,"line_start":24,"line_end":24,"column_start":12,"column_end":27},"name":"MissingNulError","qualname":"::ucstr::MissingNulError","value":"MissingNulError {  }","parent":null,"children":[{"krate":0,"index":512}],"decl_id":null,"docs":" An error returned from `UCString` and `UCStr` to indicate that a terminating nul value\n was missing.","sig":null,"attributes":[{"value":"/ An error returned from `UCString` and `UCStr` to indicate that a terminating nul value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":12043,"byte_end":12133,"line_start":19,"line_end":19,"column_start":1,"column_end":91}},{"value":"/ was missing.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":12134,"byte_end":12150,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":12151,"byte_end":12154,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The error optionally returns the ownership of the invalid vector whenever a vector was owned.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":12155,"byte_end":12252,"line_start":22,"line_end":22,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":12902,"byte_end":12910,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<MissingNulError<C>>::into_vec","value":"pub fn into_vec(Self) -> Option<Vec<C>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this error, returning the underlying vector of `u16` values which generated the\n error in the first place.\n","sig":null,"attributes":[{"value":"/ Consumes this error, returning the underlying vector of `u16` values which generated the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":12734,"byte_end":12826,"line_start":44,"line_end":44,"column_start":5,"column_end":97}},{"value":"/ error in the first place.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":12831,"byte_end":12860,"line_start":45,"line_end":45,"column_start":5,"column_end":34}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":12865,"byte_end":12890,"line_start":46,"line_end":46,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14110,"byte_end":14115,"line_start":79,"line_end":79,"column_start":12,"column_end":17},"name":"UCStr","qualname":"::ucstr::UCStr","value":"UCStr {  }","parent":null,"children":[{"krate":0,"index":532}],"decl_id":null,"docs":" C-style wide string reference for `UCString`.","sig":null,"attributes":[{"value":"/ C-style wide string reference for `UCString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":13322,"byte_end":13371,"line_start":65,"line_end":65,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":13372,"byte_end":13375,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ `UCStr` is aware of nul values. Unless unchecked conversions are used, all `UCStr`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":13376,"byte_end":13462,"line_start":67,"line_end":67,"column_start":1,"column_end":87}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":13463,"byte_end":13561,"line_start":68,"line_end":68,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-16 or UTF-32 data. These strings are","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":13562,"byte_end":13658,"line_start":69,"line_end":69,"column_start":1,"column_end":97}},{"value":"/ intended to be used with FFI functions such as Windows API that may require nul-terminated","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":13659,"byte_end":13753,"line_start":70,"line_end":70,"column_start":1,"column_end":95}},{"value":"/ strings.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":13754,"byte_end":13766,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":13767,"byte_end":13770,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ `UCStr` can be converted to and from many other string types, including `UString`,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":13771,"byte_end":13857,"line_start":73,"line_end":73,"column_start":1,"column_end":87}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":13858,"byte_end":13928,"line_start":74,"line_end":74,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":13929,"byte_end":13932,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Please prefer using the type aliases `U16CStr` or `U32CStr` or `WideCStr` to using","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":13933,"byte_end":14019,"line_start":76,"line_end":76,"column_start":1,"column_end":87}},{"value":"/ this type directly.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14020,"byte_end":14043,"line_start":77,"line_end":77,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14224,"byte_end":14227,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<UCStr<C>>::new","value":"pub fn new<S: AsRef<UCStr<C>> + ?Sized>(&S) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Coerces a value into a `UCStr`.\n","sig":null,"attributes":[{"value":"/ Coerces a value into a `UCStr`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14177,"byte_end":14212,"line_start":84,"line_end":84,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":15283,"byte_end":15295,"line_start":111,"line_end":111,"column_start":19,"column_end":31},"name":"from_ptr_str","qualname":"<UCStr<C>>::from_ptr_str","value":"pub unsafe fn from_ptr_str<'a>(*const C) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UStr` from a nul-terminated string pointer.","sig":null,"attributes":[{"value":"/ Constructs a `UStr` from a nul-terminated string pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14305,"byte_end":14366,"line_start":89,"line_end":89,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14371,"byte_end":14374,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This will scan for nul values beginning with `p`. The first nul value will be used as the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14379,"byte_end":14472,"line_start":91,"line_end":91,"column_start":5,"column_end":98}},{"value":"/ nul terminator for the string, similar to how libc string functions such as `strlen` work.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14477,"byte_end":14571,"line_start":92,"line_end":92,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14576,"byte_end":14579,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14584,"byte_end":14596,"line_start":94,"line_end":94,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14601,"byte_end":14604,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14609,"byte_end":14702,"line_start":96,"line_end":96,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14707,"byte_end":14782,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14787,"byte_end":14790,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ `p` must be non-null.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14795,"byte_end":14820,"line_start":99,"line_end":99,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14825,"byte_end":14828,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14833,"byte_end":14845,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14850,"byte_end":14853,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14858,"byte_end":14898,"line_start":103,"line_end":103,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14903,"byte_end":14906,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14911,"byte_end":14923,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14928,"byte_end":14931,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14936,"byte_end":15026,"line_start":107,"line_end":107,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":15031,"byte_end":15121,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":15126,"byte_end":15221,"line_start":109,"line_end":109,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":15226,"byte_end":15264,"line_start":110,"line_end":110,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16788,"byte_end":16805,"line_start":147,"line_end":147,"column_start":19,"column_end":36},"name":"from_ptr_with_nul","qualname":"<UCStr<C>>::from_ptr_with_nul","value":"pub unsafe fn from_ptr_with_nul<'a>(*const C, usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UStr` from a pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `UStr` from a pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":15540,"byte_end":15592,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":15597,"byte_end":15600,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes, and does","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":15605,"byte_end":15692,"line_start":122,"line_end":122,"column_start":5,"column_end":92}},{"value":"/ **not** include the nul terminator of the string. Thus, a `len` of 0 is valid and means that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":15697,"byte_end":15793,"line_start":123,"line_end":123,"column_start":5,"column_end":101}},{"value":"/ `p` is a pointer directly to the nul terminator of the string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":15798,"byte_end":15864,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":15869,"byte_end":15872,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":15877,"byte_end":15889,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":15894,"byte_end":15897,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":15902,"byte_end":15996,"line_start":128,"line_end":128,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16001,"byte_end":16014,"line_start":129,"line_end":129,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16019,"byte_end":16022,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ `p` must be non-null, even for zero `len`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16027,"byte_end":16073,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16078,"byte_end":16081,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The interior values of the pointer are not scanned for nul. Any interior nul values will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16086,"byte_end":16178,"line_start":133,"line_end":133,"column_start":5,"column_end":97}},{"value":"/ result in an invalid `UCStr`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16183,"byte_end":16216,"line_start":134,"line_end":134,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16221,"byte_end":16224,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16229,"byte_end":16241,"line_start":136,"line_end":136,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16246,"byte_end":16249,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null or if a nul value is not found at offset `len` of `p`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16254,"byte_end":16348,"line_start":138,"line_end":138,"column_start":5,"column_end":99}},{"value":"/ Only pointers with a nul terminator are valid.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16353,"byte_end":16403,"line_start":139,"line_end":139,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16408,"byte_end":16411,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16416,"byte_end":16428,"line_start":141,"line_end":141,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16433,"byte_end":16436,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16441,"byte_end":16531,"line_start":143,"line_end":143,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16536,"byte_end":16626,"line_start":144,"line_end":144,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16631,"byte_end":16726,"line_start":145,"line_end":145,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16731,"byte_end":16769,"line_start":146,"line_end":146,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":17362,"byte_end":17381,"line_start":160,"line_end":160,"column_start":12,"column_end":31},"name":"from_slice_with_nul","qualname":"<UCStr<C>>::from_slice_with_nul","value":"pub fn from_slice_with_nul(&[C]) -> Result<&Self, MissingNulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCStr` from a slice of values that has a nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a `UCStr` from a slice of values that has a nul terminator.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":16974,"byte_end":17048,"line_start":152,"line_end":152,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":17053,"byte_end":17056,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ The slice will be scanned for nul values. When a nul value is found, it is treated as the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":17061,"byte_end":17154,"line_start":154,"line_end":154,"column_start":5,"column_end":98}},{"value":"/ terminator for the string, and the `UCStr` slice will be truncated to that nul.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":17159,"byte_end":17242,"line_start":155,"line_end":155,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":17247,"byte_end":17250,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":17255,"byte_end":17268,"line_start":157,"line_end":157,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":17273,"byte_end":17276,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ If there are no no nul values in the slice, an error is returned.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":17281,"byte_end":17350,"line_start":159,"line_end":159,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18041,"byte_end":18070,"line_start":175,"line_end":175,"column_start":19,"column_end":48},"name":"from_slice_with_nul_unchecked","qualname":"<UCStr<C>>::from_slice_with_nul_unchecked","value":"pub unsafe fn from_slice_with_nul_unchecked(&[C]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCStr` from a slice of values that has a nul terminator. No\n checking for nul values is performed.","sig":null,"attributes":[{"value":"/ Constructs a `UCStr` from a slice of values that has a nul terminator. No","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":17659,"byte_end":17736,"line_start":167,"line_end":167,"column_start":5,"column_end":82}},{"value":"/ checking for nul values is performed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":17741,"byte_end":17782,"line_start":168,"line_end":168,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":17787,"byte_end":17790,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":17795,"byte_end":17807,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":17812,"byte_end":17815,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it can lead to invalid `UCStr` values when the slice","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":17820,"byte_end":17908,"line_start":172,"line_end":172,"column_start":5,"column_end":93}},{"value":"/ is missing a terminating nul value or there are non-terminating interior nul values","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":17913,"byte_end":18000,"line_start":173,"line_end":173,"column_start":5,"column_end":92}},{"value":"/ in the slice.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18005,"byte_end":18022,"line_start":174,"line_end":174,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18231,"byte_end":18242,"line_start":181,"line_end":181,"column_start":12,"column_end":23},"name":"to_ucstring","qualname":"<UCStr<C>>::to_ucstring","value":"pub fn to_ucstring(&Self) -> crate::UCString<C>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to an new owned `UString`.\n","sig":null,"attributes":[{"value":"/ Copies the wide string to an new owned `UString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18136,"byte_end":18189,"line_start":179,"line_end":179,"column_start":5,"column_end":58}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18194,"byte_end":18219,"line_start":180,"line_end":180,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19593,"byte_end":19603,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"to_ustring","qualname":"<UCStr<C>>::to_ustring","value":"pub fn to_ustring(&Self) -> crate::UString<C>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a new owned `UString`.","sig":null,"attributes":[{"value":"/ Copies the wide string to a new owned `UString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18372,"byte_end":18424,"line_start":185,"line_end":185,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18429,"byte_end":18432,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The `UString` will **not** have a nul terminator.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18437,"byte_end":18490,"line_start":187,"line_end":187,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18495,"byte_end":18498,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18503,"byte_end":18517,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18522,"byte_end":18525,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18530,"byte_end":18541,"line_start":191,"line_end":191,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18546,"byte_end":18577,"line_start":192,"line_end":192,"column_start":5,"column_end":36}},{"value":"/ let wcstr = U16CString::from_str(\"MyString\").unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18582,"byte_end":18640,"line_start":193,"line_end":193,"column_start":5,"column_end":63}},{"value":"/ // Convert U16CString to a U16String","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18645,"byte_end":18685,"line_start":194,"line_end":194,"column_start":5,"column_end":45}},{"value":"/ let wstr = wcstr.to_ustring();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18690,"byte_end":18724,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18729,"byte_end":18732,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ // U16CString will have a terminating nul","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18737,"byte_end":18782,"line_start":197,"line_end":197,"column_start":5,"column_end":50}},{"value":"/ let wcvec = wcstr.into_vec_with_nul();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18787,"byte_end":18829,"line_start":198,"line_end":198,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(wcvec[wcvec.len()-1], 0);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18834,"byte_end":18874,"line_start":199,"line_end":199,"column_start":5,"column_end":45}},{"value":"/ // The resulting U16String will not have the terminating nul","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18879,"byte_end":18943,"line_start":200,"line_end":200,"column_start":5,"column_end":69}},{"value":"/ let wvec = wstr.into_vec();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18948,"byte_end":18979,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/ assert_ne!(wvec[wvec.len()-1], 0);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":18984,"byte_end":19022,"line_start":202,"line_end":202,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19027,"byte_end":19034,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19039,"byte_end":19042,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19047,"byte_end":19058,"line_start":205,"line_end":205,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19063,"byte_end":19094,"line_start":206,"line_end":206,"column_start":5,"column_end":36}},{"value":"/ let wcstr = U32CString::from_str(\"MyString\").unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19099,"byte_end":19157,"line_start":207,"line_end":207,"column_start":5,"column_end":63}},{"value":"/ // Convert U32CString to a U32String","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19162,"byte_end":19202,"line_start":208,"line_end":208,"column_start":5,"column_end":45}},{"value":"/ let wstr = wcstr.to_ustring();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19207,"byte_end":19241,"line_start":209,"line_end":209,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19246,"byte_end":19249,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ // U32CString will have a terminating nul","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19254,"byte_end":19299,"line_start":211,"line_end":211,"column_start":5,"column_end":50}},{"value":"/ let wcvec = wcstr.into_vec_with_nul();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19304,"byte_end":19346,"line_start":212,"line_end":212,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(wcvec[wcvec.len()-1], 0);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19351,"byte_end":19391,"line_start":213,"line_end":213,"column_start":5,"column_end":45}},{"value":"/ // The resulting U32String will not have the terminating nul","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19396,"byte_end":19460,"line_start":214,"line_end":214,"column_start":5,"column_end":69}},{"value":"/ let wvec = wstr.into_vec();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19465,"byte_end":19496,"line_start":215,"line_end":215,"column_start":5,"column_end":36}},{"value":"/ assert_ne!(wvec[wvec.len()-1], 0);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19501,"byte_end":19539,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19544,"byte_end":19551,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19556,"byte_end":19581,"line_start":218,"line_end":218,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19817,"byte_end":19825,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<UCStr<C>>::as_slice","value":"pub fn as_slice(&Self) -> &[C]","parent":null,"children":[],"decl_id":null,"docs":" Converts to a slice of the wide string.","sig":null,"attributes":[{"value":"/ Converts to a slice of the wide string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19695,"byte_end":19738,"line_start":223,"line_end":223,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19743,"byte_end":19746,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The slice will **not** include the nul terminator.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19751,"byte_end":19805,"line_start":225,"line_end":225,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19973,"byte_end":19990,"line_start":231,"line_end":231,"column_start":12,"column_end":29},"name":"as_slice_with_nul","qualname":"<UCStr<C>>::as_slice_with_nul","value":"pub fn as_slice_with_nul(&Self) -> &[C]","parent":null,"children":[],"decl_id":null,"docs":" Converts to a slice of the wide string, including the nul terminator.\n","sig":null,"attributes":[{"value":"/ Converts to a slice of the wide string, including the nul terminator.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":19888,"byte_end":19961,"line_start":230,"line_end":230,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20181,"byte_end":20187,"line_start":238,"line_end":238,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<UCStr<C>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const C","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the wide string.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the wide string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20039,"byte_end":20084,"line_start":235,"line_end":235,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20089,"byte_end":20092,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The pointer is valid only as long as the lifetime of this reference.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20097,"byte_end":20169,"line_start":237,"line_end":237,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20391,"byte_end":20394,"line_start":244,"line_end":244,"column_start":12,"column_end":15},"name":"len","qualname":"<UCStr<C>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the wide string as number of elements (**not** number of bytes)\n **not** including nul terminator.\n","sig":null,"attributes":[{"value":"/ Returns the length of the wide string as number of elements (**not** number of bytes)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20248,"byte_end":20337,"line_start":242,"line_end":242,"column_start":5,"column_end":94}},{"value":"/ **not** including nul terminator.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20342,"byte_end":20379,"line_start":243,"line_end":243,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20553,"byte_end":20561,"line_start":249,"line_end":249,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<UCStr<C>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this wide string contains no data (i.e. is only the nul terminator).\n","sig":null,"attributes":[{"value":"/ Returns whether this wide string contains no data (i.e. is only the nul terminator).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20453,"byte_end":20541,"line_start":248,"line_end":248,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21383,"byte_end":21396,"line_start":275,"line_end":275,"column_start":12,"column_end":25},"name":"into_ucstring","qualname":"<UCStr<C>>::into_ucstring","value":"pub fn into_ucstring(Box<Self>) -> crate::UCString<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Box<UCStr>` into a `UCString` without copying or allocating.","sig":null,"attributes":[{"value":"/ Converts a `Box<UCStr>` into a `UCString` without copying or allocating.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20614,"byte_end":20690,"line_start":253,"line_end":253,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20695,"byte_end":20698,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20703,"byte_end":20717,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20722,"byte_end":20725,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20730,"byte_end":20737,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20742,"byte_end":20773,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20778,"byte_end":20781,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ let v = vec![102u16, 111u16, 111u16]; // \"foo\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20786,"byte_end":20836,"line_start":260,"line_end":260,"column_start":5,"column_end":55}},{"value":"/ let c_string = U16CString::new(v.clone()).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20841,"byte_end":20896,"line_start":261,"line_end":261,"column_start":5,"column_end":60}},{"value":"/ let boxed = c_string.into_boxed_ucstr();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20901,"byte_end":20945,"line_start":262,"line_end":262,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(boxed.into_ucstring(), U16CString::new(v).unwrap());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":20950,"byte_end":21017,"line_start":263,"line_end":263,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21022,"byte_end":21029,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21034,"byte_end":21037,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21042,"byte_end":21049,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21054,"byte_end":21085,"line_start":267,"line_end":267,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21090,"byte_end":21093,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let v = vec![102u32, 111u32, 111u32]; // \"foo\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21098,"byte_end":21148,"line_start":269,"line_end":269,"column_start":5,"column_end":55}},{"value":"/ let c_string = U32CString::new(v.clone()).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21153,"byte_end":21208,"line_start":270,"line_end":270,"column_start":5,"column_end":60}},{"value":"/ let boxed = c_string.into_boxed_ucstr();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21213,"byte_end":21257,"line_start":271,"line_end":271,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(boxed.into_ucstring(), U32CString::new(v).unwrap());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21262,"byte_end":21329,"line_start":272,"line_end":272,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21334,"byte_end":21341,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21346,"byte_end":21371,"line_start":274,"line_end":274,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22495,"byte_end":22507,"line_start":309,"line_end":309,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<UCStr<u16>>::to_os_string","value":"pub fn to_os_string(&Self) -> std::ffi::OsString","parent":null,"children":[],"decl_id":null,"docs":" Decodes a wide string to an owned `OsString`.","sig":null,"attributes":[{"value":"/ Decodes a wide string to an owned `OsString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21741,"byte_end":21790,"line_start":289,"line_end":289,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21795,"byte_end":21798,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the `U16CStr`. Since `U16CStr` makes no guarantees that it is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21803,"byte_end":21896,"line_start":291,"line_end":291,"column_start":5,"column_end":98}},{"value":"/ valid UTF-16, there is no guarantee that the resulting `OsString` will be valid data. The","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21901,"byte_end":21994,"line_start":292,"line_end":292,"column_start":5,"column_end":98}},{"value":"/ `OsString` will **not** have a nul terminator.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21999,"byte_end":22049,"line_start":293,"line_end":293,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22054,"byte_end":22057,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22062,"byte_end":22076,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22081,"byte_end":22084,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22089,"byte_end":22100,"line_start":297,"line_end":297,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22105,"byte_end":22136,"line_start":298,"line_end":298,"column_start":5,"column_end":36}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22141,"byte_end":22168,"line_start":299,"line_end":299,"column_start":5,"column_end":32}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22173,"byte_end":22196,"line_start":300,"line_end":300,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22201,"byte_end":22244,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22249,"byte_end":22297,"line_start":302,"line_end":302,"column_start":5,"column_end":53}},{"value":"/ // Create an OsString from the wide string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22302,"byte_end":22348,"line_start":303,"line_end":303,"column_start":5,"column_end":51}},{"value":"/ let osstr = wstr.to_os_string();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22353,"byte_end":22389,"line_start":304,"line_end":304,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22394,"byte_end":22397,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(osstr, OsString::from(s));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22402,"byte_end":22443,"line_start":306,"line_end":306,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22448,"byte_end":22455,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22460,"byte_end":22483,"line_start":308,"line_end":308,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23192,"byte_end":23201,"line_start":332,"line_end":332,"column_start":12,"column_end":21},"name":"to_string","qualname":"<UCStr<u16>>::to_string","value":"pub fn to_string(&Self) -> Result<String, FromUtf16Error>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String` if it contains valid UTF-16 data.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String` if it contains valid UTF-16 data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22605,"byte_end":22679,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22684,"byte_end":22687,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22692,"byte_end":22706,"line_start":315,"line_end":315,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22711,"byte_end":22714,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the string contains any invalid UTF-16 data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22719,"byte_end":22787,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22792,"byte_end":22795,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22800,"byte_end":22814,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22819,"byte_end":22822,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22827,"byte_end":22838,"line_start":321,"line_end":321,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22843,"byte_end":22874,"line_start":322,"line_end":322,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22879,"byte_end":22902,"line_start":323,"line_end":323,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22907,"byte_end":22950,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":22955,"byte_end":23003,"line_start":325,"line_end":325,"column_start":5,"column_end":53}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23008,"byte_end":23059,"line_start":326,"line_end":326,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23064,"byte_end":23103,"line_start":327,"line_end":327,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23108,"byte_end":23111,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23116,"byte_end":23138,"line_start":329,"line_end":329,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23143,"byte_end":23150,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23155,"byte_end":23180,"line_start":331,"line_end":331,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23833,"byte_end":23848,"line_start":353,"line_end":353,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<UCStr<u16>>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String`.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23300,"byte_end":23341,"line_start":336,"line_end":336,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23346,"byte_end":23349,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with U+FFFD REPLACEMENT CHARACTER.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23354,"byte_end":23431,"line_start":338,"line_end":338,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23436,"byte_end":23439,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23444,"byte_end":23458,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23463,"byte_end":23466,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23471,"byte_end":23482,"line_start":342,"line_end":342,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23487,"byte_end":23518,"line_start":343,"line_end":343,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23523,"byte_end":23546,"line_start":344,"line_end":344,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23551,"byte_end":23594,"line_start":345,"line_end":345,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23599,"byte_end":23647,"line_start":346,"line_end":346,"column_start":5,"column_end":53}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23652,"byte_end":23703,"line_start":347,"line_end":347,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23708,"byte_end":23744,"line_start":348,"line_end":348,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23749,"byte_end":23752,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23757,"byte_end":23779,"line_start":350,"line_end":350,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23784,"byte_end":23791,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23796,"byte_end":23821,"line_start":352,"line_end":352,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24936,"byte_end":24953,"line_start":381,"line_end":381,"column_start":19,"column_end":36},"name":"from_char_ptr_str","qualname":"<UCStr<u32>>::from_char_ptr_str","value":"pub unsafe fn from_char_ptr_str<'a>(*const char) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32Str` from a `char` nul-terminated string pointer.","sig":null,"attributes":[{"value":"/ Constructs a `U32Str` from a `char` nul-terminated string pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23949,"byte_end":24019,"line_start":359,"line_end":359,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24024,"byte_end":24027,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This will scan for nul values beginning with `p`. The first nul value will be used as the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24032,"byte_end":24125,"line_start":361,"line_end":361,"column_start":5,"column_end":98}},{"value":"/ nul terminator for the string, similar to how libc string functions such as `strlen` work.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24130,"byte_end":24224,"line_start":362,"line_end":362,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24229,"byte_end":24232,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24237,"byte_end":24249,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24254,"byte_end":24257,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24262,"byte_end":24355,"line_start":366,"line_end":366,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24360,"byte_end":24435,"line_start":367,"line_end":367,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24440,"byte_end":24443,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `p` must be non-null.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24448,"byte_end":24473,"line_start":369,"line_end":369,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24478,"byte_end":24481,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24486,"byte_end":24498,"line_start":371,"line_end":371,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24503,"byte_end":24506,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24511,"byte_end":24551,"line_start":373,"line_end":373,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24556,"byte_end":24559,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24564,"byte_end":24576,"line_start":375,"line_end":375,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24581,"byte_end":24584,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24589,"byte_end":24679,"line_start":377,"line_end":377,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24684,"byte_end":24774,"line_start":378,"line_end":378,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24779,"byte_end":24874,"line_start":379,"line_end":379,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":24879,"byte_end":24917,"line_start":380,"line_end":380,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":26310,"byte_end":26332,"line_start":412,"line_end":412,"column_start":19,"column_end":41},"name":"from_char_ptr_with_nul","qualname":"<UCStr<u32>>::from_char_ptr_with_nul","value":"pub unsafe fn from_char_ptr_with_nul<'a>(*const char, usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32Str` from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `U32Str` from a `char` pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25044,"byte_end":25105,"line_start":385,"line_end":385,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25110,"byte_end":25113,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes, and does","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25118,"byte_end":25212,"line_start":387,"line_end":387,"column_start":5,"column_end":99}},{"value":"/ **not** include the nul terminator of the string. Thus, a `len` of 0 is valid and means that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25217,"byte_end":25313,"line_start":388,"line_end":388,"column_start":5,"column_end":101}},{"value":"/ `p` is a pointer directly to the nul terminator of the string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25318,"byte_end":25384,"line_start":389,"line_end":389,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25389,"byte_end":25392,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25397,"byte_end":25409,"line_start":391,"line_end":391,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25414,"byte_end":25417,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25422,"byte_end":25516,"line_start":393,"line_end":393,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25521,"byte_end":25534,"line_start":394,"line_end":394,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25539,"byte_end":25542,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ `p` must be non-null, even for zero `len`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25547,"byte_end":25593,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25598,"byte_end":25601,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ The interior values of the pointer are not scanned for nul. Any interior nul values will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25606,"byte_end":25698,"line_start":398,"line_end":398,"column_start":5,"column_end":97}},{"value":"/ result in an invalid `U32CStr`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25703,"byte_end":25738,"line_start":399,"line_end":399,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25743,"byte_end":25746,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25751,"byte_end":25763,"line_start":401,"line_end":401,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25768,"byte_end":25771,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null or if a nul value is not found at offset `len` of `p`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25776,"byte_end":25870,"line_start":403,"line_end":403,"column_start":5,"column_end":99}},{"value":"/ Only pointers with a nul terminator are valid.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25875,"byte_end":25925,"line_start":404,"line_end":404,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25930,"byte_end":25933,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25938,"byte_end":25950,"line_start":406,"line_end":406,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25955,"byte_end":25958,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":25963,"byte_end":26053,"line_start":408,"line_end":408,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":26058,"byte_end":26148,"line_start":409,"line_end":409,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":26153,"byte_end":26248,"line_start":410,"line_end":410,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":26253,"byte_end":26291,"line_start":411,"line_end":411,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":26842,"byte_end":26866,"line_start":424,"line_end":424,"column_start":12,"column_end":36},"name":"from_char_slice_with_nul","qualname":"<UCStr<u32>>::from_char_slice_with_nul","value":"pub fn from_char_slice_with_nul(&[char])\n-> Result<&Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CStr` from a slice of `char` values that has a nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a `U32CStr` from a slice of `char` values that has a nul terminator.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":26445,"byte_end":26528,"line_start":416,"line_end":416,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":26533,"byte_end":26536,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ The slice will be scanned for nul values. When a nul value is found, it is treated as the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":26541,"byte_end":26634,"line_start":418,"line_end":418,"column_start":5,"column_end":98}},{"value":"/ terminator for the string, and the `U32CStr` slice will be truncated to that nul.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":26639,"byte_end":26724,"line_start":419,"line_end":419,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":26729,"byte_end":26732,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":26737,"byte_end":26750,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":26755,"byte_end":26758,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ If there are no no nul values in `slice`, an error is returned.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":26763,"byte_end":26830,"line_start":423,"line_end":423,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27395,"byte_end":27429,"line_start":436,"line_end":436,"column_start":19,"column_end":53},"name":"from_char_slice_with_nul_unchecked","qualname":"<UCStr<u32>>::from_char_slice_with_nul_unchecked","value":"pub unsafe fn from_char_slice_with_nul_unchecked(&[char]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CStr` from a slice of `char` values that has a nul terminator. No\n checking for nul values is performed.","sig":null,"attributes":[{"value":"/ Constructs a `U32CStr` from a slice of `char` values that has a nul terminator. No","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27004,"byte_end":27090,"line_start":428,"line_end":428,"column_start":5,"column_end":91}},{"value":"/ checking for nul values is performed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27095,"byte_end":27136,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27141,"byte_end":27144,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27149,"byte_end":27161,"line_start":431,"line_end":431,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27166,"byte_end":27169,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it can lead to invalid `U32CStr` values when `slice`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27174,"byte_end":27262,"line_start":433,"line_end":433,"column_start":5,"column_end":93}},{"value":"/ is missing a terminating nul value or there are non-terminating interior nul values","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27267,"byte_end":27354,"line_start":434,"line_end":434,"column_start":5,"column_end":92}},{"value":"/ in the slice.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27359,"byte_end":27376,"line_start":435,"line_end":435,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28290,"byte_end":28302,"line_start":460,"line_end":460,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<UCStr<u32>>::to_os_string","value":"pub fn to_os_string(&Self) -> std::ffi::OsString","parent":null,"children":[],"decl_id":null,"docs":" Decodes a wide string to an owned `OsString`.","sig":null,"attributes":[{"value":"/ Decodes a wide string to an owned `OsString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27536,"byte_end":27585,"line_start":440,"line_end":440,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27590,"byte_end":27593,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the `U32CStr`. Since `U32CStr` makes no guarantees that it is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27598,"byte_end":27691,"line_start":442,"line_end":442,"column_start":5,"column_end":98}},{"value":"/ valid UTF-32, there is no guarantee that the resulting `OsString` will be valid data. The","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27696,"byte_end":27789,"line_start":443,"line_end":443,"column_start":5,"column_end":98}},{"value":"/ `OsString` will **not** have a nul terminator.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27794,"byte_end":27844,"line_start":444,"line_end":444,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27849,"byte_end":27852,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27857,"byte_end":27871,"line_start":446,"line_end":446,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27876,"byte_end":27879,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27884,"byte_end":27895,"line_start":448,"line_end":448,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27900,"byte_end":27931,"line_start":449,"line_end":449,"column_start":5,"column_end":36}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27936,"byte_end":27963,"line_start":450,"line_end":450,"column_start":5,"column_end":32}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27968,"byte_end":27991,"line_start":451,"line_end":451,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":27996,"byte_end":28039,"line_start":452,"line_end":452,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28044,"byte_end":28092,"line_start":453,"line_end":453,"column_start":5,"column_end":53}},{"value":"/ // Create an OsString from the wide string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28097,"byte_end":28143,"line_start":454,"line_end":454,"column_start":5,"column_end":51}},{"value":"/ let osstr = wstr.to_os_string();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28148,"byte_end":28184,"line_start":455,"line_end":455,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28189,"byte_end":28192,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(osstr, OsString::from(s));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28197,"byte_end":28238,"line_start":457,"line_end":457,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28243,"byte_end":28250,"line_start":458,"line_end":458,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28255,"byte_end":28278,"line_start":459,"line_end":459,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28973,"byte_end":28982,"line_start":483,"line_end":483,"column_start":12,"column_end":21},"name":"to_string","qualname":"<UCStr<u32>>::to_string","value":"pub fn to_string(&Self) -> Result<String, crate::FromUtf32Error>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String` if it contains valid UTF-32 data.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String` if it contains valid UTF-32 data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28386,"byte_end":28460,"line_start":464,"line_end":464,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28465,"byte_end":28468,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28473,"byte_end":28487,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28492,"byte_end":28495,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the string contains any invalid UTF-32 data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28500,"byte_end":28568,"line_start":468,"line_end":468,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28573,"byte_end":28576,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28581,"byte_end":28595,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28600,"byte_end":28603,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28608,"byte_end":28619,"line_start":472,"line_end":472,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28624,"byte_end":28655,"line_start":473,"line_end":473,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28660,"byte_end":28683,"line_start":474,"line_end":474,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28688,"byte_end":28731,"line_start":475,"line_end":475,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28736,"byte_end":28784,"line_start":476,"line_end":476,"column_start":5,"column_end":53}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28789,"byte_end":28840,"line_start":477,"line_end":477,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28845,"byte_end":28884,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28889,"byte_end":28892,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28897,"byte_end":28919,"line_start":480,"line_end":480,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28924,"byte_end":28931,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":28936,"byte_end":28961,"line_start":482,"line_end":482,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29615,"byte_end":29630,"line_start":504,"line_end":504,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<UCStr<u32>>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String`.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29082,"byte_end":29123,"line_start":487,"line_end":487,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29128,"byte_end":29131,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with U+FFFD REPLACEMENT CHARACTER.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29136,"byte_end":29213,"line_start":489,"line_end":489,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29218,"byte_end":29221,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29226,"byte_end":29240,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29245,"byte_end":29248,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29253,"byte_end":29264,"line_start":493,"line_end":493,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29269,"byte_end":29300,"line_start":494,"line_end":494,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29305,"byte_end":29328,"line_start":495,"line_end":495,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29333,"byte_end":29376,"line_start":496,"line_end":496,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29381,"byte_end":29429,"line_start":497,"line_end":497,"column_start":5,"column_end":53}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29434,"byte_end":29485,"line_start":498,"line_end":498,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29490,"byte_end":29526,"line_start":499,"line_end":499,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29531,"byte_end":29534,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29539,"byte_end":29561,"line_start":501,"line_end":501,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29566,"byte_end":29573,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29578,"byte_end":29603,"line_start":503,"line_end":503,"column_start":5,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":30315,"byte_end":30322,"line_start":518,"line_end":518,"column_start":10,"column_end":17},"name":"U16CStr","qualname":"::ucstr::U16CStr","value":"UCStr<u16>","parent":null,"children":[],"decl_id":null,"docs":" C-style wide string reference for `U16CString`.","sig":null,"attributes":[{"value":"/ C-style wide string reference for `U16CString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29703,"byte_end":29754,"line_start":509,"line_end":509,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29755,"byte_end":29758,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ `U16CStr` is aware of nul values. Unless unchecked conversions are used, all `U16CStr`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29759,"byte_end":29849,"line_start":511,"line_end":511,"column_start":1,"column_end":91}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29850,"byte_end":29948,"line_start":512,"line_end":512,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-16 data. These strings are intended to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":29949,"byte_end":30047,"line_start":513,"line_end":513,"column_start":1,"column_end":99}},{"value":"/ be used with FFI functions such as Windows API that may require nul-terminated strings.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":30048,"byte_end":30139,"line_start":514,"line_end":514,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":30140,"byte_end":30143,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/ `U16CStr` can be converted to and from many other string types, including `U16String`,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":30144,"byte_end":30234,"line_start":516,"line_end":516,"column_start":1,"column_end":91}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":30235,"byte_end":30305,"line_start":517,"line_end":517,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":30950,"byte_end":30957,"line_start":529,"line_end":529,"column_start":10,"column_end":17},"name":"U32CStr","qualname":"::ucstr::U32CStr","value":"UCStr<u32>","parent":null,"children":[],"decl_id":null,"docs":" C-style wide string reference for `U32CString`.","sig":null,"attributes":[{"value":"/ C-style wide string reference for `U32CString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":30338,"byte_end":30389,"line_start":520,"line_end":520,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":30390,"byte_end":30393,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ `U32CStr` is aware of nul values. Unless unchecked conversions are used, all `U32CStr`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":30394,"byte_end":30484,"line_start":522,"line_end":522,"column_start":1,"column_end":91}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":30485,"byte_end":30583,"line_start":523,"line_end":523,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-32 data. These strings are intended to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":30584,"byte_end":30682,"line_start":524,"line_end":524,"column_start":1,"column_end":99}},{"value":"/ be used with FFI functions such as Windows API that may require nul-terminated strings.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":30683,"byte_end":30774,"line_start":525,"line_end":525,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":30775,"byte_end":30778,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ `U32CStr` can be converted to and from many other string types, including `U32String`,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":30779,"byte_end":30869,"line_start":527,"line_end":527,"column_start":1,"column_end":91}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":30870,"byte_end":30940,"line_start":528,"line_end":528,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":31098,"byte_end":31106,"line_start":532,"line_end":532,"column_start":10,"column_end":18},"name":"WideCStr","qualname":"::ucstr::WideCStr","value":"UCStr<WideChar>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `U16CStr` or `U32CStr` depending on platform. Intended to match typical C `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"/ Alias for `U16CStr` or `U32CStr` depending on platform. Intended to match typical C `wchar_t` size on platform.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":30973,"byte_end":31088,"line_start":531,"line_end":531,"column_start":1,"column_end":116}}]},{"kind":"Struct","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33139,"byte_end":33147,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"UCString","qualname":"::ucstring::UCString","value":"UCString {  }","parent":null,"children":[{"krate":0,"index":563}],"decl_id":null,"docs":" An owned, mutable C-style \"wide\" string for FFI that is nul-aware and nul-terminated.","sig":null,"attributes":[{"value":"/ An owned, mutable C-style \"wide\" string for FFI that is nul-aware and nul-terminated.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":31518,"byte_end":31607,"line_start":19,"line_end":19,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":31608,"byte_end":31611,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ `UCString` is aware of nul values. Unless unchecked conversions are used, all `UCString`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":31612,"byte_end":31704,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":31705,"byte_end":31803,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-16 or UTF-32 data. These strings are","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":31804,"byte_end":31900,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ intended to be used with FFI functions such as Windows API that may require nul-terminated","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":31901,"byte_end":31995,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/ strings.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":31996,"byte_end":32008,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32009,"byte_end":32012,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `UCString` can be converted to and from many other string types, including `UString`,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32013,"byte_end":32102,"line_start":27,"line_end":27,"column_start":1,"column_end":90}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32103,"byte_end":32173,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32174,"byte_end":32177,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Please prefer using the type aliases `U16CString` or `U32CString` or `WideCString` to using","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32178,"byte_end":32273,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"/ this type directly.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32274,"byte_end":32297,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32298,"byte_end":32301,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32302,"byte_end":32316,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32317,"byte_end":32320,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U16CString` and shows how to convert a `U16CString` to a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32321,"byte_end":32417,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/ regular Rust `String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32418,"byte_end":32444,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32445,"byte_end":32448,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32449,"byte_end":32460,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32461,"byte_end":32492,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32493,"byte_end":32512,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32513,"byte_end":32561,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32562,"byte_end":32610,"line_start":42,"line_end":42,"column_start":1,"column_end":49}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32611,"byte_end":32647,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32648,"byte_end":32690,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32691,"byte_end":32724,"line_start":45,"line_end":45,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32725,"byte_end":32732,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32733,"byte_end":32736,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The same example using `U32CString`:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32737,"byte_end":32777,"line_start":48,"line_end":48,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32778,"byte_end":32781,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32782,"byte_end":32793,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32794,"byte_end":32825,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32826,"byte_end":32845,"line_start":52,"line_end":52,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32846,"byte_end":32894,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32895,"byte_end":32943,"line_start":54,"line_end":54,"column_start":1,"column_end":49}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32944,"byte_end":32980,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":32981,"byte_end":33023,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33024,"byte_end":33057,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33058,"byte_end":33065,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33480,"byte_end":33488,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"NulError","qualname":"::ucstring::NulError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned from `UCString` to indicate that an invalid nul value was found.","sig":null,"attributes":[{"value":"/ An error returned from `UCString` to indicate that an invalid nul value was found.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33195,"byte_end":33281,"line_start":64,"line_end":64,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33282,"byte_end":33285,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The error indicates the position in the vector where the nul value was found, as well as","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33286,"byte_end":33378,"line_start":66,"line_end":66,"column_start":1,"column_end":93}},{"value":"/ returning the ownership of the invalid vector.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33379,"byte_end":33429,"line_start":67,"line_end":67,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35378,"byte_end":35381,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"new","qualname":"<UCString<C>>::new","value":"pub fn new<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>)\n-> Result<Self, NulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from a container of wide character data.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from a container of wide character data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33549,"byte_end":33617,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33622,"byte_end":33625,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method will consume the provided data and use the underlying elements to construct a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33630,"byte_end":33723,"line_start":74,"line_end":74,"column_start":5,"column_end":98}},{"value":"/ new string. The data will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33728,"byte_end":33792,"line_start":75,"line_end":75,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33797,"byte_end":33800,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33805,"byte_end":33819,"line_start":77,"line_end":77,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33824,"byte_end":33827,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33832,"byte_end":33904,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain the `Vec` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33909,"byte_end":33996,"line_start":80,"line_end":80,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34001,"byte_end":34004,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34009,"byte_end":34023,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34028,"byte_end":34031,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34036,"byte_end":34047,"line_start":84,"line_end":84,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34052,"byte_end":34083,"line_start":85,"line_end":85,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u16, 104u16, 101u16]; // 'T' 'h' 'e'","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34088,"byte_end":34143,"line_start":86,"line_end":86,"column_start":5,"column_end":60}},{"value":"/ # let cloned = v.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34148,"byte_end":34177,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34182,"byte_end":34225,"line_start":88,"line_end":88,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::new(v).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34230,"byte_end":34274,"line_start":89,"line_end":89,"column_start":5,"column_end":49}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34279,"byte_end":34322,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34327,"byte_end":34334,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34339,"byte_end":34342,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34347,"byte_end":34358,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34363,"byte_end":34394,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u32, 104u32, 101u32]; // 'T' 'h' 'e'","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34399,"byte_end":34454,"line_start":95,"line_end":95,"column_start":5,"column_end":60}},{"value":"/ # let cloned = v.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34459,"byte_end":34488,"line_start":96,"line_end":96,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34493,"byte_end":34536,"line_start":97,"line_end":97,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::new(v).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34541,"byte_end":34585,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34590,"byte_end":34633,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34638,"byte_end":34645,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34650,"byte_end":34653,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34658,"byte_end":34732,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34737,"byte_end":34740,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34745,"byte_end":34756,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34761,"byte_end":34792,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u16, 0u16, 104u16, 101u16]; // 'T' NUL 'h' 'e'","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34797,"byte_end":34862,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34867,"byte_end":34910,"line_start":107,"line_end":107,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::new(v);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34915,"byte_end":34948,"line_start":108,"line_end":108,"column_start":5,"column_end":38}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34953,"byte_end":34979,"line_start":109,"line_end":109,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":34984,"byte_end":35037,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35042,"byte_end":35049,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35054,"byte_end":35057,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35062,"byte_end":35073,"line_start":113,"line_end":113,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35078,"byte_end":35109,"line_start":114,"line_end":114,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u32, 0u32, 104u32, 101u32]; // 'T' NUL 'h' 'e'","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35114,"byte_end":35179,"line_start":115,"line_end":115,"column_start":5,"column_end":70}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35184,"byte_end":35227,"line_start":116,"line_end":116,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::new(v);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35232,"byte_end":35265,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35270,"byte_end":35296,"line_start":118,"line_end":118,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35301,"byte_end":35354,"line_start":119,"line_end":119,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35359,"byte_end":35366,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":37510,"byte_end":37527,"line_start":177,"line_end":177,"column_start":12,"column_end":29},"name":"from_vec_with_nul","qualname":"<UCString<C>>::from_vec_with_nul","value":"pub fn from_vec_with_nul<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>)\n-> Result<Self, MissingNulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from a nul-terminated container of UTF-16 or UTF-32 data.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from a nul-terminated container of UTF-16 or UTF-32 data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35688,"byte_end":35773,"line_start":130,"line_end":130,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35778,"byte_end":35781,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This method will consume the provided data and use the underlying elements to construct a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35786,"byte_end":35879,"line_start":132,"line_end":132,"column_start":5,"column_end":98}},{"value":"/ new string. The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35884,"byte_end":35966,"line_start":133,"line_end":133,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35971,"byte_end":35974,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35979,"byte_end":35993,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":35998,"byte_end":36001,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36006,"byte_end":36096,"line_start":137,"line_end":137,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36101,"byte_end":36164,"line_start":138,"line_end":138,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36169,"byte_end":36172,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36177,"byte_end":36191,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36196,"byte_end":36199,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36204,"byte_end":36215,"line_start":142,"line_end":142,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36220,"byte_end":36251,"line_start":143,"line_end":143,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u16, 104u16, 101u16, 0u16]; // 'T' 'h' 'e' NUL","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36256,"byte_end":36321,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ # let cloned = v[..3].to_owned();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36326,"byte_end":36363,"line_start":145,"line_end":145,"column_start":5,"column_end":42}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36368,"byte_end":36411,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_vec_with_nul(v).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36416,"byte_end":36474,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36479,"byte_end":36522,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36527,"byte_end":36534,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36539,"byte_end":36542,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36547,"byte_end":36558,"line_start":151,"line_end":151,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36563,"byte_end":36594,"line_start":152,"line_end":152,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u32, 104u32, 101u32, 0u32]; // 'T' 'h' 'e' NUL","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36599,"byte_end":36664,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"/ # let cloned = v[..3].to_owned();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36669,"byte_end":36706,"line_start":154,"line_end":154,"column_start":5,"column_end":42}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36711,"byte_end":36754,"line_start":155,"line_end":155,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_vec_with_nul(v).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36759,"byte_end":36817,"line_start":156,"line_end":156,"column_start":5,"column_end":63}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36822,"byte_end":36865,"line_start":157,"line_end":157,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36870,"byte_end":36877,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36882,"byte_end":36885,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36890,"byte_end":36972,"line_start":160,"line_end":160,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36977,"byte_end":36980,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":36985,"byte_end":36996,"line_start":162,"line_end":162,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":37001,"byte_end":37032,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u16, 104u16, 101u16]; // 'T' 'h' 'e'","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":37037,"byte_end":37092,"line_start":164,"line_end":164,"column_start":5,"column_end":60}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":37097,"byte_end":37140,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_vec_with_nul(v);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":37145,"byte_end":37192,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":37197,"byte_end":37223,"line_start":167,"line_end":167,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":37228,"byte_end":37235,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":37240,"byte_end":37243,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":37248,"byte_end":37259,"line_start":170,"line_end":170,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":37264,"byte_end":37295,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u32, 104u32, 101u32]; // 'T' 'h' 'e'","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":37300,"byte_end":37355,"line_start":172,"line_end":172,"column_start":5,"column_end":60}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":37360,"byte_end":37403,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_vec_with_nul(v);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":37408,"byte_end":37455,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":37460,"byte_end":37486,"line_start":175,"line_end":175,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":37491,"byte_end":37498,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38398,"byte_end":38416,"line_start":199,"line_end":199,"column_start":19,"column_end":37},"name":"from_vec_unchecked","qualname":"<UCString<C>>::from_vec_unchecked","value":"pub unsafe fn from_vec_unchecked<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `UCString` from a vector without checking for interior nul values.","sig":null,"attributes":[{"value":"/ Creates a `UCString` from a vector without checking for interior nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":37940,"byte_end":38020,"line_start":189,"line_end":189,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38025,"byte_end":38028,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ A terminating nul value will be appended if the vector does not already have a terminating","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38033,"byte_end":38127,"line_start":191,"line_end":191,"column_start":5,"column_end":99}},{"value":"/ nul.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38132,"byte_end":38140,"line_start":192,"line_end":192,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38145,"byte_end":38148,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38153,"byte_end":38165,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38170,"byte_end":38173,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `new` except that no runtime assertion is made that `v`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38178,"byte_end":38266,"line_start":196,"line_end":196,"column_start":5,"column_end":93}},{"value":"/ contains no nul values. Providing a vector with nul values will result in an invalid","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38271,"byte_end":38359,"line_start":197,"line_end":197,"column_start":5,"column_end":93}},{"value":"/ `UCString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38364,"byte_end":38379,"line_start":198,"line_end":198,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39138,"byte_end":39165,"line_start":217,"line_end":217,"column_start":19,"column_end":46},"name":"from_vec_with_nul_unchecked","qualname":"<UCString<C>>::from_vec_with_nul_unchecked","value":"pub unsafe fn from_vec_with_nul_unchecked<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `UCString` from a vector that should have a nul terminator, without checking\n for any nul values.","sig":null,"attributes":[{"value":"/ Creates a `UCString` from a vector that should have a nul terminator, without checking","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38704,"byte_end":38794,"line_start":209,"line_end":209,"column_start":5,"column_end":95}},{"value":"/ for any nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38799,"byte_end":38822,"line_start":210,"line_end":210,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38827,"byte_end":38830,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38835,"byte_end":38847,"line_start":212,"line_end":212,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38852,"byte_end":38855,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_vec_with_nul` except that no runtime assertion is made","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38860,"byte_end":38953,"line_start":214,"line_end":214,"column_start":5,"column_end":98}},{"value":"/ that `v` contains no nul values. Providing a vector with interior nul values or without a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":38958,"byte_end":39051,"line_start":215,"line_end":215,"column_start":5,"column_end":98}},{"value":"/ terminating nul value will result in an invalid `UCString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39056,"byte_end":39119,"line_start":216,"line_end":216,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39643,"byte_end":39652,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"from_ustr","qualname":"<UCString<C>>::from_ustr","value":"pub fn from_ustr<impl AsRef<UStr<C>>: AsRef<UStr<C>>>(impl AsRef<UStr<C>>)\n-> Result<Self, NulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from anything that can be converted to a `UStr`.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from anything that can be converted to a `UStr`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39286,"byte_end":39362,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39367,"byte_end":39370,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39375,"byte_end":39429,"line_start":225,"line_end":225,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39434,"byte_end":39437,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39442,"byte_end":39456,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39461,"byte_end":39464,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39469,"byte_end":39541,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39546,"byte_end":39631,"line_start":230,"line_end":230,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":40156,"byte_end":40175,"line_start":243,"line_end":243,"column_start":19,"column_end":38},"name":"from_ustr_unchecked","qualname":"<UCString<C>>::from_ustr_unchecked","value":"pub unsafe fn from_ustr_unchecked<impl AsRef<UStr<C>>: AsRef<UStr<C>>>(impl AsRef<UStr<C>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from anything that can be converted to a `UStr`, without\n scanning for invalid nul values.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from anything that can be converted to a `UStr`, without","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39764,"byte_end":39848,"line_start":235,"line_end":235,"column_start":5,"column_end":89}},{"value":"/ scanning for invalid nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39853,"byte_end":39889,"line_start":236,"line_end":236,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39894,"byte_end":39897,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39902,"byte_end":39914,"line_start":238,"line_end":238,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39919,"byte_end":39922,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_u16_str` except that no runtime assertion is made that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":39927,"byte_end":40020,"line_start":240,"line_end":240,"column_start":5,"column_end":98}},{"value":"/ `s` contains no nul values. Providing a string with nul values will result in an invalid","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":40025,"byte_end":40117,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ `UCString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":40122,"byte_end":40137,"line_start":242,"line_end":242,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":40680,"byte_end":40698,"line_start":256,"line_end":256,"column_start":12,"column_end":30},"name":"from_ustr_with_nul","qualname":"<UCString<C>>::from_ustr_with_nul","value":"pub fn from_ustr_with_nul<impl AsRef<UStr<C>>: AsRef<UStr<C>>>(impl AsRef<UStr<C>>)\n-> Result<Self, MissingNulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from anything that can be converted to a `UStr` with a nul\n terminator.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from anything that can be converted to a `UStr` with a nul","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":40281,"byte_end":40367,"line_start":247,"line_end":247,"column_start":5,"column_end":91}},{"value":"/ terminator.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":40372,"byte_end":40387,"line_start":248,"line_end":248,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":40392,"byte_end":40395,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":40400,"byte_end":40470,"line_start":250,"line_end":250,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":40475,"byte_end":40478,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":40483,"byte_end":40497,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":40502,"byte_end":40505,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":40510,"byte_end":40600,"line_start":254,"line_end":254,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":40605,"byte_end":40668,"line_start":255,"line_end":255,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41322,"byte_end":41350,"line_start":268,"line_end":268,"column_start":19,"column_end":47},"name":"from_ustr_with_nul_unchecked","qualname":"<UCString<C>>::from_ustr_with_nul_unchecked","value":"pub unsafe fn from_ustr_with_nul_unchecked<impl AsRef<UStr<C>>: AsRef<UStr<C>>>(impl AsRef<UStr<C>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from anything that can be converted to a `UStr` with a nul\n terminator, without checking the string for any invalid interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from anything that can be converted to a `UStr` with a nul","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":40831,"byte_end":40917,"line_start":260,"line_end":260,"column_start":5,"column_end":91}},{"value":"/ terminator, without checking the string for any invalid interior nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":40922,"byte_end":41002,"line_start":261,"line_end":261,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41007,"byte_end":41010,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41015,"byte_end":41027,"line_start":263,"line_end":263,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41032,"byte_end":41035,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_u16_str_with_nul` except that no runtime assertion is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41040,"byte_end":41132,"line_start":265,"line_end":265,"column_start":5,"column_end":97}},{"value":"/ made that `s` contains no nul values. Providing a vector with interior nul values or","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41137,"byte_end":41225,"line_start":266,"line_end":266,"column_start":5,"column_end":93}},{"value":"/ without a terminating nul value will result in an invalid `UCString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41230,"byte_end":41303,"line_start":267,"line_end":267,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42458,"byte_end":42470,"line_start":294,"line_end":294,"column_start":19,"column_end":31},"name":"from_ptr_str","qualname":"<UCString<C>>::from_ptr_str","value":"pub unsafe fn from_ptr_str(*const C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `UCString` copied from a nul-terminated string pointer.","sig":null,"attributes":[{"value":"/ Constructs a new `UCString` copied from a nul-terminated string pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41465,"byte_end":41541,"line_start":272,"line_end":272,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41546,"byte_end":41549,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ This will scan for nul values beginning with `p`. The first nul value will be used as the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41554,"byte_end":41647,"line_start":274,"line_end":274,"column_start":5,"column_end":98}},{"value":"/ nul terminator for the string, similar to how libc string functions such as `strlen` work.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41652,"byte_end":41746,"line_start":275,"line_end":275,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41751,"byte_end":41754,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41759,"byte_end":41771,"line_start":277,"line_end":277,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41776,"byte_end":41779,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41784,"byte_end":41877,"line_start":279,"line_end":279,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41882,"byte_end":41957,"line_start":280,"line_end":280,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41962,"byte_end":41965,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ `p` must be non-null.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":41970,"byte_end":41995,"line_start":282,"line_end":282,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42000,"byte_end":42003,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42008,"byte_end":42020,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42025,"byte_end":42028,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42033,"byte_end":42073,"line_start":286,"line_end":286,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42078,"byte_end":42081,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42086,"byte_end":42098,"line_start":288,"line_end":288,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42103,"byte_end":42106,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42111,"byte_end":42201,"line_start":290,"line_end":290,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42206,"byte_end":42296,"line_start":291,"line_end":291,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42301,"byte_end":42396,"line_start":292,"line_end":292,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42401,"byte_end":42439,"line_start":293,"line_end":293,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42805,"byte_end":42813,"line_start":305,"line_end":305,"column_start":12,"column_end":20},"name":"as_ucstr","qualname":"<UCString<C>>::as_ucstr","value":"pub fn as_ucstr(&Self) -> &UCStr<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a `UCStr` reference.\n","sig":null,"attributes":[{"value":"/ Converts to a `UCStr` reference.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42757,"byte_end":42793,"line_start":304,"line_end":304,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43106,"byte_end":43114,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<UCString<C>>::into_vec","value":"pub fn into_vec(Self) -> Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts the wide string into a `Vec` without a nul terminator, consuming the string in\n the process.","sig":null,"attributes":[{"value":"/ Converts the wide string into a `Vec` without a nul terminator, consuming the string in","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42860,"byte_end":42951,"line_start":309,"line_end":309,"column_start":5,"column_end":96}},{"value":"/ the process.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42956,"byte_end":42972,"line_start":310,"line_end":310,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42977,"byte_end":42980,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The resulting vector will **not** contain a nul-terminator, and will contain no other nul","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":42985,"byte_end":43078,"line_start":312,"line_end":312,"column_start":5,"column_end":98}},{"value":"/ values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43083,"byte_end":43094,"line_start":313,"line_end":313,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43407,"byte_end":43424,"line_start":323,"line_end":323,"column_start":12,"column_end":29},"name":"into_vec_with_nul","qualname":"<UCString<C>>::into_vec_with_nul","value":"pub fn into_vec_with_nul(Self) -> Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts the wide string into a `Vec`, consuming the string in the process.","sig":null,"attributes":[{"value":"/ Converts the wide string into a `Vec`, consuming the string in the process.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43221,"byte_end":43300,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43305,"byte_end":43308,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The resulting vector will contain a nul-terminator and no interior nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43313,"byte_end":43395,"line_start":322,"line_end":322,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43881,"byte_end":43889,"line_start":336,"line_end":336,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<UCString<C>>::into_raw","value":"pub fn into_raw(Self) -> *mut C","parent":null,"children":[],"decl_id":null,"docs":" Transfers ownership of the wide string to a C caller.","sig":null,"attributes":[{"value":"/ Transfers ownership of the wide string to a C caller.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43491,"byte_end":43548,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43553,"byte_end":43556,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43561,"byte_end":43573,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43578,"byte_end":43581,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ The pointer must be returned to Rust and reconstituted using `from_raw` to be properly","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43586,"byte_end":43676,"line_start":331,"line_end":331,"column_start":5,"column_end":95}},{"value":"/ deallocated. Specifically, one should _not_ use the standard C `free` function to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43681,"byte_end":43766,"line_start":332,"line_end":332,"column_start":5,"column_end":90}},{"value":"/ deallocate this string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43771,"byte_end":43798,"line_start":333,"line_end":333,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43803,"byte_end":43806,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Failure to call `from_raw` will lead to a memory leak.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43811,"byte_end":43869,"line_start":335,"line_end":335,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44300,"byte_end":44308,"line_start":347,"line_end":347,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<UCString<C>>::from_raw","value":"pub unsafe fn from_raw(*mut C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Retakes ownership of a `UCString` that was transferred to C.","sig":null,"attributes":[{"value":"/ Retakes ownership of a `UCString` that was transferred to C.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":43970,"byte_end":44034,"line_start":340,"line_end":340,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44039,"byte_end":44042,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44047,"byte_end":44059,"line_start":342,"line_end":342,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44064,"byte_end":44067,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This should only ever be called with a pointer that was earlier obtained by calling","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44072,"byte_end":44159,"line_start":344,"line_end":344,"column_start":5,"column_end":92}},{"value":"/ `into_raw` on a `UCString`. Additionally, the length of the string will be recalculated","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44164,"byte_end":44255,"line_start":345,"line_end":345,"column_start":5,"column_end":96}},{"value":"/ from the pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44260,"byte_end":44281,"line_start":346,"line_end":346,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45393,"byte_end":45409,"line_start":382,"line_end":382,"column_start":12,"column_end":28},"name":"into_boxed_ucstr","qualname":"<UCString<C>>::into_boxed_ucstr","value":"pub fn into_boxed_ucstr(Self) -> Box<UCStr<C>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `UCString` into a boxed `UCStr`.","sig":null,"attributes":[{"value":"/ Converts this `UCString` into a boxed `UCStr`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44612,"byte_end":44662,"line_start":359,"line_end":359,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44667,"byte_end":44670,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44675,"byte_end":44689,"line_start":361,"line_end":361,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44694,"byte_end":44697,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44702,"byte_end":44709,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ use widestring::{U16CString, U16CStr};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44714,"byte_end":44756,"line_start":364,"line_end":364,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44761,"byte_end":44764,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![102u16, 111u16, 111u16]; // \"foo\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44769,"byte_end":44823,"line_start":366,"line_end":366,"column_start":5,"column_end":59}},{"value":"/ let c_string = U16CString::new(v.clone()).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44828,"byte_end":44883,"line_start":367,"line_end":367,"column_start":5,"column_end":60}},{"value":"/ let boxed = c_string.into_boxed_ucstr();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44888,"byte_end":44932,"line_start":368,"line_end":368,"column_start":5,"column_end":49}},{"value":"/ v.push(0);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44937,"byte_end":44951,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(&*boxed, U16CStr::from_slice_with_nul(&v).unwrap());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":44956,"byte_end":45023,"line_start":370,"line_end":370,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45028,"byte_end":45035,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45040,"byte_end":45043,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45048,"byte_end":45055,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ use widestring::{U32CString, U32CStr};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45060,"byte_end":45102,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45107,"byte_end":45110,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![102u32, 111u32, 111u32]; // \"foo\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45115,"byte_end":45169,"line_start":376,"line_end":376,"column_start":5,"column_end":59}},{"value":"/ let c_string = U32CString::new(v.clone()).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45174,"byte_end":45229,"line_start":377,"line_end":377,"column_start":5,"column_end":60}},{"value":"/ let boxed = c_string.into_boxed_ucstr();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45234,"byte_end":45278,"line_start":378,"line_end":378,"column_start":5,"column_end":49}},{"value":"/ v.push(0);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45283,"byte_end":45297,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(&*boxed, U32CStr::from_slice_with_nul(&v).unwrap());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45302,"byte_end":45369,"line_start":380,"line_end":380,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45374,"byte_end":45381,"line_start":381,"line_end":381,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46834,"byte_end":46842,"line_start":428,"line_end":428,"column_start":12,"column_end":20},"name":"from_str","qualname":"<UCString<u16>>::from_str","value":"pub fn from_str<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Result<Self, NulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from a `str`.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from a `str`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45854,"byte_end":45897,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45902,"byte_end":45905,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45910,"byte_end":45964,"line_start":401,"line_end":401,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45969,"byte_end":45972,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45977,"byte_end":45991,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45996,"byte_end":45999,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46004,"byte_end":46076,"line_start":405,"line_end":405,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u16>` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46081,"byte_end":46171,"line_start":406,"line_end":406,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46176,"byte_end":46179,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46184,"byte_end":46198,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46203,"byte_end":46206,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46211,"byte_end":46222,"line_start":410,"line_end":410,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46227,"byte_end":46258,"line_start":411,"line_end":411,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46263,"byte_end":46286,"line_start":412,"line_end":412,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46291,"byte_end":46334,"line_start":413,"line_end":413,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46339,"byte_end":46388,"line_start":414,"line_end":414,"column_start":5,"column_end":54}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46393,"byte_end":46438,"line_start":415,"line_end":415,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46443,"byte_end":46450,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46455,"byte_end":46458,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46463,"byte_end":46537,"line_start":418,"line_end":418,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46542,"byte_end":46545,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46550,"byte_end":46561,"line_start":420,"line_end":420,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46566,"byte_end":46597,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46602,"byte_end":46630,"line_start":422,"line_end":422,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46635,"byte_end":46678,"line_start":423,"line_end":423,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46683,"byte_end":46721,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46726,"byte_end":46752,"line_start":425,"line_end":425,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 2);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46757,"byte_end":46810,"line_start":426,"line_end":426,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46815,"byte_end":46822,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47636,"byte_end":47654,"line_start":450,"line_end":450,"column_start":19,"column_end":37},"name":"from_str_unchecked","qualname":"<UCString<u16>>::from_str_unchecked","value":"pub unsafe fn from_str_unchecked<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from a `str`, without checking for interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from a `str`, without checking for interior nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":46995,"byte_end":47080,"line_start":433,"line_end":433,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47085,"byte_end":47088,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47093,"byte_end":47105,"line_start":435,"line_end":435,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47110,"byte_end":47113,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_str` except that no runtime assertion is made that `s`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47118,"byte_end":47211,"line_start":437,"line_end":437,"column_start":5,"column_end":98}},{"value":"/ contains no nul values. Providing a string with nul values will result in an invalid","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47216,"byte_end":47304,"line_start":438,"line_end":438,"column_start":5,"column_end":93}},{"value":"/ `U16CString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47309,"byte_end":47326,"line_start":439,"line_end":439,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47331,"byte_end":47334,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47339,"byte_end":47353,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47358,"byte_end":47361,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47366,"byte_end":47377,"line_start":443,"line_end":443,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47382,"byte_end":47413,"line_start":444,"line_end":444,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47418,"byte_end":47441,"line_start":445,"line_end":445,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47446,"byte_end":47489,"line_start":446,"line_end":446,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U16CString::from_str_unchecked(s) };","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47494,"byte_end":47555,"line_start":447,"line_end":447,"column_start":5,"column_end":66}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47560,"byte_end":47605,"line_start":448,"line_end":448,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47610,"byte_end":47617,"line_start":449,"line_end":449,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48782,"byte_end":48799,"line_start":483,"line_end":483,"column_start":12,"column_end":29},"name":"from_str_with_nul","qualname":"<UCString<u16>>::from_str_with_nul","value":"pub fn from_str_with_nul<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Result<Self, MissingNulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from a `str` with a nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from a `str` with a nul terminator.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47799,"byte_end":47864,"line_start":455,"line_end":455,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47869,"byte_end":47872,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47877,"byte_end":47947,"line_start":457,"line_end":457,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47952,"byte_end":47955,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47960,"byte_end":47974,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47979,"byte_end":47982,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":47987,"byte_end":48077,"line_start":461,"line_end":461,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u16>`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48082,"byte_end":48150,"line_start":462,"line_end":462,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48155,"byte_end":48158,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48163,"byte_end":48177,"line_start":464,"line_end":464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48182,"byte_end":48185,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48190,"byte_end":48201,"line_start":466,"line_end":466,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48206,"byte_end":48237,"line_start":467,"line_end":467,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48242,"byte_end":48270,"line_start":468,"line_end":468,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48275,"byte_end":48318,"line_start":469,"line_end":469,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_str_with_nul(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48323,"byte_end":48381,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48386,"byte_end":48432,"line_start":471,"line_end":471,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48437,"byte_end":48444,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48449,"byte_end":48452,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48457,"byte_end":48539,"line_start":474,"line_end":474,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48544,"byte_end":48547,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48552,"byte_end":48563,"line_start":476,"line_end":476,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48568,"byte_end":48599,"line_start":477,"line_end":477,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48604,"byte_end":48627,"line_start":478,"line_end":478,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48632,"byte_end":48675,"line_start":479,"line_end":479,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_str_with_nul(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48680,"byte_end":48727,"line_start":480,"line_end":480,"column_start":5,"column_end":52}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48732,"byte_end":48758,"line_start":481,"line_end":481,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48763,"byte_end":48770,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49734,"byte_end":49761,"line_start":506,"line_end":506,"column_start":19,"column_end":46},"name":"from_str_with_nul_unchecked","qualname":"<UCString<u16>>::from_str_with_nul_unchecked","value":"pub unsafe fn from_str_with_nul_unchecked<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from str `str` that should have a terminating nul, but without\n checking for any nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from str `str` that should have a terminating nul, but without","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":48973,"byte_end":49065,"line_start":488,"line_end":488,"column_start":5,"column_end":97}},{"value":"/ checking for any nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49070,"byte_end":49102,"line_start":489,"line_end":489,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49107,"byte_end":49110,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49115,"byte_end":49127,"line_start":491,"line_end":491,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49132,"byte_end":49135,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_str_with_nul` except that no runtime assertion is made","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49140,"byte_end":49233,"line_start":493,"line_end":493,"column_start":5,"column_end":98}},{"value":"/ that `s` contains no nul values. Providing a vector with interior nul values or without a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49238,"byte_end":49331,"line_start":494,"line_end":494,"column_start":5,"column_end":98}},{"value":"/ terminating nul value will result in an invalid `U16CString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49336,"byte_end":49401,"line_start":495,"line_end":495,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49406,"byte_end":49409,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49414,"byte_end":49428,"line_start":497,"line_end":497,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49433,"byte_end":49436,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49441,"byte_end":49452,"line_start":499,"line_end":499,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49457,"byte_end":49488,"line_start":500,"line_end":500,"column_start":5,"column_end":36}},{"value":"/ let s = \"My String\\u{0}\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49493,"byte_end":49522,"line_start":501,"line_end":501,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49527,"byte_end":49570,"line_start":502,"line_end":502,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U16CString::from_str_with_nul_unchecked(s) };","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49575,"byte_end":49645,"line_start":503,"line_end":503,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My String\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49650,"byte_end":49703,"line_start":504,"line_end":504,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49708,"byte_end":49715,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50632,"byte_end":50640,"line_start":530,"line_end":530,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<UCString<u16>>::from_ptr","value":"pub unsafe fn from_ptr(*const u16, usize) -> Result<Self, NulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U16CString` copied from a `u16` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U16CString` copied from a `u16` pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49915,"byte_end":49990,"line_start":511,"line_end":511,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":49995,"byte_end":49998,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u16` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50003,"byte_end":50087,"line_start":513,"line_end":513,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50092,"byte_end":50095,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50100,"byte_end":50154,"line_start":515,"line_end":515,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50159,"byte_end":50162,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50167,"byte_end":50181,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50186,"byte_end":50189,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50194,"byte_end":50266,"line_start":519,"line_end":519,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u16>` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50271,"byte_end":50361,"line_start":520,"line_end":520,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50366,"byte_end":50369,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50374,"byte_end":50386,"line_start":522,"line_end":522,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50391,"byte_end":50394,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50399,"byte_end":50493,"line_start":524,"line_end":524,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50498,"byte_end":50511,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50516,"byte_end":50519,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50524,"byte_end":50536,"line_start":527,"line_end":527,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50541,"byte_end":50544,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50549,"byte_end":50613,"line_start":529,"line_end":529,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":51574,"byte_end":51592,"line_start":554,"line_end":554,"column_start":19,"column_end":37},"name":"from_ptr_unchecked","qualname":"<UCString<u16>>::from_ptr_unchecked","value":"pub unsafe fn from_ptr_unchecked(*const u16, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U16CString` copied from a `u16` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U16CString` copied from a `u16` pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50899,"byte_end":50974,"line_start":539,"line_end":539,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50979,"byte_end":50982,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u16` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":50987,"byte_end":51071,"line_start":541,"line_end":541,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":51076,"byte_end":51079,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ The string will **not** be checked for invalid nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":51084,"byte_end":51146,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":51151,"byte_end":51154,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":51159,"byte_end":51171,"line_start":545,"line_end":545,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":51176,"byte_end":51179,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":51184,"byte_end":51278,"line_start":547,"line_end":547,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for invalid nul values is performed, so if any elements","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":51283,"byte_end":51377,"line_start":548,"line_end":548,"column_start":5,"column_end":99}},{"value":"/ of `p` are a nul value, the resulting `U16CString` will be invalid.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":51382,"byte_end":51453,"line_start":549,"line_end":549,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":51458,"byte_end":51461,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":51466,"byte_end":51478,"line_start":551,"line_end":551,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":51483,"byte_end":51486,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":51491,"byte_end":51555,"line_start":553,"line_end":553,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52567,"byte_end":52584,"line_start":582,"line_end":582,"column_start":19,"column_end":36},"name":"from_ptr_with_nul","qualname":"<UCString<u16>>::from_ptr_with_nul","value":"pub unsafe fn from_ptr_with_nul(*const u16, usize)\n-> Result<Self, MissingNulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U16String` copied from a `u16` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U16String` copied from a `u16` pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":51839,"byte_end":51913,"line_start":563,"line_end":563,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":51918,"byte_end":51921,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u16` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":51926,"byte_end":52010,"line_start":565,"line_end":565,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52015,"byte_end":52018,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52023,"byte_end":52093,"line_start":567,"line_end":567,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52098,"byte_end":52101,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52106,"byte_end":52120,"line_start":569,"line_end":569,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52125,"byte_end":52128,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52133,"byte_end":52223,"line_start":571,"line_end":571,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u16>`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52228,"byte_end":52296,"line_start":572,"line_end":572,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52301,"byte_end":52304,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52309,"byte_end":52321,"line_start":574,"line_end":574,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52326,"byte_end":52329,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52334,"byte_end":52428,"line_start":576,"line_end":576,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52433,"byte_end":52446,"line_start":577,"line_end":577,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52451,"byte_end":52454,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52459,"byte_end":52471,"line_start":579,"line_end":579,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52476,"byte_end":52479,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52484,"byte_end":52548,"line_start":581,"line_end":581,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":53734,"byte_end":53761,"line_start":611,"line_end":611,"column_start":19,"column_end":46},"name":"from_ptr_with_nul_unchecked","qualname":"<UCString<u16>>::from_ptr_with_nul_unchecked","value":"pub unsafe fn from_ptr_with_nul_unchecked(*const u16, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U16String` copied from a `u16` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U16String` copied from a `u16` pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52887,"byte_end":52961,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52966,"byte_end":52969,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u16` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":52974,"byte_end":53058,"line_start":596,"line_end":596,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":53063,"byte_end":53066,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ The data should end with a nul terminator, but no checking is done on whether the data","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":53071,"byte_end":53161,"line_start":598,"line_end":598,"column_start":5,"column_end":95}},{"value":"/ actually ends with a nul terminator, or if the data contains any interior nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":53166,"byte_end":53255,"line_start":599,"line_end":599,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":53260,"byte_end":53263,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":53268,"byte_end":53280,"line_start":601,"line_end":601,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":53285,"byte_end":53288,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":53293,"byte_end":53387,"line_start":603,"line_end":603,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for nul values is performed, so if there data does not","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":53392,"byte_end":53485,"line_start":604,"line_end":604,"column_start":5,"column_end":98}},{"value":"/ end with a nul terminator, or if there are any interior nul values, the resulting","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":53490,"byte_end":53575,"line_start":605,"line_end":605,"column_start":5,"column_end":90}},{"value":"/ `U16CString` will be invalid.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":53580,"byte_end":53613,"line_start":606,"line_end":606,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":53618,"byte_end":53621,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":53626,"byte_end":53638,"line_start":608,"line_end":608,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":53643,"byte_end":53646,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":53651,"byte_end":53715,"line_start":610,"line_end":610,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55068,"byte_end":55079,"line_start":650,"line_end":650,"column_start":12,"column_end":23},"name":"from_os_str","qualname":"<UCString<u16>>::from_os_str","value":"pub fn from_os_str<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Result<Self, NulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from anything that can be converted to an `OsStr`.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from anything that can be converted to an `OsStr`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54017,"byte_end":54097,"line_start":620,"line_end":620,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54102,"byte_end":54105,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54110,"byte_end":54164,"line_start":622,"line_end":622,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54169,"byte_end":54172,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54177,"byte_end":54191,"line_start":624,"line_end":624,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54196,"byte_end":54199,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54204,"byte_end":54276,"line_start":626,"line_end":626,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u16>` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54281,"byte_end":54371,"line_start":627,"line_end":627,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54376,"byte_end":54379,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54384,"byte_end":54398,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54403,"byte_end":54406,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54411,"byte_end":54422,"line_start":631,"line_end":631,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54427,"byte_end":54458,"line_start":632,"line_end":632,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54463,"byte_end":54486,"line_start":633,"line_end":633,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54491,"byte_end":54534,"line_start":634,"line_end":634,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_os_str(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54539,"byte_end":54591,"line_start":635,"line_end":635,"column_start":5,"column_end":57}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54596,"byte_end":54641,"line_start":636,"line_end":636,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54646,"byte_end":54653,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54658,"byte_end":54661,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54666,"byte_end":54740,"line_start":639,"line_end":639,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54745,"byte_end":54748,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54753,"byte_end":54764,"line_start":641,"line_end":641,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54769,"byte_end":54800,"line_start":642,"line_end":642,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54805,"byte_end":54833,"line_start":643,"line_end":643,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54838,"byte_end":54881,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_os_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54886,"byte_end":54927,"line_start":645,"line_end":645,"column_start":5,"column_end":46}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54932,"byte_end":54958,"line_start":646,"line_end":646,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 2);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":54963,"byte_end":55016,"line_start":647,"line_end":647,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55021,"byte_end":55028,"line_start":648,"line_end":648,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55033,"byte_end":55056,"line_start":649,"line_end":649,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55958,"byte_end":55979,"line_start":674,"line_end":674,"column_start":19,"column_end":40},"name":"from_os_str_unchecked","qualname":"<UCString<u16>>::from_os_str_unchecked","value":"pub unsafe fn from_os_str_unchecked<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from anything that can be converted to an `OsStr`, without\n checking for interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from anything that can be converted to an `OsStr`, without","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55238,"byte_end":55326,"line_start":655,"line_end":655,"column_start":5,"column_end":93}},{"value":"/ checking for interior nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55331,"byte_end":55368,"line_start":656,"line_end":656,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55373,"byte_end":55376,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55381,"byte_end":55393,"line_start":658,"line_end":658,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55398,"byte_end":55401,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_os_str` except that no runtime assertion is made that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55406,"byte_end":55498,"line_start":660,"line_end":660,"column_start":5,"column_end":97}},{"value":"/ `s` contains no nul values. Providing a string with nul values will result in an invalid","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55503,"byte_end":55595,"line_start":661,"line_end":661,"column_start":5,"column_end":97}},{"value":"/ `U16CString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55600,"byte_end":55617,"line_start":662,"line_end":662,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55622,"byte_end":55625,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55630,"byte_end":55644,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55649,"byte_end":55652,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55657,"byte_end":55668,"line_start":666,"line_end":666,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55673,"byte_end":55704,"line_start":667,"line_end":667,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55709,"byte_end":55732,"line_start":668,"line_end":668,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55737,"byte_end":55780,"line_start":669,"line_end":669,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U16CString::from_os_str_unchecked(s) };","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55785,"byte_end":55849,"line_start":670,"line_end":670,"column_start":5,"column_end":69}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55854,"byte_end":55899,"line_start":671,"line_end":671,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55904,"byte_end":55911,"line_start":672,"line_end":672,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":55916,"byte_end":55939,"line_start":673,"line_end":673,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57192,"byte_end":57212,"line_start":709,"line_end":709,"column_start":12,"column_end":32},"name":"from_os_str_with_nul","qualname":"<UCString<u16>>::from_os_str_with_nul","value":"pub fn from_os_str_with_nul<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Result<Self, MissingNulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from anything that can be converted to an `OsStr` with a nul\n terminator.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from anything that can be converted to an `OsStr` with a nul","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56130,"byte_end":56220,"line_start":679,"line_end":679,"column_start":5,"column_end":95}},{"value":"/ terminator.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56225,"byte_end":56240,"line_start":680,"line_end":680,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56245,"byte_end":56248,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56253,"byte_end":56323,"line_start":682,"line_end":682,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56328,"byte_end":56331,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56336,"byte_end":56350,"line_start":684,"line_end":684,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56355,"byte_end":56358,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56363,"byte_end":56453,"line_start":686,"line_end":686,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u16>`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56458,"byte_end":56526,"line_start":687,"line_end":687,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56531,"byte_end":56534,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56539,"byte_end":56553,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56558,"byte_end":56561,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56566,"byte_end":56577,"line_start":691,"line_end":691,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56582,"byte_end":56613,"line_start":692,"line_end":692,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56618,"byte_end":56646,"line_start":693,"line_end":693,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56651,"byte_end":56694,"line_start":694,"line_end":694,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_os_str_with_nul(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56699,"byte_end":56760,"line_start":695,"line_end":695,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56765,"byte_end":56811,"line_start":696,"line_end":696,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56816,"byte_end":56823,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56828,"byte_end":56831,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56836,"byte_end":56918,"line_start":699,"line_end":699,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56923,"byte_end":56926,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56931,"byte_end":56942,"line_start":701,"line_end":701,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56947,"byte_end":56978,"line_start":702,"line_end":702,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":56983,"byte_end":57006,"line_start":703,"line_end":703,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57011,"byte_end":57054,"line_start":704,"line_end":704,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_os_str_with_nul(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57059,"byte_end":57109,"line_start":705,"line_end":705,"column_start":5,"column_end":55}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57114,"byte_end":57140,"line_start":706,"line_end":706,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57145,"byte_end":57152,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57157,"byte_end":57180,"line_start":708,"line_end":708,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58237,"byte_end":58267,"line_start":735,"line_end":735,"column_start":19,"column_end":49},"name":"from_os_str_with_nul_unchecked","qualname":"<UCString<u16>>::from_os_str_with_nul_unchecked","value":"pub unsafe fn from_os_str_with_nul_unchecked<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from anything that can be converted to an `OsStr` that should\n have a terminating nul, but without checking for any nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from anything that can be converted to an `OsStr` that should","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57407,"byte_end":57498,"line_start":716,"line_end":716,"column_start":5,"column_end":96}},{"value":"/ have a terminating nul, but without checking for any nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57503,"byte_end":57571,"line_start":717,"line_end":717,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57576,"byte_end":57579,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57584,"byte_end":57596,"line_start":719,"line_end":719,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57601,"byte_end":57604,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_os_str_with_nul` except that no runtime assertion is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57609,"byte_end":57700,"line_start":721,"line_end":721,"column_start":5,"column_end":96}},{"value":"/ made that `s` contains no nul values. Providing a vector with interior nul values or","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57705,"byte_end":57793,"line_start":722,"line_end":722,"column_start":5,"column_end":93}},{"value":"/ without a terminating nul value will result in an invalid `U16CString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57798,"byte_end":57873,"line_start":723,"line_end":723,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57878,"byte_end":57881,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57886,"byte_end":57900,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57905,"byte_end":57908,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57913,"byte_end":57924,"line_start":727,"line_end":727,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57929,"byte_end":57960,"line_start":728,"line_end":728,"column_start":5,"column_end":36}},{"value":"/ let s = \"My String\\u{0}\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57965,"byte_end":57994,"line_start":729,"line_end":729,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":57999,"byte_end":58042,"line_start":730,"line_end":730,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U16CString::from_os_str_with_nul_unchecked(s) };","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58047,"byte_end":58120,"line_start":731,"line_end":731,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My String\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58125,"byte_end":58178,"line_start":732,"line_end":732,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58183,"byte_end":58190,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58195,"byte_end":58218,"line_start":734,"line_end":734,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59691,"byte_end":59701,"line_start":773,"line_end":773,"column_start":12,"column_end":22},"name":"from_chars","qualname":"<UCString<u32>>::from_chars","value":"pub fn from_chars<impl Into<Vec<char>>: Into<Vec<char>>>(impl Into<Vec<char>>)\n-> Result<Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a container of wide character data.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a container of wide character data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58450,"byte_end":58520,"line_start":742,"line_end":742,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58525,"byte_end":58528,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This method will consume the provided data and use the underlying elements to construct a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58533,"byte_end":58626,"line_start":744,"line_end":744,"column_start":5,"column_end":98}},{"value":"/ new string. The data will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58631,"byte_end":58695,"line_start":745,"line_end":745,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58700,"byte_end":58703,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58708,"byte_end":58722,"line_start":747,"line_end":747,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58727,"byte_end":58730,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58735,"byte_end":58807,"line_start":749,"line_end":749,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain the `Vec<u32>` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58812,"byte_end":58904,"line_start":750,"line_end":750,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58909,"byte_end":58912,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58917,"byte_end":58931,"line_start":752,"line_end":752,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58936,"byte_end":58939,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58944,"byte_end":58955,"line_start":754,"line_end":754,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58960,"byte_end":58991,"line_start":755,"line_end":755,"column_start":5,"column_end":36}},{"value":"/ let v: Vec<char> = \"Test\".chars().collect();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58996,"byte_end":59044,"line_start":756,"line_end":756,"column_start":5,"column_end":53}},{"value":"/ # let cloned: Vec<u32> = v.iter().map(|&c| c as u32).collect();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59049,"byte_end":59116,"line_start":757,"line_end":757,"column_start":5,"column_end":72}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59121,"byte_end":59164,"line_start":758,"line_end":758,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_chars(v).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59169,"byte_end":59220,"line_start":759,"line_end":759,"column_start":5,"column_end":56}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59225,"byte_end":59268,"line_start":760,"line_end":760,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59273,"byte_end":59280,"line_start":761,"line_end":761,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59285,"byte_end":59288,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59293,"byte_end":59367,"line_start":763,"line_end":763,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59372,"byte_end":59375,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59380,"byte_end":59391,"line_start":765,"line_end":765,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59396,"byte_end":59427,"line_start":766,"line_end":766,"column_start":5,"column_end":36}},{"value":"/ let v: Vec<char> = \"T\\u{0}est\".chars().collect();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59432,"byte_end":59485,"line_start":767,"line_end":767,"column_start":5,"column_end":58}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59490,"byte_end":59533,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_chars(v);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59538,"byte_end":59578,"line_start":769,"line_end":769,"column_start":5,"column_end":45}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59583,"byte_end":59609,"line_start":770,"line_end":770,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59614,"byte_end":59667,"line_start":771,"line_end":771,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59672,"byte_end":59679,"line_start":772,"line_end":772,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":61092,"byte_end":61111,"line_start":808,"line_end":808,"column_start":12,"column_end":31},"name":"from_chars_with_nul","qualname":"<UCString<u32>>::from_chars_with_nul","value":"pub fn from_chars_with_nul<impl Into<Vec<char>>: Into<Vec<char>>>(impl Into<Vec<char>>)\n-> Result<Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a nul-terminated container of UTF-32 data.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a nul-terminated container of UTF-32 data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59859,"byte_end":59936,"line_start":778,"line_end":778,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59941,"byte_end":59944,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ This method will consume the provided data and use the underlying elements to construct a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":59949,"byte_end":60042,"line_start":780,"line_end":780,"column_start":5,"column_end":98}},{"value":"/ new string. The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60047,"byte_end":60129,"line_start":781,"line_end":781,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60134,"byte_end":60137,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60142,"byte_end":60156,"line_start":783,"line_end":783,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60161,"byte_end":60164,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60169,"byte_end":60259,"line_start":785,"line_end":785,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u32>`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60264,"byte_end":60332,"line_start":786,"line_end":786,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60337,"byte_end":60340,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60345,"byte_end":60359,"line_start":788,"line_end":788,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60364,"byte_end":60367,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60372,"byte_end":60383,"line_start":790,"line_end":790,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60388,"byte_end":60419,"line_start":791,"line_end":791,"column_start":5,"column_end":36}},{"value":"/ let v: Vec<char> = \"Test\\u{0}\".chars().collect();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60424,"byte_end":60477,"line_start":792,"line_end":792,"column_start":5,"column_end":58}},{"value":"/ # let cloned: Vec<u32> = v[..4].iter().map(|&c| c as u32).collect();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60482,"byte_end":60554,"line_start":793,"line_end":793,"column_start":5,"column_end":77}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60559,"byte_end":60602,"line_start":794,"line_end":794,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_chars_with_nul(v).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60607,"byte_end":60667,"line_start":795,"line_end":795,"column_start":5,"column_end":65}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60672,"byte_end":60715,"line_start":796,"line_end":796,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60720,"byte_end":60727,"line_start":797,"line_end":797,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60732,"byte_end":60735,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60740,"byte_end":60822,"line_start":799,"line_end":799,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60827,"byte_end":60830,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60835,"byte_end":60846,"line_start":801,"line_end":801,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60851,"byte_end":60882,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ let v: Vec<char> = \"Test\".chars().collect();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60887,"byte_end":60935,"line_start":803,"line_end":803,"column_start":5,"column_end":53}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60940,"byte_end":60983,"line_start":804,"line_end":804,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_chars_with_nul(v);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":60988,"byte_end":61037,"line_start":805,"line_end":805,"column_start":5,"column_end":54}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":61042,"byte_end":61068,"line_start":806,"line_end":806,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":61073,"byte_end":61080,"line_start":807,"line_end":807,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":61752,"byte_end":61772,"line_start":823,"line_end":823,"column_start":19,"column_end":39},"name":"from_chars_unchecked","qualname":"<UCString<u32>>::from_chars_unchecked","value":"pub unsafe fn from_chars_unchecked<impl Into<Vec<char>>: Into<Vec<char>>>(impl Into<Vec<char>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `U32CString` from a vector without checking for interior nul values.","sig":null,"attributes":[{"value":"/ Creates a `U32CString` from a vector without checking for interior nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":61290,"byte_end":61372,"line_start":813,"line_end":813,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":61377,"byte_end":61380,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ A terminating nul value will be appended if the vector does not already have a terminating","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":61385,"byte_end":61479,"line_start":815,"line_end":815,"column_start":5,"column_end":99}},{"value":"/ nul.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":61484,"byte_end":61492,"line_start":816,"line_end":816,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":61497,"byte_end":61500,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":61505,"byte_end":61517,"line_start":818,"line_end":818,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":61522,"byte_end":61525,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `new` except that no runtime assertion is made that `v`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":61530,"byte_end":61618,"line_start":820,"line_end":820,"column_start":5,"column_end":93}},{"value":"/ contains no nul values. Providing a vector with nul values will result in an invalid","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":61623,"byte_end":61711,"line_start":821,"line_end":821,"column_start":5,"column_end":93}},{"value":"/ `U32CString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":61716,"byte_end":61733,"line_start":822,"line_end":822,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62349,"byte_end":62378,"line_start":836,"line_end":836,"column_start":19,"column_end":48},"name":"from_chars_with_nul_unchecked","qualname":"<UCString<u32>>::from_chars_with_nul_unchecked","value":"pub unsafe fn from_chars_with_nul_unchecked<impl Into<Vec<char>>: Into<Vec<char>>>(impl Into<Vec<char>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `U32CString` from a vector that should have a nul terminator, without checking\n for any nul values.","sig":null,"attributes":[{"value":"/ Creates a `U32CString` from a vector that should have a nul terminator, without checking","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":61911,"byte_end":62003,"line_start":828,"line_end":828,"column_start":5,"column_end":97}},{"value":"/ for any nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62008,"byte_end":62031,"line_start":829,"line_end":829,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62036,"byte_end":62039,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62044,"byte_end":62056,"line_start":831,"line_end":831,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62061,"byte_end":62064,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_vec_with_nul` except that no runtime assertion is made","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62069,"byte_end":62162,"line_start":833,"line_end":833,"column_start":5,"column_end":98}},{"value":"/ that `v` contains no nul values. Providing a vector with interior nul values or without a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62167,"byte_end":62260,"line_start":834,"line_end":834,"column_start":5,"column_end":98}},{"value":"/ terminating nul value will result in an invalid `U32CString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62265,"byte_end":62330,"line_start":835,"line_end":835,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63506,"byte_end":63514,"line_start":870,"line_end":870,"column_start":12,"column_end":20},"name":"from_str","qualname":"<UCString<u32>>::from_str","value":"pub fn from_str<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Result<Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a `str`.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a `str`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62526,"byte_end":62569,"line_start":841,"line_end":841,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62574,"byte_end":62577,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62582,"byte_end":62636,"line_start":843,"line_end":843,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62641,"byte_end":62644,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62649,"byte_end":62663,"line_start":845,"line_end":845,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62668,"byte_end":62671,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62676,"byte_end":62748,"line_start":847,"line_end":847,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u32>` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62753,"byte_end":62843,"line_start":848,"line_end":848,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62848,"byte_end":62851,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62856,"byte_end":62870,"line_start":850,"line_end":850,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62875,"byte_end":62878,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62883,"byte_end":62894,"line_start":852,"line_end":852,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62899,"byte_end":62930,"line_start":853,"line_end":853,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62935,"byte_end":62958,"line_start":854,"line_end":854,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":62963,"byte_end":63006,"line_start":855,"line_end":855,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63011,"byte_end":63060,"line_start":856,"line_end":856,"column_start":5,"column_end":54}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63065,"byte_end":63110,"line_start":857,"line_end":857,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63115,"byte_end":63122,"line_start":858,"line_end":858,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63127,"byte_end":63130,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63135,"byte_end":63209,"line_start":860,"line_end":860,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63214,"byte_end":63217,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63222,"byte_end":63233,"line_start":862,"line_end":862,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63238,"byte_end":63269,"line_start":863,"line_end":863,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63274,"byte_end":63302,"line_start":864,"line_end":864,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63307,"byte_end":63350,"line_start":865,"line_end":865,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63355,"byte_end":63393,"line_start":866,"line_end":866,"column_start":5,"column_end":43}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63398,"byte_end":63424,"line_start":867,"line_end":867,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 2);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63429,"byte_end":63482,"line_start":868,"line_end":868,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63487,"byte_end":63494,"line_start":869,"line_end":869,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64309,"byte_end":64327,"line_start":892,"line_end":892,"column_start":19,"column_end":37},"name":"from_str_unchecked","qualname":"<UCString<u32>>::from_str_unchecked","value":"pub unsafe fn from_str_unchecked<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a `str`, without checking for interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a `str`, without checking for interior nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63668,"byte_end":63753,"line_start":875,"line_end":875,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63758,"byte_end":63761,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63766,"byte_end":63778,"line_start":877,"line_end":877,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63783,"byte_end":63786,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_str` except that no runtime assertion is made that `s`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63791,"byte_end":63884,"line_start":879,"line_end":879,"column_start":5,"column_end":98}},{"value":"/ contains no nul values. Providing a string with nul values will result in an invalid","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63889,"byte_end":63977,"line_start":880,"line_end":880,"column_start":5,"column_end":93}},{"value":"/ `U32CString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":63982,"byte_end":63999,"line_start":881,"line_end":881,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64004,"byte_end":64007,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64012,"byte_end":64026,"line_start":883,"line_end":883,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64031,"byte_end":64034,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64039,"byte_end":64050,"line_start":885,"line_end":885,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64055,"byte_end":64086,"line_start":886,"line_end":886,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64091,"byte_end":64114,"line_start":887,"line_end":887,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64119,"byte_end":64162,"line_start":888,"line_end":888,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U32CString::from_str_unchecked(s) };","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64167,"byte_end":64228,"line_start":889,"line_end":889,"column_start":5,"column_end":66}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64233,"byte_end":64278,"line_start":890,"line_end":890,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64283,"byte_end":64290,"line_start":891,"line_end":891,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65451,"byte_end":65468,"line_start":925,"line_end":925,"column_start":12,"column_end":29},"name":"from_str_with_nul","qualname":"<UCString<u32>>::from_str_with_nul","value":"pub fn from_str_with_nul<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Result<Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a `str` with a nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a `str` with a nul terminator.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64468,"byte_end":64533,"line_start":897,"line_end":897,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64538,"byte_end":64541,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64546,"byte_end":64616,"line_start":899,"line_end":899,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64621,"byte_end":64624,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64629,"byte_end":64643,"line_start":901,"line_end":901,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64648,"byte_end":64651,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64656,"byte_end":64746,"line_start":903,"line_end":903,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u32>`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64751,"byte_end":64819,"line_start":904,"line_end":904,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64824,"byte_end":64827,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64832,"byte_end":64846,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64851,"byte_end":64854,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64859,"byte_end":64870,"line_start":908,"line_end":908,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64875,"byte_end":64906,"line_start":909,"line_end":909,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64911,"byte_end":64939,"line_start":910,"line_end":910,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64944,"byte_end":64987,"line_start":911,"line_end":911,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_str_with_nul(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":64992,"byte_end":65050,"line_start":912,"line_end":912,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65055,"byte_end":65101,"line_start":913,"line_end":913,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65106,"byte_end":65113,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65118,"byte_end":65121,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65126,"byte_end":65208,"line_start":916,"line_end":916,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65213,"byte_end":65216,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65221,"byte_end":65232,"line_start":918,"line_end":918,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65237,"byte_end":65268,"line_start":919,"line_end":919,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65273,"byte_end":65296,"line_start":920,"line_end":920,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65301,"byte_end":65344,"line_start":921,"line_end":921,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_str_with_nul(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65349,"byte_end":65396,"line_start":922,"line_end":922,"column_start":5,"column_end":52}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65401,"byte_end":65427,"line_start":923,"line_end":923,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65432,"byte_end":65439,"line_start":924,"line_end":924,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66397,"byte_end":66424,"line_start":948,"line_end":948,"column_start":19,"column_end":46},"name":"from_str_with_nul_unchecked","qualname":"<UCString<u32>>::from_str_with_nul_unchecked","value":"pub unsafe fn from_str_with_nul_unchecked<impl AsRef<str>: AsRef<str>>(impl AsRef<str>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a `str` that should have a terminating nul, but without\n checking for any nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a `str` that should have a terminating nul, but without","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65638,"byte_end":65728,"line_start":930,"line_end":930,"column_start":5,"column_end":95}},{"value":"/ checking for any nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65733,"byte_end":65765,"line_start":931,"line_end":931,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65770,"byte_end":65773,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65778,"byte_end":65790,"line_start":933,"line_end":933,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65795,"byte_end":65798,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_str_with_nul` except that no runtime assertion is made","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65803,"byte_end":65896,"line_start":935,"line_end":935,"column_start":5,"column_end":98}},{"value":"/ that `s` contains no nul values. Providing a vector with interior nul values or without a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65901,"byte_end":65994,"line_start":936,"line_end":936,"column_start":5,"column_end":98}},{"value":"/ terminating nul value will result in an invalid `U32CString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":65999,"byte_end":66064,"line_start":937,"line_end":937,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66069,"byte_end":66072,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66077,"byte_end":66091,"line_start":939,"line_end":939,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66096,"byte_end":66099,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66104,"byte_end":66115,"line_start":941,"line_end":941,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66120,"byte_end":66151,"line_start":942,"line_end":942,"column_start":5,"column_end":36}},{"value":"/ let s = \"My String\\u{0}\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66156,"byte_end":66185,"line_start":943,"line_end":943,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66190,"byte_end":66233,"line_start":944,"line_end":944,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U32CString::from_str_with_nul_unchecked(s) };","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66238,"byte_end":66308,"line_start":945,"line_end":945,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My String\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66313,"byte_end":66366,"line_start":946,"line_end":946,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66371,"byte_end":66378,"line_start":947,"line_end":947,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67291,"byte_end":67299,"line_start":972,"line_end":972,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<UCString<u32>>::from_ptr","value":"pub unsafe fn from_ptr(*const u32, usize) -> Result<Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32CString` copied from a `u32` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32CString` copied from a `u32` pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66574,"byte_end":66649,"line_start":953,"line_end":953,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66654,"byte_end":66657,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u32` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66662,"byte_end":66746,"line_start":955,"line_end":955,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66751,"byte_end":66754,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66759,"byte_end":66813,"line_start":957,"line_end":957,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66818,"byte_end":66821,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66826,"byte_end":66840,"line_start":959,"line_end":959,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66845,"byte_end":66848,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66853,"byte_end":66925,"line_start":961,"line_end":961,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u32>` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":66930,"byte_end":67020,"line_start":962,"line_end":962,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67025,"byte_end":67028,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67033,"byte_end":67045,"line_start":964,"line_end":964,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67050,"byte_end":67053,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67058,"byte_end":67152,"line_start":966,"line_end":966,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67157,"byte_end":67170,"line_start":967,"line_end":967,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67175,"byte_end":67178,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67183,"byte_end":67195,"line_start":969,"line_end":969,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67200,"byte_end":67203,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67208,"byte_end":67272,"line_start":971,"line_end":971,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68233,"byte_end":68251,"line_start":996,"line_end":996,"column_start":19,"column_end":37},"name":"from_ptr_unchecked","qualname":"<UCString<u32>>::from_ptr_unchecked","value":"pub unsafe fn from_ptr_unchecked(*const u32, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32CString` copied from a `u32` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32CString` copied from a `u32` pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67558,"byte_end":67633,"line_start":981,"line_end":981,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67638,"byte_end":67641,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u32` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67646,"byte_end":67730,"line_start":983,"line_end":983,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67735,"byte_end":67738,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ The string will **not** be checked for invalid nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67743,"byte_end":67805,"line_start":985,"line_end":985,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67810,"byte_end":67813,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67818,"byte_end":67830,"line_start":987,"line_end":987,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67835,"byte_end":67838,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67843,"byte_end":67937,"line_start":989,"line_end":989,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for invalid nul values is performed, so if any elements","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":67942,"byte_end":68036,"line_start":990,"line_end":990,"column_start":5,"column_end":99}},{"value":"/ of `p` are a nul value, the resulting `U16CString` will be invalid.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68041,"byte_end":68112,"line_start":991,"line_end":991,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68117,"byte_end":68120,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68125,"byte_end":68137,"line_start":993,"line_end":993,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68142,"byte_end":68145,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68150,"byte_end":68214,"line_start":995,"line_end":995,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":69226,"byte_end":69243,"line_start":1024,"line_end":1024,"column_start":19,"column_end":36},"name":"from_ptr_with_nul","qualname":"<UCString<u32>>::from_ptr_with_nul","value":"pub unsafe fn from_ptr_with_nul(*const u32, usize)\n-> Result<Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32String` copied from a `u32` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32String` copied from a `u32` pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68498,"byte_end":68572,"line_start":1005,"line_end":1005,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68577,"byte_end":68580,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u32` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68585,"byte_end":68669,"line_start":1007,"line_end":1007,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68674,"byte_end":68677,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68682,"byte_end":68752,"line_start":1009,"line_end":1009,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68757,"byte_end":68760,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68765,"byte_end":68779,"line_start":1011,"line_end":1011,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68784,"byte_end":68787,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68792,"byte_end":68882,"line_start":1013,"line_end":1013,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u32>`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68887,"byte_end":68955,"line_start":1014,"line_end":1014,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68960,"byte_end":68963,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68968,"byte_end":68980,"line_start":1016,"line_end":1016,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68985,"byte_end":68988,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":68993,"byte_end":69087,"line_start":1018,"line_end":1018,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":69092,"byte_end":69105,"line_start":1019,"line_end":1019,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":69110,"byte_end":69113,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":69118,"byte_end":69130,"line_start":1021,"line_end":1021,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":69135,"byte_end":69138,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":69143,"byte_end":69207,"line_start":1023,"line_end":1023,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70393,"byte_end":70420,"line_start":1053,"line_end":1053,"column_start":19,"column_end":46},"name":"from_ptr_with_nul_unchecked","qualname":"<UCString<u32>>::from_ptr_with_nul_unchecked","value":"pub unsafe fn from_ptr_with_nul_unchecked(*const u32, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32String` copied from a `u32` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32String` copied from a `u32` pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":69546,"byte_end":69620,"line_start":1036,"line_end":1036,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":69625,"byte_end":69628,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u32` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":69633,"byte_end":69717,"line_start":1038,"line_end":1038,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":69722,"byte_end":69725,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ The data should end with a nul terminator, but no checking is done on whether the data","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":69730,"byte_end":69820,"line_start":1040,"line_end":1040,"column_start":5,"column_end":95}},{"value":"/ actually ends with a nul terminator, or if the data contains any interior nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":69825,"byte_end":69914,"line_start":1041,"line_end":1041,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":69919,"byte_end":69922,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":69927,"byte_end":69939,"line_start":1043,"line_end":1043,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":69944,"byte_end":69947,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":69952,"byte_end":70046,"line_start":1045,"line_end":1045,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for nul values is performed, so if there data does not","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70051,"byte_end":70144,"line_start":1046,"line_end":1046,"column_start":5,"column_end":98}},{"value":"/ end with a nul terminator, or if there are any interior nul values, the resulting","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70149,"byte_end":70234,"line_start":1047,"line_end":1047,"column_start":5,"column_end":90}},{"value":"/ `U32CString` will be invalid.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70239,"byte_end":70272,"line_start":1048,"line_end":1048,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70277,"byte_end":70280,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70285,"byte_end":70297,"line_start":1050,"line_end":1050,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70302,"byte_end":70305,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70310,"byte_end":70374,"line_start":1052,"line_end":1052,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71395,"byte_end":71408,"line_start":1081,"line_end":1081,"column_start":19,"column_end":32},"name":"from_char_ptr","qualname":"<UCString<u32>>::from_char_ptr","value":"pub unsafe fn from_char_ptr(*const char, usize) -> Result<Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32CString` copied from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32CString` copied from a `char` pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70676,"byte_end":70752,"line_start":1062,"line_end":1062,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70757,"byte_end":70760,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70765,"byte_end":70850,"line_start":1064,"line_end":1064,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70855,"byte_end":70858,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70863,"byte_end":70917,"line_start":1066,"line_end":1066,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70922,"byte_end":70925,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70930,"byte_end":70944,"line_start":1068,"line_end":1068,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70949,"byte_end":70952,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":70957,"byte_end":71029,"line_start":1070,"line_end":1070,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u32>` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71034,"byte_end":71124,"line_start":1071,"line_end":1071,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71129,"byte_end":71132,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71137,"byte_end":71149,"line_start":1073,"line_end":1073,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71154,"byte_end":71157,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71162,"byte_end":71256,"line_start":1075,"line_end":1075,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71261,"byte_end":71274,"line_start":1076,"line_end":1076,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71279,"byte_end":71282,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71287,"byte_end":71299,"line_start":1078,"line_end":1078,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71304,"byte_end":71307,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71312,"byte_end":71376,"line_start":1080,"line_end":1080,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72214,"byte_end":72237,"line_start":1100,"line_end":1100,"column_start":19,"column_end":42},"name":"from_char_ptr_unchecked","qualname":"<UCString<u32>>::from_char_ptr_unchecked","value":"pub unsafe fn from_char_ptr_unchecked(*const char, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32CString` copied from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32CString` copied from a `char` pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71537,"byte_end":71613,"line_start":1085,"line_end":1085,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71618,"byte_end":71621,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71626,"byte_end":71711,"line_start":1087,"line_end":1087,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71716,"byte_end":71719,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ The string will **not** be checked for invalid nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71724,"byte_end":71786,"line_start":1089,"line_end":1089,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71791,"byte_end":71794,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71799,"byte_end":71811,"line_start":1091,"line_end":1091,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71816,"byte_end":71819,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71824,"byte_end":71918,"line_start":1093,"line_end":1093,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for invalid nul values is performed, so if any elements","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":71923,"byte_end":72017,"line_start":1094,"line_end":1094,"column_start":5,"column_end":99}},{"value":"/ of `p` are a nul value, the resulting `U32CString` will be invalid.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72022,"byte_end":72093,"line_start":1095,"line_end":1095,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72098,"byte_end":72101,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72106,"byte_end":72118,"line_start":1097,"line_end":1097,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72123,"byte_end":72126,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72131,"byte_end":72195,"line_start":1099,"line_end":1099,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":73083,"byte_end":73105,"line_start":1123,"line_end":1123,"column_start":19,"column_end":41},"name":"from_char_ptr_with_nul","qualname":"<UCString<u32>>::from_char_ptr_with_nul","value":"pub unsafe fn from_char_ptr_with_nul(*const char, usize)\n-> Result<Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32String` copied from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32String` copied from a `char` pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72353,"byte_end":72428,"line_start":1104,"line_end":1104,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72433,"byte_end":72436,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72441,"byte_end":72526,"line_start":1106,"line_end":1106,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72531,"byte_end":72534,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72539,"byte_end":72609,"line_start":1108,"line_end":1108,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72614,"byte_end":72617,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72622,"byte_end":72636,"line_start":1110,"line_end":1110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72641,"byte_end":72644,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72649,"byte_end":72739,"line_start":1112,"line_end":1112,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u32>`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72744,"byte_end":72812,"line_start":1113,"line_end":1113,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72817,"byte_end":72820,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72825,"byte_end":72837,"line_start":1115,"line_end":1115,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72842,"byte_end":72845,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72850,"byte_end":72944,"line_start":1117,"line_end":1117,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72949,"byte_end":72962,"line_start":1118,"line_end":1118,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72967,"byte_end":72970,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72975,"byte_end":72987,"line_start":1120,"line_end":1120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":72992,"byte_end":72995,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":73000,"byte_end":73064,"line_start":1122,"line_end":1122,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74122,"byte_end":74154,"line_start":1147,"line_end":1147,"column_start":19,"column_end":51},"name":"from_char_ptr_with_nul_unchecked","qualname":"<UCString<u32>>::from_char_ptr_with_nul_unchecked","value":"pub unsafe fn from_char_ptr_with_nul_unchecked(*const char, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32String` copied from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32String` copied from a `char` pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":73273,"byte_end":73348,"line_start":1130,"line_end":1130,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":73353,"byte_end":73356,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":73361,"byte_end":73446,"line_start":1132,"line_end":1132,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":73451,"byte_end":73454,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ The data should end with a nul terminator, but no checking is done on whether the data","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":73459,"byte_end":73549,"line_start":1134,"line_end":1134,"column_start":5,"column_end":95}},{"value":"/ actually ends with a nul terminator, or if the data contains any interior nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":73554,"byte_end":73643,"line_start":1135,"line_end":1135,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":73648,"byte_end":73651,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":73656,"byte_end":73668,"line_start":1137,"line_end":1137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":73673,"byte_end":73676,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":73681,"byte_end":73775,"line_start":1139,"line_end":1139,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for nul values is performed, so if there data does not","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":73780,"byte_end":73873,"line_start":1140,"line_end":1140,"column_start":5,"column_end":98}},{"value":"/ end with a nul terminator, or if there are any interior nul values, the resulting","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":73878,"byte_end":73963,"line_start":1141,"line_end":1141,"column_start":5,"column_end":90}},{"value":"/ `U32CString` will be invalid.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":73968,"byte_end":74001,"line_start":1142,"line_end":1142,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74006,"byte_end":74009,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74014,"byte_end":74026,"line_start":1144,"line_end":1144,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74031,"byte_end":74034,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74039,"byte_end":74103,"line_start":1146,"line_end":1146,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75330,"byte_end":75341,"line_start":1181,"line_end":1181,"column_start":12,"column_end":23},"name":"from_os_str","qualname":"<UCString<u32>>::from_os_str","value":"pub fn from_os_str<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Result<Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from anything that can be converted to an `OsStr`.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from anything that can be converted to an `OsStr`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74279,"byte_end":74359,"line_start":1151,"line_end":1151,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74364,"byte_end":74367,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74372,"byte_end":74426,"line_start":1153,"line_end":1153,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74431,"byte_end":74434,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74439,"byte_end":74453,"line_start":1155,"line_end":1155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74458,"byte_end":74461,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74466,"byte_end":74538,"line_start":1157,"line_end":1157,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u16>` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74543,"byte_end":74633,"line_start":1158,"line_end":1158,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74638,"byte_end":74641,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74646,"byte_end":74660,"line_start":1160,"line_end":1160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74665,"byte_end":74668,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74673,"byte_end":74684,"line_start":1162,"line_end":1162,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74689,"byte_end":74720,"line_start":1163,"line_end":1163,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74725,"byte_end":74748,"line_start":1164,"line_end":1164,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74753,"byte_end":74796,"line_start":1165,"line_end":1165,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_os_str(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74801,"byte_end":74853,"line_start":1166,"line_end":1166,"column_start":5,"column_end":57}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74858,"byte_end":74903,"line_start":1167,"line_end":1167,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74908,"byte_end":74915,"line_start":1168,"line_end":1168,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74920,"byte_end":74923,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":74928,"byte_end":75002,"line_start":1170,"line_end":1170,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75007,"byte_end":75010,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75015,"byte_end":75026,"line_start":1172,"line_end":1172,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75031,"byte_end":75062,"line_start":1173,"line_end":1173,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75067,"byte_end":75095,"line_start":1174,"line_end":1174,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75100,"byte_end":75143,"line_start":1175,"line_end":1175,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_os_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75148,"byte_end":75189,"line_start":1176,"line_end":1176,"column_start":5,"column_end":46}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75194,"byte_end":75220,"line_start":1177,"line_end":1177,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 2);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75225,"byte_end":75278,"line_start":1178,"line_end":1178,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75283,"byte_end":75290,"line_start":1179,"line_end":1179,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75295,"byte_end":75318,"line_start":1180,"line_end":1180,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76245,"byte_end":76266,"line_start":1205,"line_end":1205,"column_start":19,"column_end":40},"name":"from_os_str_unchecked","qualname":"<UCString<u32>>::from_os_str_unchecked","value":"pub unsafe fn from_os_str_unchecked<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from anything that can be converted to an `OsStr`, without\n checking for interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from anything that can be converted to an `OsStr`, without","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75525,"byte_end":75613,"line_start":1186,"line_end":1186,"column_start":5,"column_end":93}},{"value":"/ checking for interior nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75618,"byte_end":75655,"line_start":1187,"line_end":1187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75660,"byte_end":75663,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75668,"byte_end":75680,"line_start":1189,"line_end":1189,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75685,"byte_end":75688,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_os_str` except that no runtime assertion is made that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75693,"byte_end":75785,"line_start":1191,"line_end":1191,"column_start":5,"column_end":97}},{"value":"/ `s` contains no nul values. Providing a string with nul values will result in an invalid","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75790,"byte_end":75882,"line_start":1192,"line_end":1192,"column_start":5,"column_end":97}},{"value":"/ `U32CString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75887,"byte_end":75904,"line_start":1193,"line_end":1193,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75909,"byte_end":75912,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75917,"byte_end":75931,"line_start":1195,"line_end":1195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75936,"byte_end":75939,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75944,"byte_end":75955,"line_start":1197,"line_end":1197,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75960,"byte_end":75991,"line_start":1198,"line_end":1198,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":75996,"byte_end":76019,"line_start":1199,"line_end":1199,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76024,"byte_end":76067,"line_start":1200,"line_end":1200,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U32CString::from_os_str_unchecked(s) };","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76072,"byte_end":76136,"line_start":1201,"line_end":1201,"column_start":5,"column_end":69}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76141,"byte_end":76186,"line_start":1202,"line_end":1202,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76191,"byte_end":76198,"line_start":1203,"line_end":1203,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76203,"byte_end":76226,"line_start":1204,"line_end":1204,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77499,"byte_end":77519,"line_start":1240,"line_end":1240,"column_start":12,"column_end":32},"name":"from_os_str_with_nul","qualname":"<UCString<u32>>::from_os_str_with_nul","value":"pub fn from_os_str_with_nul<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Result<Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from anything that can be converted to an `OsStr` with a nul\n terminator.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from anything that can be converted to an `OsStr` with a nul","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76437,"byte_end":76527,"line_start":1210,"line_end":1210,"column_start":5,"column_end":95}},{"value":"/ terminator.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76532,"byte_end":76547,"line_start":1211,"line_end":1211,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76552,"byte_end":76555,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76560,"byte_end":76630,"line_start":1213,"line_end":1213,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76635,"byte_end":76638,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76643,"byte_end":76657,"line_start":1215,"line_end":1215,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76662,"byte_end":76665,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76670,"byte_end":76760,"line_start":1217,"line_end":1217,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u16>`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76765,"byte_end":76833,"line_start":1218,"line_end":1218,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76838,"byte_end":76841,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76846,"byte_end":76860,"line_start":1220,"line_end":1220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76865,"byte_end":76868,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76873,"byte_end":76884,"line_start":1222,"line_end":1222,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76889,"byte_end":76920,"line_start":1223,"line_end":1223,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76925,"byte_end":76953,"line_start":1224,"line_end":1224,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":76958,"byte_end":77001,"line_start":1225,"line_end":1225,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_os_str_with_nul(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77006,"byte_end":77067,"line_start":1226,"line_end":1226,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77072,"byte_end":77118,"line_start":1227,"line_end":1227,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77123,"byte_end":77130,"line_start":1228,"line_end":1228,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77135,"byte_end":77138,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77143,"byte_end":77225,"line_start":1230,"line_end":1230,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77230,"byte_end":77233,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77238,"byte_end":77249,"line_start":1232,"line_end":1232,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77254,"byte_end":77285,"line_start":1233,"line_end":1233,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77290,"byte_end":77313,"line_start":1234,"line_end":1234,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77318,"byte_end":77361,"line_start":1235,"line_end":1235,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_os_str_with_nul(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77366,"byte_end":77416,"line_start":1236,"line_end":1236,"column_start":5,"column_end":55}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77421,"byte_end":77447,"line_start":1237,"line_end":1237,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77452,"byte_end":77459,"line_start":1238,"line_end":1238,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77464,"byte_end":77487,"line_start":1239,"line_end":1239,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78564,"byte_end":78594,"line_start":1266,"line_end":1266,"column_start":19,"column_end":49},"name":"from_os_str_with_nul_unchecked","qualname":"<UCString<u32>>::from_os_str_with_nul_unchecked","value":"pub unsafe fn from_os_str_with_nul_unchecked<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(impl AsRef<std::ffi::OsStr>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from anything that can be converted to an `OsStr` that should\n have a terminating nul, but without checking for any nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from anything that can be converted to an `OsStr` that should","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77734,"byte_end":77825,"line_start":1247,"line_end":1247,"column_start":5,"column_end":96}},{"value":"/ have a terminating nul, but without checking for any nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77830,"byte_end":77898,"line_start":1248,"line_end":1248,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77903,"byte_end":77906,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77911,"byte_end":77923,"line_start":1250,"line_end":1250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77928,"byte_end":77931,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_os_str_with_nul` except that no runtime assertion is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":77936,"byte_end":78027,"line_start":1252,"line_end":1252,"column_start":5,"column_end":96}},{"value":"/ made that `s` contains no nul values. Providing a vector with interior nul values or","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78032,"byte_end":78120,"line_start":1253,"line_end":1253,"column_start":5,"column_end":93}},{"value":"/ without a terminating nul value will result in an invalid `U32CString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78125,"byte_end":78200,"line_start":1254,"line_end":1254,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78205,"byte_end":78208,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78213,"byte_end":78227,"line_start":1256,"line_end":1256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78232,"byte_end":78235,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78240,"byte_end":78251,"line_start":1258,"line_end":1258,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78256,"byte_end":78287,"line_start":1259,"line_end":1259,"column_start":5,"column_end":36}},{"value":"/ let s = \"My String\\u{0}\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78292,"byte_end":78321,"line_start":1260,"line_end":1260,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78326,"byte_end":78369,"line_start":1261,"line_end":1261,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U32CString::from_os_str_with_nul_unchecked(s) };","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78374,"byte_end":78447,"line_start":1262,"line_end":1262,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My String\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78452,"byte_end":78505,"line_start":1263,"line_end":1263,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78510,"byte_end":78517,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78522,"byte_end":78545,"line_start":1265,"line_end":1265,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":82979,"byte_end":82991,"line_start":1453,"line_end":1453,"column_start":12,"column_end":24},"name":"nul_position","qualname":"<NulError<C>>::nul_position","value":"pub fn nul_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the nul value in the slice that was provided to `U16CString`.\n","sig":null,"attributes":[{"value":"/ Returns the position of the nul value in the slice that was provided to `U16CString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":82878,"byte_end":82967,"line_start":1452,"line_end":1452,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":83172,"byte_end":83180,"line_start":1459,"line_end":1459,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<NulError<C>>::into_vec","value":"pub fn into_vec(Self) -> Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this error, returning the underlying vector of u16 values which generated the error\n in the first place.\n","sig":null,"attributes":[{"value":"/ Consumes this error, returning the underlying vector of u16 values which generated the error","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":83036,"byte_end":83132,"line_start":1457,"line_end":1457,"column_start":5,"column_end":101}},{"value":"/ in the first place.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":83137,"byte_end":83160,"line_start":1458,"line_end":1458,"column_start":5,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84764,"byte_end":84774,"line_start":1507,"line_end":1507,"column_start":10,"column_end":20},"name":"U16CString","qualname":"::ucstring::U16CString","value":"UCString<u16>","parent":null,"children":[],"decl_id":null,"docs":" An owned, mutable C-style \"wide\" string for FFI that is nul-aware and nul-terminated.","sig":null,"attributes":[{"value":"/ An owned, mutable C-style \"wide\" string for FFI that is nul-aware and nul-terminated.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":83670,"byte_end":83759,"line_start":1483,"line_end":1483,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":83760,"byte_end":83763,"line_start":1484,"line_end":1484,"column_start":1,"column_end":4}},{"value":"/ `U16CString` is aware of nul values. Unless unchecked conversions are used, all `U16CString`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":83764,"byte_end":83860,"line_start":1485,"line_end":1485,"column_start":1,"column_end":97}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":83861,"byte_end":83959,"line_start":1486,"line_end":1486,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-16 data. These strings are intended to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":83960,"byte_end":84058,"line_start":1487,"line_end":1487,"column_start":1,"column_end":99}},{"value":"/ be used with FFI functions such as Windows API that may require nul-terminated strings.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84059,"byte_end":84150,"line_start":1488,"line_end":1488,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84151,"byte_end":84154,"line_start":1489,"line_end":1489,"column_start":1,"column_end":4}},{"value":"/ `U16CString` can be converted to and from many other string types, including `U16String`,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84155,"byte_end":84248,"line_start":1490,"line_end":1490,"column_start":1,"column_end":94}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84249,"byte_end":84319,"line_start":1491,"line_end":1491,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84320,"byte_end":84323,"line_start":1492,"line_end":1492,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84324,"byte_end":84338,"line_start":1493,"line_end":1493,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84339,"byte_end":84342,"line_start":1494,"line_end":1494,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U16CString` and shows how to convert a `U16CString` to a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84343,"byte_end":84439,"line_start":1495,"line_end":1495,"column_start":1,"column_end":97}},{"value":"/ regular Rust `String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84440,"byte_end":84466,"line_start":1496,"line_end":1496,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84467,"byte_end":84470,"line_start":1497,"line_end":1497,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84471,"byte_end":84482,"line_start":1498,"line_end":1498,"column_start":1,"column_end":12}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84483,"byte_end":84514,"line_start":1499,"line_end":1499,"column_start":1,"column_end":32}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84515,"byte_end":84534,"line_start":1500,"line_end":1500,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84535,"byte_end":84583,"line_start":1501,"line_end":1501,"column_start":1,"column_end":49}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84584,"byte_end":84632,"line_start":1502,"line_end":1502,"column_start":1,"column_end":49}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84633,"byte_end":84669,"line_start":1503,"line_end":1503,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84670,"byte_end":84712,"line_start":1504,"line_end":1504,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84713,"byte_end":84746,"line_start":1505,"line_end":1505,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84747,"byte_end":84754,"line_start":1506,"line_end":1506,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85885,"byte_end":85895,"line_start":1533,"line_end":1533,"column_start":10,"column_end":20},"name":"U32CString","qualname":"::ucstring::U32CString","value":"UCString<u32>","parent":null,"children":[],"decl_id":null,"docs":" An owned, mutable C-style wide string for FFI that is nul-aware and nul-terminated.","sig":null,"attributes":[{"value":"/ An owned, mutable C-style wide string for FFI that is nul-aware and nul-terminated.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84793,"byte_end":84880,"line_start":1509,"line_end":1509,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84881,"byte_end":84884,"line_start":1510,"line_end":1510,"column_start":1,"column_end":4}},{"value":"/ `U32CString` is aware of nul values. Unless unchecked conversions are used, all `U32CString`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84885,"byte_end":84981,"line_start":1511,"line_end":1511,"column_start":1,"column_end":97}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":84982,"byte_end":85080,"line_start":1512,"line_end":1512,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-32 data. These strings are intended to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85081,"byte_end":85179,"line_start":1513,"line_end":1513,"column_start":1,"column_end":99}},{"value":"/ be used with FFI functions such as Windows API that may require nul-terminated strings.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85180,"byte_end":85271,"line_start":1514,"line_end":1514,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85272,"byte_end":85275,"line_start":1515,"line_end":1515,"column_start":1,"column_end":4}},{"value":"/ `U32CString` can be converted to and from many other string types, including `U32String`,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85276,"byte_end":85369,"line_start":1516,"line_end":1516,"column_start":1,"column_end":94}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85370,"byte_end":85440,"line_start":1517,"line_end":1517,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85441,"byte_end":85444,"line_start":1518,"line_end":1518,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85445,"byte_end":85459,"line_start":1519,"line_end":1519,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85460,"byte_end":85463,"line_start":1520,"line_end":1520,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U32CString` and shows how to convert a `U32CString` to a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85464,"byte_end":85560,"line_start":1521,"line_end":1521,"column_start":1,"column_end":97}},{"value":"/ regular Rust `String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85561,"byte_end":85587,"line_start":1522,"line_end":1522,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85588,"byte_end":85591,"line_start":1523,"line_end":1523,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85592,"byte_end":85603,"line_start":1524,"line_end":1524,"column_start":1,"column_end":12}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85604,"byte_end":85635,"line_start":1525,"line_end":1525,"column_start":1,"column_end":32}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85636,"byte_end":85655,"line_start":1526,"line_end":1526,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85656,"byte_end":85704,"line_start":1527,"line_end":1527,"column_start":1,"column_end":49}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85705,"byte_end":85753,"line_start":1528,"line_end":1528,"column_start":1,"column_end":49}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85754,"byte_end":85790,"line_start":1529,"line_end":1529,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85791,"byte_end":85833,"line_start":1530,"line_end":1530,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85834,"byte_end":85867,"line_start":1531,"line_end":1531,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85868,"byte_end":85875,"line_start":1532,"line_end":1532,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":86043,"byte_end":86054,"line_start":1536,"line_end":1536,"column_start":10,"column_end":21},"name":"WideCString","qualname":"::ucstring::WideCString","value":"UCString<WideChar>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `U16String` or `U32String` depending on platform. Intended to match typical C `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"/ Alias for `U16String` or `U32String` depending on platform. Intended to match typical C `wchar_t` size on platform.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":85914,"byte_end":86033,"line_start":1535,"line_end":1535,"column_start":1,"column_end":120}}]},{"kind":"Struct","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":86593,"byte_end":86607,"line_start":21,"line_end":21,"column_start":12,"column_end":26},"name":"FromUtf32Error","qualname":"::ustr::FromUtf32Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" A possible error value when converting a String from a UTF-32 byte slice.","sig":null,"attributes":[{"value":"/ A possible error value when converting a String from a UTF-32 byte slice.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":86383,"byte_end":86460,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":86461,"byte_end":86464,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type is the error type for the `to_string` method on `U32Str`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":86465,"byte_end":86536,"line_start":19,"line_end":19,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87837,"byte_end":87841,"line_start":53,"line_end":53,"column_start":12,"column_end":16},"name":"UStr","qualname":"::ustr::UStr","value":"UStr {  }","parent":null,"children":[{"krate":0,"index":632}],"decl_id":null,"docs":" String slice reference for `U16String`.","sig":null,"attributes":[{"value":"/ String slice reference for `U16String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":86957,"byte_end":87000,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87001,"byte_end":87004,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ `UStr` is to `UString` as `str` is to `String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87005,"byte_end":87056,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87057,"byte_end":87060,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ `UStr` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87061,"byte_end":87149,"line_start":40,"line_end":40,"column_start":1,"column_end":89}},{"value":"/ contain invalid and ill-formed UTF-16 or UTF-32 data. These strings are intended to be used","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87150,"byte_end":87245,"line_start":41,"line_end":41,"column_start":1,"column_end":96}},{"value":"/ with FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87246,"byte_end":87344,"line_start":42,"line_end":42,"column_start":1,"column_end":99}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87345,"byte_end":87444,"line_start":43,"line_end":43,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87445,"byte_end":87448,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ `UCStr` should be used instead of nul-aware strings are required.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87449,"byte_end":87518,"line_start":45,"line_end":45,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87519,"byte_end":87522,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ `UStr` can be converted to many other string types, including `OsString` and `String`, making","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87523,"byte_end":87620,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"/ proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87621,"byte_end":87658,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87659,"byte_end":87662,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Please prefer using the type aliases `U16Str` or `U32Str` or `WideStr` to using this type","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87663,"byte_end":87756,"line_start":50,"line_end":50,"column_start":1,"column_end":94}},{"value":"/ directly.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87757,"byte_end":87770,"line_start":51,"line_end":51,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87959,"byte_end":87962,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<UStr<C>>::new","value":"pub fn new<S: AsRef<Self> + ?Sized>(&S) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Coerces a value into a `UStr`.\n","sig":null,"attributes":[{"value":"/ Coerces a value into a `UStr`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87913,"byte_end":87947,"line_start":58,"line_end":58,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88792,"byte_end":88800,"line_start":82,"line_end":82,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<UStr<C>>::from_ptr","value":"pub unsafe fn from_ptr<'a>(*const C, usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UStr` from a pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `UStr` from a pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88036,"byte_end":88088,"line_start":63,"line_end":63,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88093,"byte_end":88096,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88101,"byte_end":88179,"line_start":65,"line_end":65,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88184,"byte_end":88187,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88192,"byte_end":88204,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88209,"byte_end":88212,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88217,"byte_end":88311,"line_start":69,"line_end":69,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88316,"byte_end":88329,"line_start":70,"line_end":70,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88334,"byte_end":88337,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88342,"byte_end":88354,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88359,"byte_end":88362,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88367,"byte_end":88407,"line_start":74,"line_end":74,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88412,"byte_end":88415,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88420,"byte_end":88432,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88437,"byte_end":88440,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88445,"byte_end":88535,"line_start":78,"line_end":78,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88540,"byte_end":88630,"line_start":79,"line_end":79,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88635,"byte_end":88730,"line_start":80,"line_end":80,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88735,"byte_end":88773,"line_start":81,"line_end":81,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":89058,"byte_end":89068,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<UStr<C>>::from_slice","value":"pub fn from_slice(&[C]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UStr` from a slice of code points.","sig":null,"attributes":[{"value":"/ Constructs a `UStr` from a slice of code points.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88940,"byte_end":88992,"line_start":87,"line_end":87,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":88997,"byte_end":89000,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the slice.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":89005,"byte_end":89046,"line_start":89,"line_end":89,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":89239,"byte_end":89249,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"to_ustring","qualname":"<UStr<C>>::to_ustring","value":"pub fn to_ustring(&Self) -> crate::UString<C>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a new owned `UString`.\n","sig":null,"attributes":[{"value":"/ Copies the wide string to a new owned `UString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":89145,"byte_end":89197,"line_start":94,"line_end":94,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":89202,"byte_end":89227,"line_start":95,"line_end":95,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":89392,"byte_end":89400,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<UStr<C>>::as_slice","value":"pub fn as_slice(&Self) -> &[C]","parent":null,"children":[],"decl_id":null,"docs":" Converts to a slice of the wide string.\n","sig":null,"attributes":[{"value":"/ Converts to a slice of the wide string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":89337,"byte_end":89380,"line_start":100,"line_end":100,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":89591,"byte_end":89597,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<UStr<C>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const C","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the wide string.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the wide string.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":89449,"byte_end":89494,"line_start":105,"line_end":105,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":89499,"byte_end":89502,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The pointer is valid only as long as the lifetime of this reference.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":89507,"byte_end":89579,"line_start":107,"line_end":107,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":89760,"byte_end":89763,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"len","qualname":"<UStr<C>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the wide string as number of elements (**not** number of bytes).\n","sig":null,"attributes":[{"value":"/ Returns the length of the wide string as number of elements (**not** number of bytes).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":89658,"byte_end":89748,"line_start":112,"line_end":112,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":89884,"byte_end":89892,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<UStr<C>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this wide string contains no data.\n","sig":null,"attributes":[{"value":"/ Returns whether this wide string contains no data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":89818,"byte_end":89872,"line_start":117,"line_end":117,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90067,"byte_end":90079,"line_start":124,"line_end":124,"column_start":12,"column_end":24},"name":"into_ustring","qualname":"<UStr<C>>::into_ustring","value":"pub fn into_ustring(Box<Self>) -> crate::UString<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Box<UStr>` into a `UString` without copying or allocating.\n","sig":null,"attributes":[{"value":"/ Converts a `Box<UStr>` into a `UString` without copying or allocating.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":89951,"byte_end":90025,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90030,"byte_end":90055,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90983,"byte_end":90995,"line_start":152,"line_end":152,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<UStr<u16>>::to_os_string","value":"pub fn to_os_string(&Self) -> std::ffi::OsString","parent":null,"children":[],"decl_id":null,"docs":" Decodes a wide string to an owned `OsString`.","sig":null,"attributes":[{"value":"/ Decodes a wide string to an owned `OsString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90301,"byte_end":90350,"line_start":133,"line_end":133,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90355,"byte_end":90358,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the `U16Str`. Since `U16Str` makes no guarantees that it is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90363,"byte_end":90454,"line_start":135,"line_end":135,"column_start":5,"column_end":96}},{"value":"/ valid UTF-16, there is no guarantee that the resulting `OsString` will be valid data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90459,"byte_end":90548,"line_start":136,"line_end":136,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90553,"byte_end":90556,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90561,"byte_end":90575,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90580,"byte_end":90583,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90588,"byte_end":90599,"line_start":140,"line_end":140,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90604,"byte_end":90634,"line_start":141,"line_end":141,"column_start":5,"column_end":35}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90639,"byte_end":90666,"line_start":142,"line_end":142,"column_start":5,"column_end":32}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90671,"byte_end":90694,"line_start":143,"line_end":143,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90699,"byte_end":90742,"line_start":144,"line_end":144,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90747,"byte_end":90785,"line_start":145,"line_end":145,"column_start":5,"column_end":43}},{"value":"/ // Create an OsString from the wide string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90790,"byte_end":90836,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ let osstr = wstr.to_os_string();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90841,"byte_end":90877,"line_start":147,"line_end":147,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90882,"byte_end":90885,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(osstr, OsString::from(s));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90890,"byte_end":90931,"line_start":149,"line_end":149,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90936,"byte_end":90943,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90948,"byte_end":90971,"line_start":151,"line_end":151,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91665,"byte_end":91674,"line_start":175,"line_end":175,"column_start":12,"column_end":21},"name":"to_string","qualname":"<UStr<u16>>::to_string","value":"pub fn to_string(&Self) -> Result<String, FromUtf16Error>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String` if it contains valid UTF-16 data.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String` if it contains valid UTF-16 data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91089,"byte_end":91163,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91168,"byte_end":91171,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91176,"byte_end":91190,"line_start":158,"line_end":158,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91195,"byte_end":91198,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the string contains any invalid UTF-16 data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91203,"byte_end":91271,"line_start":160,"line_end":160,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91276,"byte_end":91279,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91284,"byte_end":91298,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91303,"byte_end":91306,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91311,"byte_end":91322,"line_start":164,"line_end":164,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91327,"byte_end":91357,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91362,"byte_end":91385,"line_start":166,"line_end":166,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91390,"byte_end":91433,"line_start":167,"line_end":167,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91438,"byte_end":91476,"line_start":168,"line_end":168,"column_start":5,"column_end":43}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91481,"byte_end":91532,"line_start":169,"line_end":169,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91537,"byte_end":91576,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91581,"byte_end":91584,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91589,"byte_end":91611,"line_start":172,"line_end":172,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91616,"byte_end":91623,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91628,"byte_end":91653,"line_start":174,"line_end":174,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92299,"byte_end":92314,"line_start":196,"line_end":196,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<UStr<u16>>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String`.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91769,"byte_end":91810,"line_start":179,"line_end":179,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91815,"byte_end":91818,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with *U+FFFD REPLACEMENT CHARACTER*.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91823,"byte_end":91902,"line_start":181,"line_end":181,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91907,"byte_end":91910,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91915,"byte_end":91929,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91934,"byte_end":91937,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91942,"byte_end":91953,"line_start":185,"line_end":185,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91958,"byte_end":91988,"line_start":186,"line_end":186,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":91993,"byte_end":92016,"line_start":187,"line_end":187,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92021,"byte_end":92064,"line_start":188,"line_end":188,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92069,"byte_end":92107,"line_start":189,"line_end":189,"column_start":5,"column_end":43}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92112,"byte_end":92163,"line_start":190,"line_end":190,"column_start":5,"column_end":56}},{"value":"/ let lossy = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92168,"byte_end":92207,"line_start":191,"line_end":191,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92212,"byte_end":92215,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(lossy, s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92220,"byte_end":92245,"line_start":193,"line_end":193,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92250,"byte_end":92257,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92262,"byte_end":92287,"line_start":195,"line_end":195,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93182,"byte_end":93195,"line_start":221,"line_end":221,"column_start":19,"column_end":32},"name":"from_char_ptr","qualname":"<UStr<u32>>::from_char_ptr","value":"pub unsafe fn from_char_ptr<'a>(*const char, usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32Str` from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `U32Str` from a `char` pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92410,"byte_end":92471,"line_start":202,"line_end":202,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92476,"byte_end":92479,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92484,"byte_end":92569,"line_start":204,"line_end":204,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92574,"byte_end":92577,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92582,"byte_end":92594,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92599,"byte_end":92602,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92607,"byte_end":92701,"line_start":208,"line_end":208,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92706,"byte_end":92719,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92724,"byte_end":92727,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92732,"byte_end":92744,"line_start":211,"line_end":211,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92749,"byte_end":92752,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92757,"byte_end":92797,"line_start":213,"line_end":213,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92802,"byte_end":92805,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92810,"byte_end":92822,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92827,"byte_end":92830,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92835,"byte_end":92925,"line_start":217,"line_end":217,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92930,"byte_end":93020,"line_start":218,"line_end":218,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93025,"byte_end":93120,"line_start":219,"line_end":219,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93125,"byte_end":93163,"line_start":220,"line_end":220,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93424,"byte_end":93439,"line_start":228,"line_end":228,"column_start":12,"column_end":27},"name":"from_char_slice","qualname":"<UStr<u32>>::from_char_slice","value":"pub fn from_char_slice(&[char]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32Str` from a slice of `u32` code points.","sig":null,"attributes":[{"value":"/ Constructs a `U32Str` from a slice of `u32` code points.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93298,"byte_end":93358,"line_start":225,"line_end":225,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93363,"byte_end":93366,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the slice.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93371,"byte_end":93412,"line_start":227,"line_end":227,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94201,"byte_end":94213,"line_start":251,"line_end":251,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<UStr<u32>>::to_os_string","value":"pub fn to_os_string(&Self) -> std::ffi::OsString","parent":null,"children":[],"decl_id":null,"docs":" Decodes a wide string to an owned `OsString`.","sig":null,"attributes":[{"value":"/ Decodes a wide string to an owned `OsString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93519,"byte_end":93568,"line_start":232,"line_end":232,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93573,"byte_end":93576,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the `U32Str`. Since `U32Str` makes no guarantees that it is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93581,"byte_end":93672,"line_start":234,"line_end":234,"column_start":5,"column_end":96}},{"value":"/ valid UTF-32, there is no guarantee that the resulting `OsString` will be valid data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93677,"byte_end":93766,"line_start":235,"line_end":235,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93771,"byte_end":93774,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93779,"byte_end":93793,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93798,"byte_end":93801,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93806,"byte_end":93817,"line_start":239,"line_end":239,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93822,"byte_end":93852,"line_start":240,"line_end":240,"column_start":5,"column_end":35}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93857,"byte_end":93884,"line_start":241,"line_end":241,"column_start":5,"column_end":32}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93889,"byte_end":93912,"line_start":242,"line_end":242,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93917,"byte_end":93960,"line_start":243,"line_end":243,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":93965,"byte_end":94003,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/ // Create an OsString from the wide string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94008,"byte_end":94054,"line_start":245,"line_end":245,"column_start":5,"column_end":51}},{"value":"/ let osstr = wstr.to_os_string();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94059,"byte_end":94095,"line_start":246,"line_end":246,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94100,"byte_end":94103,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(osstr, OsString::from(s));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94108,"byte_end":94149,"line_start":248,"line_end":248,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94154,"byte_end":94161,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94166,"byte_end":94189,"line_start":250,"line_end":250,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94870,"byte_end":94879,"line_start":274,"line_end":274,"column_start":12,"column_end":21},"name":"to_string","qualname":"<UStr<u32>>::to_string","value":"pub fn to_string(&Self) -> Result<String, FromUtf32Error>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String` if it contains valid UTF-32 data.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String` if it contains valid UTF-32 data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94294,"byte_end":94368,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94373,"byte_end":94376,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94381,"byte_end":94395,"line_start":257,"line_end":257,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94400,"byte_end":94403,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the string contains any invalid UTF-32 data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94408,"byte_end":94476,"line_start":259,"line_end":259,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94481,"byte_end":94484,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94489,"byte_end":94503,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94508,"byte_end":94511,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94516,"byte_end":94527,"line_start":263,"line_end":263,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94532,"byte_end":94562,"line_start":264,"line_end":264,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94567,"byte_end":94590,"line_start":265,"line_end":265,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94595,"byte_end":94638,"line_start":266,"line_end":266,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94643,"byte_end":94681,"line_start":267,"line_end":267,"column_start":5,"column_end":43}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94686,"byte_end":94737,"line_start":268,"line_end":268,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94742,"byte_end":94781,"line_start":269,"line_end":269,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94786,"byte_end":94789,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94794,"byte_end":94816,"line_start":271,"line_end":271,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94821,"byte_end":94828,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":94833,"byte_end":94858,"line_start":273,"line_end":273,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":96037,"byte_end":96052,"line_start":307,"line_end":307,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<UStr<u32>>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String`.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":95507,"byte_end":95548,"line_start":290,"line_end":290,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":95553,"byte_end":95556,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with *U+FFFD REPLACEMENT CHARACTER*.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":95561,"byte_end":95640,"line_start":292,"line_end":292,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":95645,"byte_end":95648,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":95653,"byte_end":95667,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":95672,"byte_end":95675,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":95680,"byte_end":95691,"line_start":296,"line_end":296,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":95696,"byte_end":95726,"line_start":297,"line_end":297,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":95731,"byte_end":95754,"line_start":298,"line_end":298,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":95759,"byte_end":95802,"line_start":299,"line_end":299,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":95807,"byte_end":95845,"line_start":300,"line_end":300,"column_start":5,"column_end":43}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":95850,"byte_end":95901,"line_start":301,"line_end":301,"column_start":5,"column_end":56}},{"value":"/ let lossy = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":95906,"byte_end":95945,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":95950,"byte_end":95953,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(lossy, s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":95958,"byte_end":95983,"line_start":304,"line_end":304,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":95988,"byte_end":95995,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":96000,"byte_end":96025,"line_start":306,"line_end":306,"column_start":5,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97302,"byte_end":97308,"line_start":338,"line_end":338,"column_start":10,"column_end":16},"name":"U16Str","qualname":"::ustr::U16Str","value":"UStr<u16>","parent":null,"children":[],"decl_id":null,"docs":" String slice reference for `U16String`.","sig":null,"attributes":[{"value":"/ String slice reference for `U16String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":96590,"byte_end":96633,"line_start":325,"line_end":325,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":96634,"byte_end":96637,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ `U16Str` is to `U16String` as `str` is to `String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":96638,"byte_end":96693,"line_start":327,"line_end":327,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":96694,"byte_end":96697,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ `U16Str` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":96698,"byte_end":96788,"line_start":329,"line_end":329,"column_start":1,"column_end":91}},{"value":"/ contain invalid and ill-formed UTF-16 data. These strings are intended to be used with","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":96789,"byte_end":96879,"line_start":330,"line_end":330,"column_start":1,"column_end":91}},{"value":"/ FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":96880,"byte_end":96973,"line_start":331,"line_end":331,"column_start":1,"column_end":94}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":96974,"byte_end":97073,"line_start":332,"line_end":332,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97074,"byte_end":97077,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ `WideCStr` should be used instead of nul-aware strings are required.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97078,"byte_end":97150,"line_start":334,"line_end":334,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97151,"byte_end":97154,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ `U16Str` can be converted to many other string types, including `OsString` and `String`, making","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97155,"byte_end":97254,"line_start":336,"line_end":336,"column_start":1,"column_end":100}},{"value":"/ proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97255,"byte_end":97292,"line_start":337,"line_end":337,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":98035,"byte_end":98041,"line_start":353,"line_end":353,"column_start":10,"column_end":16},"name":"U32Str","qualname":"::ustr::U32Str","value":"UStr<u32>","parent":null,"children":[],"decl_id":null,"docs":" String slice reference for `U32String`.","sig":null,"attributes":[{"value":"/ String slice reference for `U32String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97323,"byte_end":97366,"line_start":340,"line_end":340,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97367,"byte_end":97370,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ `U32Str` is to `U32String` as `str` is to `String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97371,"byte_end":97426,"line_start":342,"line_end":342,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97427,"byte_end":97430,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ `U32Str` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97431,"byte_end":97521,"line_start":344,"line_end":344,"column_start":1,"column_end":91}},{"value":"/ contain invalid and ill-formed UTF-32 data. These strings are intended to be used with","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97522,"byte_end":97612,"line_start":345,"line_end":345,"column_start":1,"column_end":91}},{"value":"/ FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97613,"byte_end":97706,"line_start":346,"line_end":346,"column_start":1,"column_end":94}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97707,"byte_end":97806,"line_start":347,"line_end":347,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97807,"byte_end":97810,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ `WideCStr` should be used instead of nul-aware strings are required.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97811,"byte_end":97883,"line_start":349,"line_end":349,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97884,"byte_end":97887,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ `U32Str` can be converted to many other string types, including `OsString` and `String`, making","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97888,"byte_end":97987,"line_start":351,"line_end":351,"column_start":1,"column_end":100}},{"value":"/ proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":97988,"byte_end":98025,"line_start":352,"line_end":352,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":98179,"byte_end":98186,"line_start":356,"line_end":356,"column_start":10,"column_end":17},"name":"WideStr","qualname":"::ustr::WideStr","value":"UStr<WideChar>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `U16Str` or `U32Str` depending on platform. Intended to match typical C `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"/ Alias for `U16Str` or `U32Str` depending on platform. Intended to match typical C `wchar_t` size on platform.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":98056,"byte_end":98169,"line_start":355,"line_end":355,"column_start":1,"column_end":114}}]},{"kind":"Struct","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100269,"byte_end":100276,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"UString","qualname":"::ustring::UString","value":"UString {  }","parent":null,"children":[{"krate":0,"index":663}],"decl_id":null,"docs":" An owned, mutable \"wide\" string for FFI that is **not** nul-aware.","sig":null,"attributes":[{"value":"/ An owned, mutable \"wide\" string for FFI that is **not** nul-aware.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":98610,"byte_end":98680,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":98681,"byte_end":98684,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ `UString` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":98685,"byte_end":98776,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/ contain invalid and ill-formed UTF-16 or UTF-32 data. These strings are intended to be used","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":98777,"byte_end":98872,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"/ with FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":98873,"byte_end":98971,"line_start":25,"line_end":25,"column_start":1,"column_end":99}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":98972,"byte_end":99071,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99072,"byte_end":99075,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `UCString` should be used instead if nul-aware strings are required.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99076,"byte_end":99148,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99149,"byte_end":99152,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ `UString` can be converted to and from many other standard Rust string types, including","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99153,"byte_end":99244,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ `OsString` and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99245,"byte_end":99314,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99315,"byte_end":99318,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Please prefer using the type aliases `U16String` or `U32String` or `WideString` to using this","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99319,"byte_end":99416,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"/ type directly.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99417,"byte_end":99435,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99436,"byte_end":99439,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99440,"byte_end":99454,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99455,"byte_end":99458,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U16String` and shows how to convert a `U16String` to a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99459,"byte_end":99553,"line_start":38,"line_end":38,"column_start":1,"column_end":95}},{"value":"/ regular Rust `String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99554,"byte_end":99580,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99581,"byte_end":99584,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99585,"byte_end":99596,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99597,"byte_end":99627,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99628,"byte_end":99647,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99648,"byte_end":99696,"line_start":44,"line_end":44,"column_start":1,"column_end":49}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99697,"byte_end":99735,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99736,"byte_end":99772,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99773,"byte_end":99815,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99816,"byte_end":99849,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99850,"byte_end":99857,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99858,"byte_end":99861,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The same example using `U32String` instead:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99862,"byte_end":99909,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99910,"byte_end":99913,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99914,"byte_end":99925,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99926,"byte_end":99956,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99957,"byte_end":99976,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":99977,"byte_end":100025,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100026,"byte_end":100064,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100065,"byte_end":100101,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100102,"byte_end":100144,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100145,"byte_end":100178,"line_start":60,"line_end":60,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100179,"byte_end":100186,"line_start":61,"line_end":61,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100403,"byte_end":100406,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<UString<C>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new empty `UString`.\n","sig":null,"attributes":[{"value":"/ Constructs a new empty `UString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100354,"byte_end":100391,"line_start":68,"line_end":68,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101281,"byte_end":101289,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<UString<C>>::from_vec","value":"pub fn from_vec<impl Into<Vec<C>>: Into<Vec<C>>>(impl Into<Vec<C>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UString` from a vector of possibly invalid or ill-formed UTF-16 or UTF-32\n data.","sig":null,"attributes":[{"value":"/ Constructs a `UString` from a vector of possibly invalid or ill-formed UTF-16 or UTF-32","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100465,"byte_end":100556,"line_start":73,"line_end":73,"column_start":5,"column_end":96}},{"value":"/ data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100561,"byte_end":100570,"line_start":74,"line_end":74,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100575,"byte_end":100578,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ No checks are made on the contents of the vector.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100583,"byte_end":100636,"line_start":76,"line_end":76,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100641,"byte_end":100644,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100649,"byte_end":100663,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100668,"byte_end":100671,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100676,"byte_end":100687,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100692,"byte_end":100722,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ let v = vec![84u16, 104u16, 101u16]; // 'T' 'h' 'e'","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100727,"byte_end":100782,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/ # let cloned = v.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100787,"byte_end":100816,"line_start":83,"line_end":83,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100821,"byte_end":100864,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_vec(v);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100869,"byte_end":100907,"line_start":85,"line_end":85,"column_start":5,"column_end":43}},{"value":"/ # assert_eq!(wstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100912,"byte_end":100954,"line_start":86,"line_end":86,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100959,"byte_end":100966,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100971,"byte_end":100974,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100979,"byte_end":100990,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100995,"byte_end":101025,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ let v = vec![84u32, 104u32, 101u32]; // 'T' 'h' 'e'","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101030,"byte_end":101085,"line_start":91,"line_end":91,"column_start":5,"column_end":60}},{"value":"/ # let cloned = v.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101090,"byte_end":101119,"line_start":92,"line_end":92,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101124,"byte_end":101167,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_vec(v);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101172,"byte_end":101210,"line_start":94,"line_end":94,"column_start":5,"column_end":43}},{"value":"/ # assert_eq!(wstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101215,"byte_end":101257,"line_start":95,"line_end":95,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101262,"byte_end":101269,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101787,"byte_end":101795,"line_start":113,"line_end":113,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<UString<C>>::from_ptr","value":"pub unsafe fn from_ptr(*const C, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UString` from a pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `UString` from a pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101370,"byte_end":101425,"line_start":101,"line_end":101,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101430,"byte_end":101433,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101438,"byte_end":101516,"line_start":103,"line_end":103,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101521,"byte_end":101524,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101529,"byte_end":101541,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101546,"byte_end":101549,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101554,"byte_end":101648,"line_start":107,"line_end":107,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101653,"byte_end":101666,"line_start":108,"line_end":108,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101671,"byte_end":101674,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101679,"byte_end":101691,"line_start":110,"line_end":110,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101696,"byte_end":101699,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":101704,"byte_end":101768,"line_start":112,"line_end":112,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":102261,"byte_end":102274,"line_start":126,"line_end":126,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<UString<C>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `UString` with the given capacity.","sig":null,"attributes":[{"value":"/ Creates a `UString` with the given capacity.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":102018,"byte_end":102066,"line_start":122,"line_end":122,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":102071,"byte_end":102074,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The string will be able to hold exactly `capacity` partial code units without reallocating.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":102079,"byte_end":102174,"line_start":124,"line_end":124,"column_start":5,"column_end":100}},{"value":"/ If `capacity` is set to 0, the string will not initially allocate.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":102179,"byte_end":102249,"line_start":125,"line_end":125,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":102469,"byte_end":102477,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"capacity","qualname":"<UString<C>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity this `UString` can hold without reallocating.\n","sig":null,"attributes":[{"value":"/ Returns the capacity this `UString` can hold without reallocating.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":102387,"byte_end":102457,"line_start":132,"line_end":132,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":102591,"byte_end":102596,"line_start":138,"line_end":138,"column_start":12,"column_end":17},"name":"clear","qualname":"<UString<C>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Truncate the `UString` to zero length.\n","sig":null,"attributes":[{"value":"/ Truncate the `UString` to zero length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":102537,"byte_end":102579,"line_start":137,"line_end":137,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":102846,"byte_end":102853,"line_start":146,"line_end":146,"column_start":12,"column_end":19},"name":"reserve","qualname":"<UString<C>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the capacity for at least `additional` more capacity to be inserted in the given\n `UString`.","sig":null,"attributes":[{"value":"/ Reserves the capacity for at least `additional` more capacity to be inserted in the given","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":102648,"byte_end":102741,"line_start":142,"line_end":142,"column_start":5,"column_end":98}},{"value":"/ `UString`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":102746,"byte_end":102760,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":102765,"byte_end":102768,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ More space may be reserved to avoid frequent allocations.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":102773,"byte_end":102834,"line_start":145,"line_end":145,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103324,"byte_end":103337,"line_start":155,"line_end":155,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<UString<C>>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more capacity to be inserted in the\n given `UString`. Does nothing if the capcity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more capacity to be inserted in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":102936,"byte_end":103030,"line_start":150,"line_end":150,"column_start":5,"column_end":99}},{"value":"/ given `UString`. Does nothing if the capcity is already sufficient.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103035,"byte_end":103106,"line_start":151,"line_end":151,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103111,"byte_end":103114,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Note that the allocator may give more space than is requested. Therefore capacity can not","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103119,"byte_end":103212,"line_start":153,"line_end":153,"column_start":5,"column_end":98}},{"value":"/ be relied upon to be precisely minimal. Prefer `reserve` if future insertions are expected.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103217,"byte_end":103312,"line_start":154,"line_end":154,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103517,"byte_end":103525,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<UString<C>>::into_vec","value":"pub fn into_vec(Self) -> Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts the wide string into a `Vec`, consuming the string in the process.\n","sig":null,"attributes":[{"value":"/ Converts the wide string into a `Vec`, consuming the string in the process.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103426,"byte_end":103505,"line_start":159,"line_end":159,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103621,"byte_end":103628,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"as_ustr","qualname":"<UString<C>>::as_ustr","value":"pub fn as_ustr(&Self) -> &UStr<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a `UStr` reference.\n","sig":null,"attributes":[{"value":"/ Converts to a `UStr` reference.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103574,"byte_end":103609,"line_start":164,"line_end":164,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104644,"byte_end":104648,"line_start":197,"line_end":197,"column_start":12,"column_end":16},"name":"push","qualname":"<UString<C>>::push","value":"pub fn push<impl AsRef<UStr<C>>: AsRef<UStr<C>>>(&mut Self,\n                                                 impl AsRef<UStr<C>>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the wide string with the given `&UStr`.","sig":null,"attributes":[{"value":"/ Extends the wide string with the given `&UStr`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103674,"byte_end":103725,"line_start":169,"line_end":169,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103730,"byte_end":103733,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103738,"byte_end":103828,"line_start":171,"line_end":171,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103833,"byte_end":103907,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103912,"byte_end":103915,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103920,"byte_end":103934,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103939,"byte_end":103942,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103947,"byte_end":103958,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103963,"byte_end":103993,"line_start":177,"line_end":177,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":103998,"byte_end":104021,"line_start":178,"line_end":178,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104026,"byte_end":104068,"line_start":179,"line_end":179,"column_start":5,"column_end":47}},{"value":"/ let cloned = wstr.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104073,"byte_end":104103,"line_start":180,"line_end":180,"column_start":5,"column_end":35}},{"value":"/ // Push the clone to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104108,"byte_end":104169,"line_start":181,"line_end":181,"column_start":5,"column_end":66}},{"value":"/ wstr.push(cloned);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104174,"byte_end":104196,"line_start":182,"line_end":182,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104201,"byte_end":104204,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104209,"byte_end":104271,"line_start":184,"line_end":184,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104276,"byte_end":104283,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104288,"byte_end":104291,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104296,"byte_end":104307,"line_start":187,"line_end":187,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104312,"byte_end":104342,"line_start":188,"line_end":188,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104347,"byte_end":104370,"line_start":189,"line_end":189,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104375,"byte_end":104417,"line_start":190,"line_end":190,"column_start":5,"column_end":47}},{"value":"/ let cloned = wstr.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104422,"byte_end":104452,"line_start":191,"line_end":191,"column_start":5,"column_end":35}},{"value":"/ // Push the clone to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104457,"byte_end":104518,"line_start":192,"line_end":192,"column_start":5,"column_end":66}},{"value":"/ wstr.push(cloned);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104523,"byte_end":104545,"line_start":193,"line_end":193,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104550,"byte_end":104553,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104558,"byte_end":104620,"line_start":195,"line_end":195,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104625,"byte_end":104632,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105733,"byte_end":105743,"line_start":229,"line_end":229,"column_start":12,"column_end":22},"name":"push_slice","qualname":"<UString<C>>::push_slice","value":"pub fn push_slice<impl AsRef<[C]>: AsRef<[C]>>(&mut Self, impl AsRef<[C]>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the wide string with the given slice.","sig":null,"attributes":[{"value":"/ Extends the wide string with the given slice.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104753,"byte_end":104802,"line_start":201,"line_end":201,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104807,"byte_end":104810,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104815,"byte_end":104905,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104910,"byte_end":104984,"line_start":204,"line_end":204,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104989,"byte_end":104992,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":104997,"byte_end":105011,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105016,"byte_end":105019,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105024,"byte_end":105035,"line_start":208,"line_end":208,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105040,"byte_end":105070,"line_start":209,"line_end":209,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105075,"byte_end":105098,"line_start":210,"line_end":210,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105103,"byte_end":105145,"line_start":211,"line_end":211,"column_start":5,"column_end":47}},{"value":"/ let cloned = wstr.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105150,"byte_end":105180,"line_start":212,"line_end":212,"column_start":5,"column_end":35}},{"value":"/ // Push the clone to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105185,"byte_end":105246,"line_start":213,"line_end":213,"column_start":5,"column_end":66}},{"value":"/ wstr.push_slice(cloned);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105251,"byte_end":105279,"line_start":214,"line_end":214,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105284,"byte_end":105287,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105292,"byte_end":105354,"line_start":216,"line_end":216,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105359,"byte_end":105366,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105371,"byte_end":105374,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105379,"byte_end":105390,"line_start":219,"line_end":219,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105395,"byte_end":105425,"line_start":220,"line_end":220,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105430,"byte_end":105453,"line_start":221,"line_end":221,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105458,"byte_end":105500,"line_start":222,"line_end":222,"column_start":5,"column_end":47}},{"value":"/ let cloned = wstr.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105505,"byte_end":105535,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/ // Push the clone to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105540,"byte_end":105601,"line_start":224,"line_end":224,"column_start":5,"column_end":66}},{"value":"/ wstr.push_slice(cloned);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105606,"byte_end":105634,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105639,"byte_end":105642,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105647,"byte_end":105709,"line_start":227,"line_end":227,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105714,"byte_end":105721,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106477,"byte_end":106490,"line_start":260,"line_end":260,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<UString<C>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the `UString` to match its length.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the `UString` to match its length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105838,"byte_end":105900,"line_start":233,"line_end":233,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105905,"byte_end":105908,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105913,"byte_end":105927,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105932,"byte_end":105935,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105940,"byte_end":105951,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105956,"byte_end":105986,"line_start":238,"line_end":238,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105991,"byte_end":105994,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ let mut s = U16String::from_str(\"foo\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":105999,"byte_end":106042,"line_start":240,"line_end":240,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106047,"byte_end":106050,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ s.reserve(100);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106055,"byte_end":106074,"line_start":242,"line_end":242,"column_start":5,"column_end":24}},{"value":"/ assert!(s.capacity() >= 100);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106079,"byte_end":106112,"line_start":243,"line_end":243,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106117,"byte_end":106120,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ s.shrink_to_fit();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106125,"byte_end":106147,"line_start":245,"line_end":245,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(3, s.capacity());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106152,"byte_end":106184,"line_start":246,"line_end":246,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106189,"byte_end":106196,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106201,"byte_end":106204,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106209,"byte_end":106220,"line_start":249,"line_end":249,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106225,"byte_end":106255,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106260,"byte_end":106263,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let mut s = U32String::from_str(\"foo\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106268,"byte_end":106311,"line_start":252,"line_end":252,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106316,"byte_end":106319,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ s.reserve(100);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106324,"byte_end":106343,"line_start":254,"line_end":254,"column_start":5,"column_end":24}},{"value":"/ assert!(s.capacity() >= 100);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106348,"byte_end":106381,"line_start":255,"line_end":255,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106386,"byte_end":106389,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ s.shrink_to_fit();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106394,"byte_end":106416,"line_start":257,"line_end":257,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(3, s.capacity());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106421,"byte_end":106453,"line_start":258,"line_end":258,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106458,"byte_end":106465,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107016,"byte_end":107031,"line_start":283,"line_end":283,"column_start":12,"column_end":27},"name":"into_boxed_ustr","qualname":"<UString<C>>::into_boxed_ustr","value":"pub fn into_boxed_ustr(Self) -> Box<UStr<C>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `UString` into a boxed `UStr`.","sig":null,"attributes":[{"value":"/ Converts this `UString` into a boxed `UStr`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106551,"byte_end":106599,"line_start":264,"line_end":264,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106604,"byte_end":106607,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106612,"byte_end":106626,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106631,"byte_end":106634,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106639,"byte_end":106646,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use widestring::{U16String, U16Str};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106651,"byte_end":106691,"line_start":269,"line_end":269,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106696,"byte_end":106699,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ let s = U16String::from_str(\"hello\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106704,"byte_end":106745,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106750,"byte_end":106753,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let b: Box<U16Str> = s.into_boxed_ustr();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106758,"byte_end":106803,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106808,"byte_end":106815,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106820,"byte_end":106823,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106828,"byte_end":106835,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use widestring::{U32String, U32Str};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106840,"byte_end":106880,"line_start":277,"line_end":277,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106885,"byte_end":106888,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let s = U32String::from_str(\"hello\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106893,"byte_end":106934,"line_start":279,"line_end":279,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106939,"byte_end":106942,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let b: Box<U32Str> = s.into_boxed_ustr();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106947,"byte_end":106992,"line_start":281,"line_end":281,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":106997,"byte_end":107004,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107697,"byte_end":107705,"line_start":305,"line_end":305,"column_start":12,"column_end":20},"name":"from_str","qualname":"<UString<u16>>::from_str","value":"pub fn from_str<S: AsRef<str> + ?Sized>(&S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a `U16String` copy from a `str`.","sig":null,"attributes":[{"value":"/ Encodes a `U16String` copy from a `str`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107205,"byte_end":107249,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107254,"byte_end":107257,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ This makes a wide string copy of the `str`. Since `str` will always be valid UTF-8, the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107262,"byte_end":107353,"line_start":292,"line_end":292,"column_start":5,"column_end":96}},{"value":"/ resulting `U16String` will also be valid UTF-16.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107358,"byte_end":107410,"line_start":293,"line_end":293,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107415,"byte_end":107418,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107423,"byte_end":107437,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107442,"byte_end":107445,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107450,"byte_end":107461,"line_start":297,"line_end":297,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107466,"byte_end":107496,"line_start":298,"line_end":298,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107501,"byte_end":107524,"line_start":299,"line_end":299,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107529,"byte_end":107572,"line_start":300,"line_end":300,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107577,"byte_end":107615,"line_start":301,"line_end":301,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107620,"byte_end":107623,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107628,"byte_end":107673,"line_start":303,"line_end":303,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107678,"byte_end":107685,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108406,"byte_end":108417,"line_start":327,"line_end":327,"column_start":12,"column_end":23},"name":"from_os_str","qualname":"<UString<u16>>::from_os_str","value":"pub fn from_os_str<S: AsRef<std::ffi::OsStr> + ?Sized>(&S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a `U16String` copy from an `OsStr`.","sig":null,"attributes":[{"value":"/ Encodes a `U16String` copy from an `OsStr`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107839,"byte_end":107886,"line_start":311,"line_end":311,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107891,"byte_end":107894,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This makes a wide string copy of the `OsStr`. Since `OsStr` makes no guarantees that it is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107899,"byte_end":107993,"line_start":313,"line_end":313,"column_start":5,"column_end":99}},{"value":"/ valid data, there is no guarantee that the resulting `U16String` will be valid UTF-16.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107998,"byte_end":108088,"line_start":314,"line_end":314,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108093,"byte_end":108096,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108101,"byte_end":108115,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108120,"byte_end":108123,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108128,"byte_end":108139,"line_start":318,"line_end":318,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108144,"byte_end":108174,"line_start":319,"line_end":319,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108179,"byte_end":108202,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108207,"byte_end":108250,"line_start":321,"line_end":321,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_os_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108255,"byte_end":108296,"line_start":322,"line_end":322,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108301,"byte_end":108304,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108309,"byte_end":108354,"line_start":324,"line_end":324,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108359,"byte_end":108366,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108371,"byte_end":108394,"line_start":326,"line_end":326,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109149,"byte_end":109157,"line_start":349,"line_end":349,"column_start":12,"column_end":20},"name":"push_str","qualname":"<UString<u16>>::push_str","value":"pub fn push_str<impl AsRef<str>: AsRef<str>>(&mut Self, impl AsRef<str>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given `&str`.","sig":null,"attributes":[{"value":"/ Extends the string with the given `&str`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108567,"byte_end":108612,"line_start":333,"line_end":333,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108617,"byte_end":108620,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108625,"byte_end":108715,"line_start":335,"line_end":335,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108720,"byte_end":108794,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108799,"byte_end":108802,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108807,"byte_end":108821,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108826,"byte_end":108829,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108834,"byte_end":108845,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108850,"byte_end":108880,"line_start":341,"line_end":341,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108885,"byte_end":108908,"line_start":342,"line_end":342,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108913,"byte_end":108955,"line_start":343,"line_end":343,"column_start":5,"column_end":47}},{"value":"/ // Push the original to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":108960,"byte_end":109024,"line_start":344,"line_end":344,"column_start":5,"column_end":69}},{"value":"/ wstr.push_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109029,"byte_end":109050,"line_start":345,"line_end":345,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109055,"byte_end":109058,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109063,"byte_end":109125,"line_start":347,"line_end":347,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109130,"byte_end":109137,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109870,"byte_end":109881,"line_start":370,"line_end":370,"column_start":12,"column_end":23},"name":"push_os_str","qualname":"<UString<u16>>::push_os_str","value":"pub fn push_os_str<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(&mut Self,\n                                                                        impl AsRef<std::ffi::OsStr>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given `&OsStr`.","sig":null,"attributes":[{"value":"/ Extends the string with the given `&OsStr`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109255,"byte_end":109302,"line_start":353,"line_end":353,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109307,"byte_end":109310,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109315,"byte_end":109405,"line_start":355,"line_end":355,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109410,"byte_end":109484,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109489,"byte_end":109492,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109497,"byte_end":109511,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109516,"byte_end":109519,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109524,"byte_end":109535,"line_start":360,"line_end":360,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109540,"byte_end":109570,"line_start":361,"line_end":361,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109575,"byte_end":109598,"line_start":362,"line_end":362,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109603,"byte_end":109645,"line_start":363,"line_end":363,"column_start":5,"column_end":47}},{"value":"/ // Push the original to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109650,"byte_end":109714,"line_start":364,"line_end":364,"column_start":5,"column_end":69}},{"value":"/ wstr.push_os_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109719,"byte_end":109743,"line_start":365,"line_end":365,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109748,"byte_end":109751,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109756,"byte_end":109818,"line_start":367,"line_end":367,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109823,"byte_end":109830,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":109835,"byte_end":109858,"line_start":369,"line_end":369,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110526,"byte_end":110536,"line_start":390,"line_end":390,"column_start":12,"column_end":22},"name":"from_chars","qualname":"<UString<u32>>::from_chars","value":"pub fn from_chars<impl Into<Vec<char>>: Into<Vec<char>>>(impl Into<Vec<char>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32String` from a vector of UTF-32 data.","sig":null,"attributes":[{"value":"/ Constructs a `U32String` from a vector of UTF-32 data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110027,"byte_end":110085,"line_start":376,"line_end":376,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110090,"byte_end":110093,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ No checks are made on the contents of the vector.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110098,"byte_end":110151,"line_start":378,"line_end":378,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110156,"byte_end":110159,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110164,"byte_end":110178,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110183,"byte_end":110186,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110191,"byte_end":110202,"line_start":382,"line_end":382,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110207,"byte_end":110237,"line_start":383,"line_end":383,"column_start":5,"column_end":35}},{"value":"/ let v: Vec<char> = \"Test\".chars().collect();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110242,"byte_end":110290,"line_start":384,"line_end":384,"column_start":5,"column_end":53}},{"value":"/ # let cloned: Vec<u32> = v.iter().map(|&c| c as u32).collect();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110295,"byte_end":110362,"line_start":385,"line_end":385,"column_start":5,"column_end":72}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110367,"byte_end":110410,"line_start":386,"line_end":386,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_chars(v);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110415,"byte_end":110455,"line_start":387,"line_end":387,"column_start":5,"column_end":45}},{"value":"/ # assert_eq!(wstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110460,"byte_end":110502,"line_start":388,"line_end":388,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110507,"byte_end":110514,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111163,"byte_end":111171,"line_start":411,"line_end":411,"column_start":12,"column_end":20},"name":"from_str","qualname":"<UString<u32>>::from_str","value":"pub fn from_str<S: AsRef<str> + ?Sized>(&S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a `U32String` copy from a `str`.","sig":null,"attributes":[{"value":"/ Encodes a `U32String` copy from a `str`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110671,"byte_end":110715,"line_start":396,"line_end":396,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110720,"byte_end":110723,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ This makes a wide string copy of the `str`. Since `str` will always be valid UTF-8, the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110728,"byte_end":110819,"line_start":398,"line_end":398,"column_start":5,"column_end":96}},{"value":"/ resulting `U32String` will also be valid UTF-32.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110824,"byte_end":110876,"line_start":399,"line_end":399,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110881,"byte_end":110884,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110889,"byte_end":110903,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110908,"byte_end":110911,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110916,"byte_end":110927,"line_start":403,"line_end":403,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110932,"byte_end":110962,"line_start":404,"line_end":404,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110967,"byte_end":110990,"line_start":405,"line_end":405,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110995,"byte_end":111038,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111043,"byte_end":111081,"line_start":407,"line_end":407,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111086,"byte_end":111089,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111094,"byte_end":111139,"line_start":409,"line_end":409,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111144,"byte_end":111151,"line_start":410,"line_end":410,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111879,"byte_end":111890,"line_start":432,"line_end":432,"column_start":12,"column_end":23},"name":"from_os_str","qualname":"<UString<u32>>::from_os_str","value":"pub fn from_os_str<S: AsRef<std::ffi::OsStr> + ?Sized>(&S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a `U32String` copy from an `OsStr`.","sig":null,"attributes":[{"value":"/ Encodes a `U32String` copy from an `OsStr`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111312,"byte_end":111359,"line_start":416,"line_end":416,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111364,"byte_end":111367,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ This makes a wide string copy of the `OsStr`. Since `OsStr` makes no guarantees that it is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111372,"byte_end":111466,"line_start":418,"line_end":418,"column_start":5,"column_end":99}},{"value":"/ valid data, there is no guarantee that the resulting `U32String` will be valid UTF-32.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111471,"byte_end":111561,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111566,"byte_end":111569,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111574,"byte_end":111588,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111593,"byte_end":111596,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111601,"byte_end":111612,"line_start":423,"line_end":423,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111617,"byte_end":111647,"line_start":424,"line_end":424,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111652,"byte_end":111675,"line_start":425,"line_end":425,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111680,"byte_end":111723,"line_start":426,"line_end":426,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_os_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111728,"byte_end":111769,"line_start":427,"line_end":427,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111774,"byte_end":111777,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111782,"byte_end":111827,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111832,"byte_end":111839,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":111844,"byte_end":111867,"line_start":431,"line_end":431,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112494,"byte_end":112507,"line_start":449,"line_end":449,"column_start":19,"column_end":32},"name":"from_char_ptr","qualname":"<UString<u32>>::from_char_ptr","value":"pub unsafe fn from_char_ptr(*const char, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32String` from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `U32String` from a `char` pointer and a length.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112061,"byte_end":112125,"line_start":437,"line_end":437,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112130,"byte_end":112133,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112138,"byte_end":112223,"line_start":439,"line_end":439,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112228,"byte_end":112231,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112236,"byte_end":112248,"line_start":441,"line_end":441,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112253,"byte_end":112256,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112261,"byte_end":112355,"line_start":443,"line_end":443,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112360,"byte_end":112373,"line_start":444,"line_end":444,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112378,"byte_end":112381,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112386,"byte_end":112398,"line_start":446,"line_end":446,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112403,"byte_end":112406,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112411,"byte_end":112475,"line_start":448,"line_end":448,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113187,"byte_end":113195,"line_start":469,"line_end":469,"column_start":12,"column_end":20},"name":"push_str","qualname":"<UString<u32>>::push_str","value":"pub fn push_str<impl AsRef<str>: AsRef<str>>(&mut Self, impl AsRef<str>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given `&str`.","sig":null,"attributes":[{"value":"/ Extends the string with the given `&str`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112605,"byte_end":112650,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112655,"byte_end":112658,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112663,"byte_end":112753,"line_start":455,"line_end":455,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112758,"byte_end":112832,"line_start":456,"line_end":456,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112837,"byte_end":112840,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112845,"byte_end":112859,"line_start":458,"line_end":458,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112864,"byte_end":112867,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112872,"byte_end":112883,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112888,"byte_end":112918,"line_start":461,"line_end":461,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112923,"byte_end":112946,"line_start":462,"line_end":462,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112951,"byte_end":112993,"line_start":463,"line_end":463,"column_start":5,"column_end":47}},{"value":"/ // Push the original to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":112998,"byte_end":113062,"line_start":464,"line_end":464,"column_start":5,"column_end":69}},{"value":"/ wstr.push_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113067,"byte_end":113088,"line_start":465,"line_end":465,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113093,"byte_end":113096,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113101,"byte_end":113163,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113168,"byte_end":113175,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113919,"byte_end":113930,"line_start":490,"line_end":490,"column_start":12,"column_end":23},"name":"push_os_str","qualname":"<UString<u32>>::push_os_str","value":"pub fn push_os_str<impl AsRef<std::ffi::OsStr>: AsRef<std::ffi::OsStr>>(&mut Self,\n                                                                        impl AsRef<std::ffi::OsStr>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given `&OsStr`.","sig":null,"attributes":[{"value":"/ Extends the string with the given `&OsStr`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113304,"byte_end":113351,"line_start":473,"line_end":473,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113356,"byte_end":113359,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113364,"byte_end":113454,"line_start":475,"line_end":475,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113459,"byte_end":113533,"line_start":476,"line_end":476,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113538,"byte_end":113541,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113546,"byte_end":113560,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113565,"byte_end":113568,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113573,"byte_end":113584,"line_start":480,"line_end":480,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113589,"byte_end":113619,"line_start":481,"line_end":481,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113624,"byte_end":113647,"line_start":482,"line_end":482,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113652,"byte_end":113694,"line_start":483,"line_end":483,"column_start":5,"column_end":47}},{"value":"/ // Push the original to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113699,"byte_end":113763,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ wstr.push_os_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113768,"byte_end":113792,"line_start":485,"line_end":485,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113797,"byte_end":113800,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113805,"byte_end":113867,"line_start":487,"line_end":487,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113872,"byte_end":113879,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":113884,"byte_end":113907,"line_start":489,"line_end":489,"column_start":5,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119953,"byte_end":119962,"line_start":741,"line_end":741,"column_start":10,"column_end":19},"name":"U16String","qualname":"::ustring::U16String","value":"UString<u16>","parent":null,"children":[],"decl_id":null,"docs":" An owned, mutable \"wide\" string for FFI that is **not** nul-aware.","sig":null,"attributes":[{"value":"/ An owned, mutable \"wide\" string for FFI that is **not** nul-aware.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":118820,"byte_end":118890,"line_start":715,"line_end":715,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":118891,"byte_end":118894,"line_start":716,"line_end":716,"column_start":1,"column_end":4}},{"value":"/ `U16String` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":118895,"byte_end":118988,"line_start":717,"line_end":717,"column_start":1,"column_end":94}},{"value":"/ contain invalid and ill-formed UTF-16 data. These strings are intended to be used with","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":118989,"byte_end":119079,"line_start":718,"line_end":718,"column_start":1,"column_end":91}},{"value":"/ FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119080,"byte_end":119173,"line_start":719,"line_end":719,"column_start":1,"column_end":94}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119174,"byte_end":119273,"line_start":720,"line_end":720,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119274,"byte_end":119277,"line_start":721,"line_end":721,"column_start":1,"column_end":4}},{"value":"/ `WideCString` should be used instead if nul-aware strings are required.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119278,"byte_end":119353,"line_start":722,"line_end":722,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119354,"byte_end":119357,"line_start":723,"line_end":723,"column_start":1,"column_end":4}},{"value":"/ `U16String` can be converted to and from many other standard Rust string types, including","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119358,"byte_end":119451,"line_start":724,"line_end":724,"column_start":1,"column_end":94}},{"value":"/ `OsString` and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119452,"byte_end":119521,"line_start":725,"line_end":725,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119522,"byte_end":119525,"line_start":726,"line_end":726,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119526,"byte_end":119540,"line_start":727,"line_end":727,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119541,"byte_end":119544,"line_start":728,"line_end":728,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U16String` and shows how to convert a `U16String` to a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119545,"byte_end":119639,"line_start":729,"line_end":729,"column_start":1,"column_end":95}},{"value":"/ regular Rust `String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119640,"byte_end":119666,"line_start":730,"line_end":730,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119667,"byte_end":119670,"line_start":731,"line_end":731,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119671,"byte_end":119682,"line_start":732,"line_end":732,"column_start":1,"column_end":12}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119683,"byte_end":119713,"line_start":733,"line_end":733,"column_start":1,"column_end":31}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119714,"byte_end":119733,"line_start":734,"line_end":734,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119734,"byte_end":119782,"line_start":735,"line_end":735,"column_start":1,"column_end":49}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119783,"byte_end":119821,"line_start":736,"line_end":736,"column_start":1,"column_end":39}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119822,"byte_end":119858,"line_start":737,"line_end":737,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119859,"byte_end":119901,"line_start":738,"line_end":738,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119902,"byte_end":119935,"line_start":739,"line_end":739,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119936,"byte_end":119943,"line_start":740,"line_end":740,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":121124,"byte_end":121133,"line_start":769,"line_end":769,"column_start":10,"column_end":19},"name":"U32String","qualname":"::ustring::U32String","value":"UString<u32>","parent":null,"children":[],"decl_id":null,"docs":" An owned, mutable 32-bit wide string for FFI that is **not** nul-aware.","sig":null,"attributes":[{"value":"/ An owned, mutable 32-bit wide string for FFI that is **not** nul-aware.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":119980,"byte_end":120055,"line_start":743,"line_end":743,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120056,"byte_end":120059,"line_start":744,"line_end":744,"column_start":1,"column_end":4}},{"value":"/ `U32String` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120060,"byte_end":120153,"line_start":745,"line_end":745,"column_start":1,"column_end":94}},{"value":"/ contain invalid and ill-formed UTF-32 data. These strings are intended to be used with","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120154,"byte_end":120244,"line_start":746,"line_end":746,"column_start":1,"column_end":91}},{"value":"/ FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120245,"byte_end":120338,"line_start":747,"line_end":747,"column_start":1,"column_end":94}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120339,"byte_end":120438,"line_start":748,"line_end":748,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120439,"byte_end":120442,"line_start":749,"line_end":749,"column_start":1,"column_end":4}},{"value":"/ `U32CString` should be used instead if nul-aware 32-bit strings are required.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120443,"byte_end":120524,"line_start":750,"line_end":750,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120525,"byte_end":120528,"line_start":751,"line_end":751,"column_start":1,"column_end":4}},{"value":"/ `U32String` can be converted to and from many other standard Rust string types, including","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120529,"byte_end":120622,"line_start":752,"line_end":752,"column_start":1,"column_end":94}},{"value":"/ `OsString` and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120623,"byte_end":120692,"line_start":753,"line_end":753,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120693,"byte_end":120696,"line_start":754,"line_end":754,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120697,"byte_end":120711,"line_start":755,"line_end":755,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120712,"byte_end":120715,"line_start":756,"line_end":756,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U32String` and shows how to convert a `U32String` to a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120716,"byte_end":120810,"line_start":757,"line_end":757,"column_start":1,"column_end":95}},{"value":"/ regular Rust `String`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120811,"byte_end":120837,"line_start":758,"line_end":758,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120838,"byte_end":120841,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120842,"byte_end":120853,"line_start":760,"line_end":760,"column_start":1,"column_end":12}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120854,"byte_end":120884,"line_start":761,"line_end":761,"column_start":1,"column_end":31}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120885,"byte_end":120904,"line_start":762,"line_end":762,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120905,"byte_end":120953,"line_start":763,"line_end":763,"column_start":1,"column_end":49}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120954,"byte_end":120992,"line_start":764,"line_end":764,"column_start":1,"column_end":39}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":120993,"byte_end":121029,"line_start":765,"line_end":765,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":121030,"byte_end":121072,"line_start":766,"line_end":766,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":121073,"byte_end":121106,"line_start":767,"line_end":767,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":121107,"byte_end":121114,"line_start":768,"line_end":768,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":121280,"byte_end":121290,"line_start":772,"line_end":772,"column_start":10,"column_end":20},"name":"WideString","qualname":"::ustring::WideString","value":"UString<WideChar>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `U16String` or `U32String` depending on platform. Intended to match typical C `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"/ Alias for `U16String` or `U32String` depending on platform. Intended to match typical C `wchar_t` size on platform.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":121151,"byte_end":121270,"line_start":771,"line_end":771,"column_start":1,"column_end":120}}]},{"kind":"Trait","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":10776,"byte_end":10781,"line_start":219,"line_end":219,"column_start":11,"column_end":16},"name":"UChar","qualname":"::UChar","value":"UChar: Debug + Sized + Copy + Ord + Eq","parent":null,"children":[{"krate":0,"index":504}],"decl_id":null,"docs":" Marker trait for primitive types used to represent UTF character data. Should not be used\n directly.\n","sig":null,"attributes":[{"value":"/ Marker trait for primitive types used to represent UTF character data. Should not be used","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":10658,"byte_end":10751,"line_start":217,"line_end":217,"column_start":1,"column_end":94}},{"value":"/ directly.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":10752,"byte_end":10765,"line_start":218,"line_end":218,"column_start":1,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":10855,"byte_end":10858,"line_start":221,"line_end":221,"column_start":11,"column_end":14},"name":"NUL","qualname":"::UChar::NUL","value":"Self","parent":{"krate":0,"index":503},"children":[],"decl_id":null,"docs":" NUL character value\n","sig":null,"attributes":[{"value":"/ NUL character value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":10821,"byte_end":10844,"line_start":220,"line_end":220,"column_start":5,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":11253,"byte_end":11261,"line_start":238,"line_end":238,"column_start":10,"column_end":18},"name":"WideChar","qualname":"::WideChar","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Alias for `u16` or `u32` depending on platform. Intended to match typical C `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":11120,"byte_end":11135,"line_start":236,"line_end":236,"column_start":1,"column_end":16}},{"value":"/ Alias for `u16` or `u32` depending on platform. Intended to match typical C `wchar_t` size on platform.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":11136,"byte_end":11243,"line_start":237,"line_end":237,"column_start":1,"column_end":108}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":12483,"byte_end":12498,"line_start":31,"line_end":31,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":13003,"byte_end":13018,"line_start":52,"line_end":52,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":13216,"byte_end":13231,"line_start":59,"line_end":59,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14162,"byte_end":14167,"line_start":83,"line_end":83,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21724,"byte_end":21729,"line_start":288,"line_end":288,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23932,"byte_end":23937,"line_start":358,"line_end":358,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33531,"byte_end":33539,"line_start":71,"line_end":71,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45834,"byte_end":45842,"line_start":398,"line_end":398,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58430,"byte_end":58438,"line_start":741,"line_end":741,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78804,"byte_end":78812,"line_start":1272,"line_end":1272,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78914,"byte_end":78917,"line_start":1278,"line_end":1278,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":79055,"byte_end":79058,"line_start":1284,"line_end":1284,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":79226,"byte_end":79234,"line_start":1291,"line_end":1291,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":79388,"byte_end":79396,"line_start":1298,"line_end":1298,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":79524,"byte_end":79531,"line_start":1304,"line_end":1304,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":79671,"byte_end":79679,"line_start":1310,"line_end":1310,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":79795,"byte_end":79803,"line_start":1316,"line_end":1316,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":79979,"byte_end":79987,"line_start":1325,"line_end":1325,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":80495,"byte_end":80503,"line_start":1348,"line_end":1348,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":80641,"byte_end":80649,"line_start":1355,"line_end":1355,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":80968,"byte_end":80976,"line_start":1365,"line_end":1365,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":81152,"byte_end":81160,"line_start":1374,"line_end":1374,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":81256,"byte_end":81261,"line_start":1380,"line_end":1380,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":81407,"byte_end":81410,"line_start":1387,"line_end":1387,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":81553,"byte_end":81556,"line_start":1393,"line_end":1393,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":81700,"byte_end":81705,"line_start":1399,"line_end":1399,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":81800,"byte_end":81808,"line_start":1405,"line_end":1405,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":81902,"byte_end":81907,"line_start":1411,"line_end":1411,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":82007,"byte_end":82015,"line_start":1417,"line_end":1417,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":82127,"byte_end":82130,"line_start":1423,"line_end":1423,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":82375,"byte_end":82383,"line_start":1430,"line_end":1430,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":82515,"byte_end":82518,"line_start":1437,"line_end":1437,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":82657,"byte_end":82660,"line_start":1444,"line_end":1444,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":82860,"byte_end":82868,"line_start":1451,"line_end":1451,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":83255,"byte_end":83263,"line_start":1464,"line_end":1464,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":83370,"byte_end":83378,"line_start":1470,"line_end":1470,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":83585,"byte_end":83593,"line_start":1477,"line_end":1477,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":86640,"byte_end":86654,"line_start":23,"line_end":23,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":86847,"byte_end":86861,"line_start":30,"line_end":30,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87899,"byte_end":87903,"line_start":57,"line_end":57,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90285,"byte_end":90289,"line_start":132,"line_end":132,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92394,"byte_end":92398,"line_start":201,"line_end":201,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100337,"byte_end":100344,"line_start":67,"line_end":67,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107186,"byte_end":107193,"line_start":289,"line_end":289,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110008,"byte_end":110015,"line_start":375,"line_end":375,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":114112,"byte_end":114119,"line_start":496,"line_end":496,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":114220,"byte_end":114223,"line_start":502,"line_end":502,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":114343,"byte_end":114346,"line_start":508,"line_end":508,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":114462,"byte_end":114465,"line_start":514,"line_end":514,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":114578,"byte_end":114581,"line_start":520,"line_end":520,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":114694,"byte_end":114697,"line_start":526,"line_end":526,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":114807,"byte_end":114814,"line_start":532,"line_end":532,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":114913,"byte_end":114920,"line_start":538,"line_end":538,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":115055,"byte_end":115062,"line_start":545,"line_end":545,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":115212,"byte_end":115219,"line_start":552,"line_end":552,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":115373,"byte_end":115381,"line_start":559,"line_end":559,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":115519,"byte_end":115527,"line_start":566,"line_end":566,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":115666,"byte_end":115673,"line_start":572,"line_end":572,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":115788,"byte_end":115795,"line_start":578,"line_end":578,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":115968,"byte_end":115975,"line_start":587,"line_end":587,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":116122,"byte_end":116129,"line_start":596,"line_end":596,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":116273,"byte_end":116280,"line_start":603,"line_end":603,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":116467,"byte_end":116474,"line_start":610,"line_end":610,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":116631,"byte_end":116638,"line_start":617,"line_end":617,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":116835,"byte_end":116842,"line_start":624,"line_end":624,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":117017,"byte_end":117024,"line_start":631,"line_end":631,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":117218,"byte_end":117225,"line_start":638,"line_end":638,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":117320,"byte_end":117324,"line_start":644,"line_end":644,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":117466,"byte_end":117469,"line_start":651,"line_end":651,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":117594,"byte_end":117597,"line_start":657,"line_end":657,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":117723,"byte_end":117727,"line_start":663,"line_end":663,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":117821,"byte_end":117828,"line_start":669,"line_end":669,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":117921,"byte_end":117925,"line_start":675,"line_end":675,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":118025,"byte_end":118032,"line_start":681,"line_end":681,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":118143,"byte_end":118146,"line_start":687,"line_end":687,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":118386,"byte_end":118393,"line_start":695,"line_end":695,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":118516,"byte_end":118519,"line_start":701,"line_end":701,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":118632,"byte_end":118635,"line_start":707,"line_end":707,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":12483,"byte_end":12498,"line_start":31,"line_end":31,"column_start":16,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":13003,"byte_end":13018,"line_start":52,"line_end":52,"column_start":39,"column_end":54},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":13216,"byte_end":13231,"line_start":59,"line_end":59,"column_start":38,"column_end":53},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":510},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":14162,"byte_end":14167,"line_start":83,"line_end":83,"column_start":16,"column_end":21},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":21724,"byte_end":21729,"line_start":288,"line_end":288,"column_start":6,"column_end":11},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstr.rs","byte_start":23932,"byte_end":23937,"line_start":358,"line_end":358,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":33531,"byte_end":33539,"line_start":71,"line_end":71,"column_start":16,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":45834,"byte_end":45842,"line_start":398,"line_end":398,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":58430,"byte_end":58438,"line_start":741,"line_end":741,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78804,"byte_end":78812,"line_start":1272,"line_end":1272,"column_start":33,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":1842}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":78914,"byte_end":78917,"line_start":1278,"line_end":1278,"column_start":34,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":5,"index":339},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":79055,"byte_end":79058,"line_start":1284,"line_end":1284,"column_start":34,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":339},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":79226,"byte_end":79234,"line_start":1291,"line_end":1291,"column_start":40,"column_end":48},"kind":{"Impl":{"id":12}},"from":{"krate":1,"index":6405},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":79388,"byte_end":79396,"line_start":1298,"line_end":1298,"column_start":40,"column_end":48},"kind":{"Impl":{"id":13}},"from":{"krate":1,"index":6405},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":79524,"byte_end":79531,"line_start":1304,"line_end":1304,"column_start":38,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":79671,"byte_end":79679,"line_start":1310,"line_end":1310,"column_start":65,"column_end":73},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":79795,"byte_end":79803,"line_start":1316,"line_end":1316,"column_start":37,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":79979,"byte_end":79987,"line_start":1325,"line_end":1325,"column_start":26,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":80495,"byte_end":80503,"line_start":1348,"line_end":1348,"column_start":18,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":80641,"byte_end":80649,"line_start":1355,"line_end":1355,"column_start":18,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":80968,"byte_end":80976,"line_start":1365,"line_end":1365,"column_start":25,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":81152,"byte_end":81160,"line_start":1374,"line_end":1374,"column_start":37,"column_end":45},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":1603}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":81256,"byte_end":81261,"line_start":1380,"line_end":1380,"column_start":28,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":530},"to":{"krate":5,"index":330}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":81407,"byte_end":81410,"line_start":1387,"line_end":1387,"column_start":35,"column_end":38},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":339},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":81553,"byte_end":81556,"line_start":1393,"line_end":1393,"column_start":35,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":5,"index":339},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":81700,"byte_end":81705,"line_start":1399,"line_end":1399,"column_start":36,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":530},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":81800,"byte_end":81808,"line_start":1405,"line_end":1405,"column_start":36,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":81902,"byte_end":81907,"line_start":1411,"line_end":1411,"column_start":31,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":530},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":82007,"byte_end":82015,"line_start":1417,"line_end":1417,"column_start":31,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":82127,"byte_end":82130,"line_start":1423,"line_end":1423,"column_start":43,"column_end":46},"kind":{"Impl":{"id":29}},"from":{"krate":5,"index":82},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":82375,"byte_end":82383,"line_start":1430,"line_end":1430,"column_start":40,"column_end":48},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":82515,"byte_end":82518,"line_start":1437,"line_end":1437,"column_start":38,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":82},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":82657,"byte_end":82660,"line_start":1444,"line_end":1444,"column_start":28,"column_end":31},"kind":{"Impl":{"id":32}},"from":{"krate":5,"index":82},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":82860,"byte_end":82868,"line_start":1451,"line_end":1451,"column_start":16,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":83255,"byte_end":83263,"line_start":1464,"line_end":1464,"column_start":33,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":1842}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":83370,"byte_end":83378,"line_start":1470,"line_end":1470,"column_start":39,"column_end":47},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ucstring.rs","byte_start":83585,"byte_end":83593,"line_start":1477,"line_end":1477,"column_start":38,"column_end":46},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":86640,"byte_end":86654,"line_start":23,"line_end":23,"column_start":29,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":86847,"byte_end":86861,"line_start":30,"line_end":30,"column_start":28,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":617},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":87899,"byte_end":87903,"line_start":57,"line_end":57,"column_start":16,"column_end":20},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":90285,"byte_end":90289,"line_start":132,"line_end":132,"column_start":6,"column_end":10},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustr.rs","byte_start":92394,"byte_end":92398,"line_start":201,"line_end":201,"column_start":6,"column_end":10},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":100337,"byte_end":100344,"line_start":67,"line_end":67,"column_start":16,"column_end":23},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":107186,"byte_end":107193,"line_start":289,"line_end":289,"column_start":6,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":110008,"byte_end":110015,"line_start":375,"line_end":375,"column_start":6,"column_end":13},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":114112,"byte_end":114119,"line_start":496,"line_end":496,"column_start":33,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1842}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":114220,"byte_end":114223,"line_start":502,"line_end":502,"column_start":33,"column_end":36},"kind":{"Impl":{"id":46}},"from":{"krate":5,"index":339},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":114343,"byte_end":114346,"line_start":508,"line_end":508,"column_start":33,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":5,"index":339},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":114462,"byte_end":114465,"line_start":514,"line_end":514,"column_start":29,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":5,"index":4232},"to":{"krate":2,"index":1842}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":114578,"byte_end":114581,"line_start":520,"line_end":520,"column_start":29,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":5,"index":4232},"to":{"krate":2,"index":1842}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":114694,"byte_end":114697,"line_start":526,"line_end":526,"column_start":29,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":5,"index":4232},"to":{"krate":2,"index":1842}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":114807,"byte_end":114814,"line_start":532,"line_end":532,"column_start":23,"column_end":30},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":114913,"byte_end":114920,"line_start":538,"line_end":538,"column_start":23,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":115055,"byte_end":115062,"line_start":545,"line_end":545,"column_start":35,"column_end":42},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":115212,"byte_end":115219,"line_start":552,"line_end":552,"column_start":35,"column_end":42},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":115373,"byte_end":115381,"line_start":559,"line_end":559,"column_start":39,"column_end":47},"kind":{"Impl":{"id":55}},"from":{"krate":1,"index":6405},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":115519,"byte_end":115527,"line_start":566,"line_end":566,"column_start":39,"column_end":47},"kind":{"Impl":{"id":56}},"from":{"krate":1,"index":6405},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":115666,"byte_end":115673,"line_start":572,"line_end":572,"column_start":64,"column_end":71},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":115788,"byte_end":115795,"line_start":578,"line_end":578,"column_start":37,"column_end":44},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":115968,"byte_end":115975,"line_start":587,"line_end":587,"column_start":26,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":116122,"byte_end":116129,"line_start":596,"line_end":596,"column_start":39,"column_end":46},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1653}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":116273,"byte_end":116280,"line_start":603,"line_end":603,"column_start":40,"column_end":47},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1690}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":116467,"byte_end":116474,"line_start":610,"line_end":610,"column_start":47,"column_end":54},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1653}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":116631,"byte_end":116638,"line_start":617,"line_end":617,"column_start":48,"column_end":55},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1690}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":116835,"byte_end":116842,"line_start":624,"line_end":624,"column_start":52,"column_end":59},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1653}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":117017,"byte_end":117024,"line_start":631,"line_end":631,"column_start":53,"column_end":60},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1690}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":117218,"byte_end":117225,"line_start":638,"line_end":638,"column_start":36,"column_end":43},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1603}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":117320,"byte_end":117324,"line_start":644,"line_end":644,"column_start":28,"column_end":32},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":630},"to":{"krate":5,"index":330}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":117466,"byte_end":117469,"line_start":651,"line_end":651,"column_start":34,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":5,"index":339},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":117594,"byte_end":117597,"line_start":657,"line_end":657,"column_start":34,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":5,"index":339},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":117723,"byte_end":117727,"line_start":663,"line_end":663,"column_start":35,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":630},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":117821,"byte_end":117828,"line_start":669,"line_end":669,"column_start":35,"column_end":42},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":117921,"byte_end":117925,"line_start":675,"line_end":675,"column_start":31,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":630},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":118025,"byte_end":118032,"line_start":681,"line_end":681,"column_start":31,"column_end":38},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":118143,"byte_end":118146,"line_start":687,"line_end":687,"column_start":42,"column_end":45},"kind":{"Impl":{"id":74}},"from":{"krate":5,"index":82},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":118386,"byte_end":118393,"line_start":695,"line_end":695,"column_start":39,"column_end":46},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":118516,"byte_end":118519,"line_start":701,"line_end":701,"column_start":37,"column_end":40},"kind":{"Impl":{"id":76}},"from":{"krate":5,"index":82},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\ustring.rs","byte_start":118632,"byte_end":118635,"line_start":707,"line_end":707,"column_start":28,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":82},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":10783,"byte_end":10788,"line_start":219,"line_end":219,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":6210},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":10791,"byte_end":10796,"line_start":219,"line_end":219,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1932},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":10799,"byte_end":10803,"line_start":219,"line_end":219,"column_start":34,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":1937},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":10806,"byte_end":10809,"line_start":219,"line_end":219,"column_start":41,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1679},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.2\\src\\lib.rs","byte_start":10812,"byte_end":10814,"line_start":219,"line_end":219,"column_start":47,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":1658},"to":{"krate":0,"index":503}}]}