{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22","program":"C:\\Users\\Anubi\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio","--edition=2018","C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"fnv\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libc\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-util\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"sync\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","--cfg","feature=\"winapi\"","-C","metadata=9ba674c8cf296812","-C","extra-filename=-9ba674c8cf296812","--out-dir","c:\\Users\\Anubi\\Udemy\\Rust\\MyRustWebsocket\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Anubi\\Udemy\\Rust\\MyRustWebsocket\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\Anubi\\Udemy\\Rust\\MyRustWebsocket\\target\\rls\\debug\\deps\\libbytes-b6272f349639dca9.rmeta","--extern","fnv=c:\\Users\\Anubi\\Udemy\\Rust\\MyRustWebsocket\\target\\rls\\debug\\deps\\libfnv-57c9cd9bb049dc8e.rmeta","--extern","futures_core=c:\\Users\\Anubi\\Udemy\\Rust\\MyRustWebsocket\\target\\rls\\debug\\deps\\libfutures_core-ebf62d3e317efd40.rmeta","--extern","iovec=c:\\Users\\Anubi\\Udemy\\Rust\\MyRustWebsocket\\target\\rls\\debug\\deps\\libiovec-0ca415fee39ace79.rmeta","--extern","lazy_static=c:\\Users\\Anubi\\Udemy\\Rust\\MyRustWebsocket\\target\\rls\\debug\\deps\\liblazy_static-d2a3d85c36d2e5c0.rmeta","--extern","memchr=c:\\Users\\Anubi\\Udemy\\Rust\\MyRustWebsocket\\target\\rls\\debug\\deps\\libmemchr-49bfdcc9bc78ef59.rmeta","--extern","mio=c:\\Users\\Anubi\\Udemy\\Rust\\MyRustWebsocket\\target\\rls\\debug\\deps\\libmio-bf18572f39f3ac27.rmeta","--extern","pin_project_lite=c:\\Users\\Anubi\\Udemy\\Rust\\MyRustWebsocket\\target\\rls\\debug\\deps\\libpin_project_lite-0d5c189ee850ad61.rmeta","--extern","slab=c:\\Users\\Anubi\\Udemy\\Rust\\MyRustWebsocket\\target\\rls\\debug\\deps\\libslab-2d6e0c32ffe92a9a.rmeta","--extern","winapi=c:\\Users\\Anubi\\Udemy\\Rust\\MyRustWebsocket\\target\\rls\\debug\\deps\\libwinapi-6fe71a8251f79970.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Anubi\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Anubi\\Udemy\\Rust\\MyRustWebsocket\\target\\rls\\debug\\deps\\libtokio-9ba674c8cf296812.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[3120690670894884556,10873319804595492595]},"crate_root":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src","external_crates":[{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2951836381390344939,16649128255697415692]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","num":2,"id":{"name":"core","disambiguator":[11710271729537087300,7936810236211621860]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[221620535861096092,14052674651022364528]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6754765288211962248,11319126938093173531]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12146955935630897969,9411134559866261862]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14833668363639865695,5655522694650611187]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4272166054306925428,11429919485785531186]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12683507629027033058,3032465482526171902]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3621516987667804763,14118985286121416357]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3114763798488812350,3771385689256703239]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[12308387851717752688,1271721453298801945]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[41357415245366713,267475365531445088]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14877867959531453948,6948897495248942720]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\try_join.rs","num":14,"id":{"name":"pin_project_lite","disambiguator":[14276942740805917056,17118290791222923787]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","num":15,"id":{"name":"bytes","disambiguator":[7135269789112322313,11078045287243048667]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","num":16,"id":{"name":"futures_core","disambiguator":[17769233663039874987,16834160458194533669]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\platform.rs","num":17,"id":{"name":"mio","disambiguator":[10340994449039788838,2272077357542617295]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\platform.rs","num":18,"id":{"name":"net2","disambiguator":[8617644603742547064,15388209429404040409]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","num":19,"id":{"name":"winapi","disambiguator":[11856882945979558724,14879928995245926018]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\platform.rs","num":20,"id":{"name":"cfg_if","disambiguator":[3734860209140798689,14506924879911982731]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","num":21,"id":{"name":"iovec","disambiguator":[10760462275380225494,14543731673056208042]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","num":22,"id":{"name":"slab","disambiguator":[5177127645849670698,14978272138371796421]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\platform.rs","num":23,"id":{"name":"miow","disambiguator":[3310313267486230974,16411130177052103516]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\platform.rs","num":24,"id":{"name":"kernel32","disambiguator":[17141300724075450123,16724126007151737776]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\platform.rs","num":25,"id":{"name":"winapi","disambiguator":[2960638698282914680,4967541454394922489]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\platform.rs","num":26,"id":{"name":"ws2_32","disambiguator":[15272389877049087959,4601086224162899295]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\platform.rs","num":27,"id":{"name":"log","disambiguator":[5918970418858838876,11327328042549855306]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","num":28,"id":{"name":"lazy_static","disambiguator":[4516623831510152009,17434107222073870648]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","num":29,"id":{"name":"fnv","disambiguator":[2263003884098538549,10377970547828183879]}},{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_until.rs","num":30,"id":{"name":"memchr","disambiguator":[10217865961661611903,12425849656899133429]}}],"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":0,"byte_end":15827,"line_start":1,"line_end":436,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":8336},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\support.rs","byte_start":30953,"byte_end":30959,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":30107},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\support.rs","byte_start":30979,"byte_end":30982,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":32540},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\support.rs","byte_start":31003,"byte_end":31007,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\mod.rs","byte_start":31111,"byte_end":31121,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\mod.rs","byte_start":31123,"byte_end":31132,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\mod.rs","byte_start":31166,"byte_end":31173,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45085,"byte_end":45097,"line_start":187,"line_end":187,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45143,"byte_end":45152,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45197,"byte_end":45206,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45253,"byte_end":45263,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45359,"byte_end":45370,"line_start":203,"line_end":203,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45421,"byte_end":45433,"line_start":206,"line_end":206,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45665,"byte_end":45670,"line_start":222,"line_end":222,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45672,"byte_end":45680,"line_start":222,"line_end":222,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1304},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45682,"byte_end":45691,"line_start":222,"line_end":222,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45744,"byte_end":45748,"line_start":225,"line_end":225,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45804,"byte_end":45808,"line_start":229,"line_end":229,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2127},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45810,"byte_end":45815,"line_start":229,"line_end":229,"column_start":15,"column_end":20},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2353},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45817,"byte_end":45823,"line_start":229,"line_end":229,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2368},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45825,"byte_end":45829,"line_start":229,"line_end":229,"column_start":30,"column_end":34},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1999},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45831,"byte_end":45846,"line_start":229,"line_end":229,"column_start":36,"column_end":51},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2007},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45848,"byte_end":45860,"line_start":229,"line_end":229,"column_start":53,"column_end":65},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1388},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45862,"byte_end":45874,"line_start":229,"line_end":229,"column_start":67,"column_end":79},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45876,"byte_end":45889,"line_start":229,"line_end":229,"column_start":81,"column_end":94},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":10215},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45899,"byte_end":45908,"line_start":230,"line_end":230,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":10201},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45910,"byte_end":45919,"line_start":230,"line_end":230,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":10138},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45921,"byte_end":45930,"line_start":230,"line_end":230,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2109},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45932,"byte_end":45936,"line_start":230,"line_end":230,"column_start":42,"column_end":46},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2125},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45938,"byte_end":45943,"line_start":230,"line_end":230,"column_start":48,"column_end":53},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":10066},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45945,"byte_end":45950,"line_start":230,"line_end":230,"column_start":55,"column_end":60},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2354},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45952,"byte_end":45958,"line_start":230,"line_end":230,"column_start":62,"column_end":68},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2366},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45960,"byte_end":45964,"line_start":230,"line_end":230,"column_start":70,"column_end":74},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9232},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45966,"byte_end":45971,"line_start":230,"line_end":230,"column_start":76,"column_end":81},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9141},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":45973,"byte_end":45977,"line_start":230,"line_end":230,"column_start":83,"column_end":87},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2384},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":46028,"byte_end":46041,"line_start":234,"line_end":234,"column_start":24,"column_end":37},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9186},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":46043,"byte_end":46055,"line_start":234,"line_end":234,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2541},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":46210,"byte_end":46215,"line_start":239,"line_end":239,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":6580},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":46217,"byte_end":46226,"line_start":239,"line_end":239,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2539},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":46228,"byte_end":46234,"line_start":239,"line_end":239,"column_start":41,"column_end":47},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72675,"byte_end":72688,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":2839},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":7951062,"byte_end":7951070,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":2581}},{"kind":"Use","ref_id":{"krate":0,"index":2845},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":7951100,"byte_end":7951108,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2581}},{"kind":"Use","ref_id":{"krate":0,"index":2852},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":7951110,"byte_end":7951119,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2581}},{"kind":"Use","ref_id":{"krate":0,"index":2859},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":7951162,"byte_end":7951175,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":2581}},{"kind":"Use","ref_id":{"krate":0,"index":2863},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":7951177,"byte_end":7951191,"line_start":13,"line_end":13,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":2581}},{"kind":"Use","ref_id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":7951193,"byte_end":7951205,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2581}},{"kind":"Use","ref_id":{"krate":0,"index":2869},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":7951193,"byte_end":7951205,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2734}},{"kind":"Use","ref_id":{"krate":0,"index":2837},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72819,"byte_end":72830,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":2874},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72857,"byte_end":72866,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3006},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\mod.rs","byte_start":8010860,"byte_end":8010868,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":2876}},{"kind":"Use","ref_id":{"krate":0,"index":3011},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\mod.rs","byte_start":8010870,"byte_end":8010882,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2876}},{"kind":"Use","ref_id":{"krate":0,"index":3012},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\mod.rs","byte_start":8010870,"byte_end":8010882,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2996}},{"kind":"Use","ref_id":{"krate":0,"index":3001},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\mod.rs","byte_start":8010884,"byte_end":8010892,"line_start":7,"line_end":7,"column_start":41,"column_end":49},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":2876}},{"kind":"Use","ref_id":{"krate":0,"index":2999},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72924,"byte_end":72933,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105483,"byte_end":105485,"line_start":16,"line_end":16,"column_start":16,"column_end":18},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105494,"byte_end":105506,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105508,"byte_end":105517,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105519,"byte_end":105529,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":1999},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105594,"byte_end":105609,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2007},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105616,"byte_end":105628,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":1388},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105635,"byte_end":105647,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105654,"byte_end":105667,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113198,"byte_end":113205,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":3750},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113290,"byte_end":113296,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113298,"byte_end":113313,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":3841},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099507,"byte_end":8099513,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":3836}},{"kind":"Use","ref_id":{"krate":0,"index":4056},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8136417,"byte_end":8136427,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":3978}},{"kind":"Use","ref_id":{"krate":0,"index":4148},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8136457,"byte_end":8136462,"line_start":21,"line_end":21,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":3978}},{"kind":"Use","ref_id":{"krate":0,"index":4588},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8136464,"byte_end":8136469,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":3978}},{"kind":"Use","ref_id":{"krate":0,"index":4249},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8136635,"byte_end":8136639,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":3978}},{"kind":"Use","ref_id":{"krate":0,"index":4595},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8136641,"byte_end":8136645,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":3978}},{"kind":"Use","ref_id":{"krate":0,"index":4339},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8136755,"byte_end":8136759,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":3978}},{"kind":"Use","ref_id":{"krate":0,"index":4609},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8136761,"byte_end":8136765,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":3978}},{"kind":"Use","ref_id":{"krate":0,"index":4362},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8136800,"byte_end":8136807,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":3978}},{"kind":"Use","ref_id":{"krate":0,"index":4615},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8136809,"byte_end":8136816,"line_start":51,"line_end":51,"column_start":28,"column_end":35},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":3978}},{"kind":"Use","ref_id":{"krate":0,"index":4622},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8136856,"byte_end":8136865,"line_start":54,"line_end":54,"column_start":21,"column_end":30},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":3978}},{"kind":"Use","ref_id":{"krate":16,"index":68},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137157,"byte_end":8137163,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":3978}},{"kind":"Use","ref_id":{"krate":0,"index":5999},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254972,"byte_end":8254979,"line_start":433,"line_end":433,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":4667}},{"kind":"Use","ref_id":{"krate":0,"index":6011},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254981,"byte_end":8254998,"line_start":433,"line_end":433,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":4667}},{"kind":"Use","ref_id":{"krate":0,"index":4969},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8303403,"byte_end":8303410,"line_start":70,"line_end":70,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":4868}},{"kind":"Use","ref_id":{"krate":0,"index":4963},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8303412,"byte_end":8303420,"line_start":70,"line_end":70,"column_start":34,"column_end":42},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":4868}},{"kind":"Use","ref_id":{"krate":0,"index":4954},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8303422,"byte_end":8303428,"line_start":70,"line_end":70,"column_start":44,"column_end":50},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":4868}},{"kind":"Use","ref_id":{"krate":0,"index":5241},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8303506,"byte_end":8303523,"line_start":77,"line_end":77,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":4868}},{"kind":"Use","ref_id":{"krate":0,"index":5235},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8303525,"byte_end":8303542,"line_start":77,"line_end":77,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":4868}},{"kind":"Use","ref_id":{"krate":0,"index":5226},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8303544,"byte_end":8303559,"line_start":77,"line_end":77,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":4868}},{"kind":"Use","ref_id":{"krate":0,"index":6136},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8255223,"byte_end":8255228,"line_start":445,"line_end":445,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":4667}},{"kind":"Use","ref_id":{"krate":0,"index":5304},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8255230,"byte_end":8255240,"line_start":445,"line_end":445,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":4667}},{"kind":"Use","ref_id":{"krate":0,"index":6143},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8255242,"byte_end":8255254,"line_start":445,"line_end":445,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":4667}},{"kind":"Use","ref_id":{"krate":0,"index":5308},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8255256,"byte_end":8255271,"line_start":445,"line_end":445,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":4667}},{"kind":"Use","ref_id":{"krate":0,"index":6148},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8255311,"byte_end":8255317,"line_start":448,"line_end":448,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":4667}},{"kind":"Use","ref_id":{"krate":0,"index":6281},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8255454,"byte_end":8255463,"line_start":455,"line_end":455,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":4667}},{"kind":"Use","ref_id":{"krate":0,"index":6285},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8255465,"byte_end":8255480,"line_start":455,"line_end":455,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":4667}},{"kind":"Use","ref_id":{"krate":0,"index":6292},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8255482,"byte_end":8255502,"line_start":455,"line_end":455,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":4667}},{"kind":"Use","ref_id":{"krate":0,"index":6302},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8255543,"byte_end":8255549,"line_start":458,"line_end":458,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":4667}},{"kind":"Use","ref_id":{"krate":0,"index":6309},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8255551,"byte_end":8255566,"line_start":458,"line_end":458,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":4667}},{"kind":"Use","ref_id":{"krate":0,"index":6318},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8255568,"byte_end":8255584,"line_start":458,"line_end":458,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":4667}},{"kind":"Use","ref_id":{"krate":0,"index":3670},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8528320,"byte_end":8528329,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":6384}},{"kind":"Use","ref_id":{"krate":0,"index":3672},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8528331,"byte_end":8528341,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":6384}},{"kind":"Use","ref_id":{"krate":0,"index":6401},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8528379,"byte_end":8528384,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":6384}},{"kind":"Use","ref_id":{"krate":0,"index":6403},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8528429,"byte_end":8528438,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":6384}},{"kind":"Use","ref_id":{"krate":0,"index":6563},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8528493,"byte_end":8528504,"line_start":238,"line_end":238,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":6384}},{"kind":"Use","ref_id":{"krate":0,"index":6554},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8528506,"byte_end":8528514,"line_start":238,"line_end":238,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":6384}},{"kind":"Use","ref_id":{"krate":0,"index":6506},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8528562,"byte_end":8528570,"line_start":241,"line_end":241,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":6384}},{"kind":"Use","ref_id":{"krate":0,"index":6401},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14562,"byte_end":14567,"line_start":389,"line_end":389,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7063},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562073,"byte_end":8562083,"line_start":101,"line_end":101,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":6578}},{"kind":"Use","ref_id":{"krate":0,"index":6669},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562113,"byte_end":8562122,"line_start":104,"line_end":104,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":6578}},{"kind":"Use","ref_id":{"krate":0,"index":6668},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562124,"byte_end":8562135,"line_start":104,"line_end":104,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":6578}},{"kind":"Use","ref_id":{"krate":0,"index":7105},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562137,"byte_end":8562142,"line_start":104,"line_end":104,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":6578}},{"kind":"Use","ref_id":{"krate":0,"index":7162},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562196,"byte_end":8562201,"line_start":109,"line_end":109,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":6578}},{"kind":"Use","ref_id":{"krate":0,"index":7174},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562240,"byte_end":8562247,"line_start":112,"line_end":112,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":6578}},{"kind":"Use","ref_id":{"krate":0,"index":6922},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562283,"byte_end":8562291,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":6578}},{"kind":"Use","ref_id":{"krate":0,"index":6923},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562293,"byte_end":8562304,"line_start":115,"line_end":115,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":6578}},{"kind":"Use","ref_id":{"krate":0,"index":7197},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562306,"byte_end":8562314,"line_start":115,"line_end":115,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":6578}},{"kind":"Use","ref_id":{"krate":0,"index":6950},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562364,"byte_end":8562371,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":6578}},{"kind":"Use","ref_id":{"krate":0,"index":6952},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562373,"byte_end":8562383,"line_start":119,"line_end":119,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":6578}},{"kind":"Use","ref_id":{"krate":0,"index":7202},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562385,"byte_end":8562392,"line_start":119,"line_end":119,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":6578}},{"kind":"Use","ref_id":{"krate":0,"index":7606},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562394,"byte_end":8562401,"line_start":119,"line_end":119,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":6578}},{"kind":"Use","ref_id":{"krate":0,"index":7224},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562460,"byte_end":8562468,"line_start":123,"line_end":123,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":6578}},{"kind":"Use","ref_id":{"krate":0,"index":7560},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562470,"byte_end":8562478,"line_start":123,"line_end":123,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":6578}},{"kind":"Use","ref_id":{"krate":2,"index":32404},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562587,"byte_end":8562595,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":6578}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":0,"byte_end":15827,"line_start":1,"line_end":436,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":83},{"krate":0,"index":177},{"krate":0,"index":308},{"krate":0,"index":373},{"krate":0,"index":509},{"krate":0,"index":556},{"krate":0,"index":562},{"krate":0,"index":736},{"krate":0,"index":3836},{"krate":0,"index":3978},{"krate":0,"index":4667},{"krate":0,"index":6384},{"krate":0,"index":6385},{"krate":0,"index":6578},{"krate":0,"index":755}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":56,"byte_end":168,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":169,"byte_end":275,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":276,"byte_end":319,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"! A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":518,"byte_end":590,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":591,"byte_end":594,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":595,"byte_end":675,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"! applications with the Rust programming language. At a high level, it","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":676,"byte_end":748,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"! provides a few major components:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":749,"byte_end":785,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":786,"byte_end":789,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":790,"byte_end":857,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"!   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":858,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"!   intervals][time].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":939,"byte_end":962,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"! * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":963,"byte_end":1050,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"!   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1051,"byte_end":1124,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"! * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1125,"byte_end":1203,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"!   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1204,"byte_end":1284,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"!   IOCP, etc...), and a high performance timer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1285,"byte_end":1335,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1336,"byte_end":1339,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! Guide level documentation is found on the [website].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1340,"byte_end":1396,"line_start":36,"line_end":36,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1397,"byte_end":1400,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! [tasks]: #working-with-tasks","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1401,"byte_end":1433,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"! [sync]: crate::sync","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1434,"byte_end":1457,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"! [time]: crate::time","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1458,"byte_end":1481,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"! [io]: #asynchronous-io","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1482,"byte_end":1508,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"! [net]: crate::net","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1509,"byte_end":1530,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"! [fs]: crate::fs","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1531,"byte_end":1550,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"! [process]: crate::process","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1551,"byte_end":1580,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"! [signal]: crate::signal","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1581,"byte_end":1608,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"! [fs]: crate::fs","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1609,"byte_end":1628,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"! [runtime]: crate::runtime","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1629,"byte_end":1658,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"! [website]: https://tokio.rs/docs/overview/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1659,"byte_end":1705,"line_start":48,"line_end":48,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1706,"byte_end":1709,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! # A Tour of Tokio","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1710,"byte_end":1731,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1732,"byte_end":1735,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1736,"byte_end":1815,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"! essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1816,"byte_end":1889,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"! section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1890,"byte_end":1969,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"! their uses.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1970,"byte_end":1985,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1986,"byte_end":1989,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! The easiest way to get started is to enable all features. Do this by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":1990,"byte_end":2062,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"! enabling the `full` feature flag:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2063,"byte_end":2100,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2101,"byte_end":2104,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2105,"byte_end":2116,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2117,"byte_end":2169,"line_start":61,"line_end":61,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2170,"byte_end":2177,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2178,"byte_end":2181,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! ## Feature flags","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2182,"byte_end":2202,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2203,"byte_end":2206,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2207,"byte_end":2288,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"! is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2289,"byte_end":2367,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"! does not enable any features but allows one to enable a subset for their use","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2368,"byte_end":2448,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"! case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2449,"byte_end":2526,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"! above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2527,"byte_end":2610,"line_start":70,"line_end":70,"column_start":1,"column_end":84}},{"value":"! that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2611,"byte_end":2688,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"! recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2689,"byte_end":2776,"line_start":72,"line_end":72,"column_start":1,"column_end":88}},{"value":"! Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2777,"byte_end":2858,"line_start":73,"line_end":73,"column_start":1,"column_end":82}},{"value":"! need.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2859,"byte_end":2868,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2869,"byte_end":2872,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2873,"byte_end":2938,"line_start":76,"line_end":76,"column_start":1,"column_end":66}},{"value":"! - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":2939,"byte_end":3021,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"! - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3022,"byte_end":3104,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"! - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3105,"byte_end":3154,"line_start":79,"line_end":79,"column_start":1,"column_end":50}},{"value":"! - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3155,"byte_end":3208,"line_start":80,"line_end":80,"column_start":1,"column_end":54}},{"value":"! - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3209,"byte_end":3260,"line_start":81,"line_end":81,"column_start":1,"column_end":52}},{"value":"! - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3261,"byte_end":3321,"line_start":82,"line_end":82,"column_start":1,"column_end":61}},{"value":"! - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3322,"byte_end":3412,"line_start":83,"line_end":83,"column_start":1,"column_end":91}},{"value":"! - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3413,"byte_end":3462,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"! - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3463,"byte_end":3512,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"! - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3513,"byte_end":3563,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"! - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3564,"byte_end":3641,"line_start":87,"line_end":87,"column_start":1,"column_end":78}},{"value":"! the built in timer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3642,"byte_end":3665,"line_start":88,"line_end":88,"column_start":1,"column_end":24}},{"value":"! - `process`: Enables `tokio::process` types.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3666,"byte_end":3714,"line_start":89,"line_end":89,"column_start":1,"column_end":49}},{"value":"! - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3715,"byte_end":3784,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"! - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3785,"byte_end":3831,"line_start":91,"line_end":91,"column_start":1,"column_end":47}},{"value":"! - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3832,"byte_end":3913,"line_start":92,"line_end":92,"column_start":1,"column_end":82}},{"value":"! - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3914,"byte_end":3964,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"! - `fs`: Enables `tokio::fs` types.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":3965,"byte_end":4003,"line_start":94,"line_end":94,"column_start":1,"column_end":39}},{"value":"! - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4004,"byte_end":4059,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"! - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4060,"byte_end":4138,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"! - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4139,"byte_end":4203,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4204,"byte_end":4207,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4208,"byte_end":4290,"line_start":99,"line_end":99,"column_start":1,"column_end":83}},{"value":"! always available._","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4291,"byte_end":4313,"line_start":100,"line_end":100,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4314,"byte_end":4317,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! ### Internal features","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4318,"byte_end":4343,"line_start":102,"line_end":102,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4344,"byte_end":4347,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"! These features do not expose any new API, but influence internal","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4348,"byte_end":4416,"line_start":104,"line_end":104,"column_start":1,"column_end":69}},{"value":"! implementation aspects of Tokio, and can pull in additional","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4417,"byte_end":4480,"line_start":105,"line_end":105,"column_start":1,"column_end":64}},{"value":"! dependencies. They are not included in `full`:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4481,"byte_end":4531,"line_start":106,"line_end":106,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4532,"byte_end":4535,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4536,"byte_end":4615,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"! synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4616,"byte_end":4693,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"! _parking_lot_ release in use.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4694,"byte_end":4727,"line_start":110,"line_end":110,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4728,"byte_end":4731,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4732,"byte_end":4829,"line_start":112,"line_end":112,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4830,"byte_end":4833,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! ### Authoring applications","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4834,"byte_end":4864,"line_start":114,"line_end":114,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4865,"byte_end":4868,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4869,"byte_end":4950,"line_start":116,"line_end":116,"column_start":1,"column_end":82}},{"value":"! worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":4951,"byte_end":5036,"line_start":117,"line_end":117,"column_start":1,"column_end":86}},{"value":"! going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5037,"byte_end":5121,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"! building your application.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5122,"byte_end":5152,"line_start":119,"line_end":119,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5153,"byte_end":5156,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! #### Example","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5157,"byte_end":5173,"line_start":121,"line_end":121,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5174,"byte_end":5177,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! This example shows the quickest way to get started with Tokio.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5178,"byte_end":5244,"line_start":123,"line_end":123,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5245,"byte_end":5248,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5249,"byte_end":5260,"line_start":125,"line_end":125,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5261,"byte_end":5313,"line_start":126,"line_end":126,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5314,"byte_end":5321,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5322,"byte_end":5325,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! ### Authoring libraries","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5326,"byte_end":5353,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5354,"byte_end":5357,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5358,"byte_end":5437,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"! that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5438,"byte_end":5520,"line_start":132,"line_end":132,"column_start":1,"column_end":83}},{"value":"! the features you need. This allows users to pick up your crate without having","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5521,"byte_end":5602,"line_start":133,"line_end":133,"column_start":1,"column_end":82}},{"value":"! to enable unnecessary features.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5603,"byte_end":5638,"line_start":134,"line_end":134,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5639,"byte_end":5642,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! #### Example","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5643,"byte_end":5659,"line_start":136,"line_end":136,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5660,"byte_end":5663,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! This example shows how you may want to import features for a library that just","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5664,"byte_end":5746,"line_start":138,"line_end":138,"column_start":1,"column_end":83}},{"value":"! needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5747,"byte_end":5797,"line_start":139,"line_end":139,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5798,"byte_end":5801,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5802,"byte_end":5813,"line_start":141,"line_end":141,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5814,"byte_end":5876,"line_start":142,"line_end":142,"column_start":1,"column_end":63}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5877,"byte_end":5884,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5885,"byte_end":5888,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! ## Working With Tasks","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5889,"byte_end":5914,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5915,"byte_end":5918,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5919,"byte_end":5995,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"! units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":5996,"byte_end":6079,"line_start":148,"line_end":148,"column_start":1,"column_end":84}},{"value":"! important tools for working with tasks:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6080,"byte_end":6123,"line_start":149,"line_end":149,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6124,"byte_end":6127,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6128,"byte_end":6207,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"!   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6208,"byte_end":6291,"line_start":152,"line_end":152,"column_start":1,"column_end":84}},{"value":"! * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6292,"byte_end":6370,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"!   task context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6371,"byte_end":6390,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6391,"byte_end":6394,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"! The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6395,"byte_end":6473,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"! is enabled.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6474,"byte_end":6489,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6490,"byte_end":6493,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! [tasks]: task/index.html#what-are-tasks","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6494,"byte_end":6537,"line_start":159,"line_end":159,"column_start":1,"column_end":44}},{"value":"! [`tokio::task`]: crate::task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6538,"byte_end":6570,"line_start":160,"line_end":160,"column_start":1,"column_end":33}},{"value":"! [`spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6571,"byte_end":6606,"line_start":161,"line_end":161,"column_start":1,"column_end":36}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6607,"byte_end":6650,"line_start":162,"line_end":162,"column_start":1,"column_end":44}},{"value":"! [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6651,"byte_end":6704,"line_start":163,"line_end":163,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6705,"byte_end":6708,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6709,"byte_end":6787,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"! needing to communicate or share data. These include:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6788,"byte_end":6844,"line_start":166,"line_end":166,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6845,"byte_end":6848,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"! * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6849,"byte_end":6922,"line_start":168,"line_end":168,"column_start":1,"column_end":74}},{"value":"!   between tasks,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6923,"byte_end":6943,"line_start":169,"line_end":169,"column_start":1,"column_end":21}},{"value":"! * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":6944,"byte_end":7019,"line_start":170,"line_end":170,"column_start":1,"column_end":76}},{"value":"!   value,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7020,"byte_end":7032,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"! * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7033,"byte_end":7113,"line_start":172,"line_end":172,"column_start":1,"column_end":81}},{"value":"!   beginning a computation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7114,"byte_end":7144,"line_start":173,"line_end":173,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7145,"byte_end":7148,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7149,"byte_end":7225,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"! enabled.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7226,"byte_end":7238,"line_start":176,"line_end":176,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7239,"byte_end":7242,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! [`tokio::sync`]: crate::sync","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7243,"byte_end":7275,"line_start":178,"line_end":178,"column_start":1,"column_end":33}},{"value":"! [`Mutex`]: crate::sync::Mutex","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7276,"byte_end":7309,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"! [`Barrier`]: crate::sync::Barrier","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7310,"byte_end":7347,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"! [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7348,"byte_end":7385,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"! [`mpsc`]: crate::sync::mpsc","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7386,"byte_end":7417,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"! [`watch`]: crate::sync::watch","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7418,"byte_end":7451,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7452,"byte_end":7455,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"! The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7456,"byte_end":7527,"line_start":185,"line_end":185,"column_start":1,"column_end":72}},{"value":"! scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7528,"byte_end":7608,"line_start":186,"line_end":186,"column_start":1,"column_end":81}},{"value":"! tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7609,"byte_end":7697,"line_start":187,"line_end":187,"column_start":1,"column_end":89}},{"value":"! interval][interval].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7698,"byte_end":7722,"line_start":188,"line_end":188,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7723,"byte_end":7726,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"! In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7727,"byte_end":7802,"line_start":190,"line_end":190,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7803,"byte_end":7806,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"! [`tokio::time`]: crate::time","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7807,"byte_end":7839,"line_start":192,"line_end":192,"column_start":1,"column_end":33}},{"value":"! [delay]: crate::time::delay_for()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7840,"byte_end":7877,"line_start":193,"line_end":193,"column_start":1,"column_end":38}},{"value":"! [interval]: crate::time::interval()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7878,"byte_end":7917,"line_start":194,"line_end":194,"column_start":1,"column_end":40}},{"value":"! [timeout]: crate::time::timeout()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7918,"byte_end":7955,"line_start":195,"line_end":195,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7956,"byte_end":7959,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":7960,"byte_end":8038,"line_start":197,"line_end":197,"column_start":1,"column_end":79}},{"value":"! applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8039,"byte_end":8123,"line_start":198,"line_end":198,"column_start":1,"column_end":85}},{"value":"! Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8124,"byte_end":8196,"line_start":199,"line_end":199,"column_start":1,"column_end":73}},{"value":"! required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8197,"byte_end":8274,"line_start":200,"line_end":200,"column_start":1,"column_end":78}},{"value":"! managing runtimes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8275,"byte_end":8297,"line_start":201,"line_end":201,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8298,"byte_end":8301,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"! Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8302,"byte_end":8381,"line_start":203,"line_end":203,"column_start":1,"column_end":80}},{"value":"! enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8382,"byte_end":8460,"line_start":204,"line_end":204,"column_start":1,"column_end":79}},{"value":"! scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8461,"byte_end":8529,"line_start":205,"line_end":205,"column_start":1,"column_end":69}},{"value":"! documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8530,"byte_end":8608,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"! flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8609,"byte_end":8679,"line_start":207,"line_end":207,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8680,"byte_end":8683,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"! [main]: attr.main.html","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8684,"byte_end":8710,"line_start":209,"line_end":209,"column_start":1,"column_end":27}},{"value":"! [`tokio::runtime`]: crate::runtime","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8711,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":39}},{"value":"! [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8750,"byte_end":8790,"line_start":211,"line_end":211,"column_start":1,"column_end":41}},{"value":"! [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8791,"byte_end":8831,"line_start":212,"line_end":212,"column_start":1,"column_end":41}},{"value":"! [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8832,"byte_end":8881,"line_start":213,"line_end":213,"column_start":1,"column_end":50}},{"value":"! [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8882,"byte_end":8938,"line_start":214,"line_end":214,"column_start":1,"column_end":57}},{"value":"! [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8939,"byte_end":8994,"line_start":215,"line_end":215,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8995,"byte_end":8998,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"! ## CPU-bound tasks and blocking code","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":8999,"byte_end":9039,"line_start":217,"line_end":217,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9040,"byte_end":9043,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"! Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9044,"byte_end":9123,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"! swapping the currently running task on each thread. However, this kind of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9124,"byte_end":9201,"line_start":220,"line_end":220,"column_start":1,"column_end":78}},{"value":"! swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9202,"byte_end":9282,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"! without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9283,"byte_end":9357,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"! combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9358,"byte_end":9437,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"! threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9438,"byte_end":9515,"line_start":224,"line_end":224,"column_start":1,"column_end":78}},{"value":"! will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9516,"byte_end":9589,"line_start":225,"line_end":225,"column_start":1,"column_end":74}},{"value":"! spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9590,"byte_end":9670,"line_start":226,"line_end":226,"column_start":1,"column_end":81}},{"value":"! block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9671,"byte_end":9749,"line_start":227,"line_end":227,"column_start":1,"column_end":79}},{"value":"! out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9750,"byte_end":9828,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"! on the number of blocking threads is very large. These limits can be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9829,"byte_end":9901,"line_start":229,"line_end":229,"column_start":1,"column_end":73}},{"value":"! configured on the [`Builder`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9902,"byte_end":9936,"line_start":230,"line_end":230,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9937,"byte_end":9940,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"! To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":9941,"byte_end":10018,"line_start":232,"line_end":232,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10019,"byte_end":10022,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"! [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10023,"byte_end":10063,"line_start":234,"line_end":234,"column_start":1,"column_end":41}},{"value":"! [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10064,"byte_end":10117,"line_start":235,"line_end":235,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10118,"byte_end":10121,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10122,"byte_end":10129,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10130,"byte_end":10148,"line_start":238,"line_end":238,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10149,"byte_end":10170,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"!     // This is running on a core thread.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10171,"byte_end":10215,"line_start":240,"line_end":240,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10216,"byte_end":10219,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"!     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10220,"byte_end":10280,"line_start":242,"line_end":242,"column_start":1,"column_end":61}},{"value":"!         // This is running on a blocking thread.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10281,"byte_end":10333,"line_start":243,"line_end":243,"column_start":1,"column_end":53}},{"value":"!         // Blocking here is ok.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10334,"byte_end":10369,"line_start":244,"line_end":244,"column_start":1,"column_end":36}},{"value":"!     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10370,"byte_end":10381,"line_start":245,"line_end":245,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10382,"byte_end":10385,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"!     // We can wait for the blocking task like this:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10386,"byte_end":10441,"line_start":247,"line_end":247,"column_start":1,"column_end":56}},{"value":"!     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10442,"byte_end":10517,"line_start":248,"line_end":248,"column_start":1,"column_end":76}},{"value":"!     // panic.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10518,"byte_end":10535,"line_start":249,"line_end":249,"column_start":1,"column_end":18}},{"value":"!     blocking_task.await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10536,"byte_end":10573,"line_start":250,"line_end":250,"column_start":1,"column_end":38}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10574,"byte_end":10579,"line_start":251,"line_end":251,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10580,"byte_end":10587,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10588,"byte_end":10591,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"! If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10592,"byte_end":10670,"line_start":254,"line_end":254,"column_start":1,"column_end":79}},{"value":"! to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10671,"byte_end":10747,"line_start":255,"line_end":255,"column_start":1,"column_end":77}},{"value":"! can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10748,"byte_end":10824,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"! rayon task finishes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10825,"byte_end":10849,"line_start":257,"line_end":257,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10850,"byte_end":10853,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"! [rayon]: https://docs.rs/rayon","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10854,"byte_end":10888,"line_start":259,"line_end":259,"column_start":1,"column_end":35}},{"value":"! [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10889,"byte_end":10926,"line_start":260,"line_end":260,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10927,"byte_end":10930,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"! ## Asynchronous IO","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10931,"byte_end":10953,"line_start":262,"line_end":262,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10954,"byte_end":10957,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"! As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":10958,"byte_end":11037,"line_start":264,"line_end":264,"column_start":1,"column_end":80}},{"value":"! to perform input and output asynchronously.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11038,"byte_end":11085,"line_start":265,"line_end":265,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11086,"byte_end":11089,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"! The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11090,"byte_end":11169,"line_start":267,"line_end":267,"column_start":1,"column_end":80}},{"value":"! the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11170,"byte_end":11250,"line_start":268,"line_end":268,"column_start":1,"column_end":81}},{"value":"! when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11251,"byte_end":11331,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"! functions for working with these traits, forming as an asynchronous","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11332,"byte_end":11403,"line_start":270,"line_end":270,"column_start":1,"column_end":72}},{"value":"! counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11404,"byte_end":11484,"line_start":271,"line_end":271,"column_start":1,"column_end":81}},{"value":"! also provides utilities for library authors implementing I/O resources.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11485,"byte_end":11560,"line_start":272,"line_end":272,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11561,"byte_end":11564,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"! Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11565,"byte_end":11645,"line_start":274,"line_end":274,"column_start":1,"column_end":81}},{"value":"! with the operating system asynchronously. These include:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11646,"byte_end":11706,"line_start":275,"line_end":275,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11707,"byte_end":11710,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"! * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11711,"byte_end":11790,"line_start":277,"line_end":277,"column_start":1,"column_end":80}},{"value":"!   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11791,"byte_end":11860,"line_start":278,"line_end":278,"column_start":1,"column_end":70}},{"value":"! * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11861,"byte_end":11938,"line_start":279,"line_end":279,"column_start":1,"column_end":78}},{"value":"!   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11939,"byte_end":11995,"line_start":280,"line_end":280,"column_start":1,"column_end":57}},{"value":"! * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":11996,"byte_end":12076,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"!   (enabled by the \"signal\" feature flag),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12077,"byte_end":12122,"line_start":282,"line_end":282,"column_start":1,"column_end":46}},{"value":"! * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12123,"byte_end":12202,"line_start":283,"line_end":283,"column_start":1,"column_end":80}},{"value":"!   the \"process\" feature flag).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12203,"byte_end":12237,"line_start":284,"line_end":284,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12238,"byte_end":12241,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"! [`tokio::io`]: crate::io","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12242,"byte_end":12270,"line_start":286,"line_end":286,"column_start":1,"column_end":29}},{"value":"! [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12271,"byte_end":12310,"line_start":287,"line_end":287,"column_start":1,"column_end":40}},{"value":"! [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12311,"byte_end":12352,"line_start":288,"line_end":288,"column_start":1,"column_end":42}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12353,"byte_end":12398,"line_start":289,"line_end":289,"column_start":1,"column_end":46}},{"value":"! [`std::io`]: std::io","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12399,"byte_end":12423,"line_start":290,"line_end":290,"column_start":1,"column_end":25}},{"value":"! [`tokio::net`]: crate::net","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12424,"byte_end":12454,"line_start":291,"line_end":291,"column_start":1,"column_end":31}},{"value":"! [TCP]: crate::net::tcp","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12455,"byte_end":12481,"line_start":292,"line_end":292,"column_start":1,"column_end":27}},{"value":"! [UDP]: crate::net::udp","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12482,"byte_end":12508,"line_start":293,"line_end":293,"column_start":1,"column_end":27}},{"value":"! [UDS]: crate::net::unix","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12509,"byte_end":12536,"line_start":294,"line_end":294,"column_start":1,"column_end":28}},{"value":"! [`tokio::fs`]: crate::fs","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12537,"byte_end":12565,"line_start":295,"line_end":295,"column_start":1,"column_end":29}},{"value":"! [`std::fs`]: std::fs","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12566,"byte_end":12590,"line_start":296,"line_end":296,"column_start":1,"column_end":25}},{"value":"! [`tokio::signal`]: crate::signal","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12591,"byte_end":12627,"line_start":297,"line_end":297,"column_start":1,"column_end":37}},{"value":"! [`tokio::process`]: crate::process","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12628,"byte_end":12666,"line_start":298,"line_end":298,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12667,"byte_end":12670,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12671,"byte_end":12685,"line_start":300,"line_end":300,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12686,"byte_end":12689,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"! A simple TCP echo server:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12690,"byte_end":12719,"line_start":302,"line_end":302,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12720,"byte_end":12723,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12724,"byte_end":12737,"line_start":304,"line_end":304,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12738,"byte_end":12770,"line_start":305,"line_end":305,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12771,"byte_end":12797,"line_start":306,"line_end":306,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12798,"byte_end":12801,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12802,"byte_end":12820,"line_start":308,"line_end":308,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12821,"byte_end":12884,"line_start":309,"line_end":309,"column_start":1,"column_end":64}},{"value":"!     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12885,"byte_end":12955,"line_start":310,"line_end":310,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12956,"byte_end":12959,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12960,"byte_end":12974,"line_start":312,"line_end":312,"column_start":1,"column_end":15}},{"value":"!         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":12975,"byte_end":13034,"line_start":313,"line_end":313,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13035,"byte_end":13038,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13039,"byte_end":13076,"line_start":315,"line_end":315,"column_start":1,"column_end":38}},{"value":"!             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13077,"byte_end":13117,"line_start":316,"line_end":316,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13118,"byte_end":13121,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"!             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13122,"byte_end":13202,"line_start":318,"line_end":318,"column_start":1,"column_end":81}},{"value":"!             loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13203,"byte_end":13225,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"!                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13226,"byte_end":13289,"line_start":320,"line_end":320,"column_start":1,"column_end":64}},{"value":"!                     // socket closed","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13290,"byte_end":13330,"line_start":321,"line_end":321,"column_start":1,"column_end":41}},{"value":"!                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13331,"byte_end":13381,"line_start":322,"line_end":322,"column_start":1,"column_end":51}},{"value":"!                     Ok(n) => n,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13382,"byte_end":13417,"line_start":323,"line_end":323,"column_start":1,"column_end":36}},{"value":"!                     Err(e) => {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13418,"byte_end":13453,"line_start":324,"line_end":324,"column_start":1,"column_end":36}},{"value":"!                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13454,"byte_end":13537,"line_start":325,"line_end":325,"column_start":1,"column_end":84}},{"value":"!                         return;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13538,"byte_end":13573,"line_start":326,"line_end":326,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13574,"byte_end":13599,"line_start":327,"line_end":327,"column_start":1,"column_end":26}},{"value":"!                 };","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13600,"byte_end":13622,"line_start":328,"line_end":328,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13623,"byte_end":13626,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"!                 // Write the data back","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13627,"byte_end":13669,"line_start":330,"line_end":330,"column_start":1,"column_end":43}},{"value":"!                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13670,"byte_end":13742,"line_start":331,"line_end":331,"column_start":1,"column_end":73}},{"value":"!                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13743,"byte_end":13821,"line_start":332,"line_end":332,"column_start":1,"column_end":79}},{"value":"!                     return;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13822,"byte_end":13853,"line_start":333,"line_end":333,"column_start":1,"column_end":32}},{"value":"!                 }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13854,"byte_end":13875,"line_start":334,"line_end":334,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13876,"byte_end":13893,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13894,"byte_end":13909,"line_start":336,"line_end":336,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13910,"byte_end":13919,"line_start":337,"line_end":337,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13920,"byte_end":13925,"line_start":338,"line_end":338,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":13926,"byte_end":13933,"line_start":339,"line_end":339,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14122,"byte_end":14134,"line_start":345,"line_end":345,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\mod.rs","byte_start":15864,"byte_end":15884,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\support.rs","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":176}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\mod.rs","byte_start":31010,"byte_end":31046,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"! Asynchronous values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\mod.rs","byte_start":31048,"byte_end":31072,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31537,"byte_end":31543,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":874},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31502,"byte_end":31532,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31597,"byte_end":31601,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":874},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31554,"byte_end":31592,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31763,"byte_end":31767,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":874},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31620,"byte_end":31686,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31691,"byte_end":31758,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31473,"byte_end":31482,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":882}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31409,"byte_end":31446,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31930,"byte_end":31940,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31885,"byte_end":31922,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32343,"byte_end":32353,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32059,"byte_end":32144,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32149,"byte_end":32220,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32225,"byte_end":32298,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32303,"byte_end":32331,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32731,"byte_end":32742,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32610,"byte_end":32677,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32682,"byte_end":32705,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32710,"byte_end":32719,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":33954,"byte_end":33960,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":115}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":33902,"byte_end":33942,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":34090,"byte_end":34097,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":34011,"byte_end":34082,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34862,"byte_end":34867,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34633,"byte_end":34674,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34675,"byte_end":34678,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34679,"byte_end":34756,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34825,"byte_end":34850,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":307},{"krate":0,"index":969},{"krate":0,"index":1064},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1151},{"krate":0,"index":1187},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"! Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37622,"byte_end":37699,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37700,"byte_end":37703,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37704,"byte_end":37775,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"! defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37776,"byte_end":37856,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37857,"byte_end":37931,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37932,"byte_end":37935,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37936,"byte_end":37966,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37967,"byte_end":37970,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":37971,"byte_end":38051,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"! [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38052,"byte_end":38129,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"! input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38130,"byte_end":38207,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"! _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38208,"byte_end":38288,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"! type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38289,"byte_end":38367,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38368,"byte_end":38433,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38434,"byte_end":38437,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38438,"byte_end":38510,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"! core methods needed to provide asynchronous reading and writing","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38511,"byte_end":38578,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"! functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38579,"byte_end":38658,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"! and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38659,"byte_end":38733,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"! implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38734,"byte_end":38808,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"! respectively.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38809,"byte_end":38826,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38827,"byte_end":38830,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38831,"byte_end":38895,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"! `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38896,"byte_end":38971,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"! extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":38972,"byte_end":39047,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"! and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39048,"byte_end":39125,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39126,"byte_end":39129,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39130,"byte_end":39206,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"! can be used in almost exactly the same manner as the standard library's","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39207,"byte_end":39282,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"! `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39283,"byte_end":39363,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"! and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39364,"byte_end":39435,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"! `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39436,"byte_end":39505,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39506,"byte_end":39509,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! For example, the standard library documentation introduces `Read` by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39510,"byte_end":39582,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"! [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39583,"byte_end":39663,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"! can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39664,"byte_end":39717,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39718,"byte_end":39721,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39722,"byte_end":39735,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39736,"byte_end":39776,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"! use tokio::fs::File;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39777,"byte_end":39801,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39802,"byte_end":39805,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39806,"byte_end":39824,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39825,"byte_end":39864,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"!     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39865,"byte_end":39914,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"!     let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39915,"byte_end":39948,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39949,"byte_end":39952,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     // read up to 10 bytes","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39953,"byte_end":39983,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"!     let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":39984,"byte_end":40027,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40028,"byte_end":40031,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"!     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40032,"byte_end":40082,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"!     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40083,"byte_end":40097,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40098,"byte_end":40103,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40104,"byte_end":40111,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40112,"byte_end":40115,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! [`File`]: crate::fs::File","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40116,"byte_end":40145,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"! [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40146,"byte_end":40186,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"! [`std::fs::File`]: std::fs::File","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40187,"byte_end":40223,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"! [std_example]: std::io#read-and-write","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40224,"byte_end":40265,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40266,"byte_end":40269,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ## Buffered Readers and Writers","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40270,"byte_end":40305,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40306,"byte_end":40309,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40310,"byte_end":40391,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"! making near-constant calls to the operating system. To help with this,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40392,"byte_end":40466,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"! `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40467,"byte_end":40545,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"! and therefore, `tokio::io` does as well.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40546,"byte_end":40590,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40591,"byte_end":40594,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40595,"byte_end":40665,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"! [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40666,"byte_end":40744,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"! wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40745,"byte_end":40823,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"! of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40824,"byte_end":40901,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40902,"byte_end":40905,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40906,"byte_end":40981,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"! extra methods to any async reader:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":40982,"byte_end":41020,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41021,"byte_end":41024,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41025,"byte_end":41038,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41039,"byte_end":41093,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"! use tokio::fs::File;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41094,"byte_end":41118,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41119,"byte_end":41122,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41123,"byte_end":41141,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41142,"byte_end":41181,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"!     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41182,"byte_end":41227,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"!     let mut reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41228,"byte_end":41271,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"!     let mut buffer = String::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41272,"byte_end":41311,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41312,"byte_end":41315,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"!     // read a line into buffer","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41316,"byte_end":41350,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"!     reader.read_line(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41351,"byte_end":41396,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41397,"byte_end":41400,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"!     println!(\"{}\", buffer);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41401,"byte_end":41432,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"!     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41433,"byte_end":41447,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41448,"byte_end":41453,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41454,"byte_end":41461,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41462,"byte_end":41465,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41466,"byte_end":41547,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"! to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41548,"byte_end":41626,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"! [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41627,"byte_end":41689,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41690,"byte_end":41693,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41694,"byte_end":41707,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41708,"byte_end":41760,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"! use tokio::fs::File;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41761,"byte_end":41785,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41786,"byte_end":41789,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41790,"byte_end":41808,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41809,"byte_end":41848,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"!     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41849,"byte_end":41896,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"!     {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41897,"byte_end":41906,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"!         let mut writer = BufWriter::new(f);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41907,"byte_end":41954,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41955,"byte_end":41958,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"!         // Write a byte to the buffer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":41959,"byte_end":42001,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"!         writer.write(&[42u8]).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42002,"byte_end":42043,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42044,"byte_end":42047,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"!         // Flush the buffer before it goes out of scope.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42048,"byte_end":42108,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"!         writer.flush().await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42109,"byte_end":42143,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42144,"byte_end":42147,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"!     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42148,"byte_end":42238,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42239,"byte_end":42242,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42243,"byte_end":42257,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42258,"byte_end":42263,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42264,"byte_end":42271,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42272,"byte_end":42275,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42276,"byte_end":42321,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"! [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42322,"byte_end":42364,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42365,"byte_end":42410,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"! [`BufReader`]: crate::io::BufReader","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42411,"byte_end":42450,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"! [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42451,"byte_end":42490,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42491,"byte_end":42494,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42495,"byte_end":42539,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42540,"byte_end":42543,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42544,"byte_end":42626,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"! our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42627,"byte_end":42706,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"! non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42707,"byte_end":42781,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"! other words, these types must never block the thread, and instead the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42782,"byte_end":42855,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"! current task is notified when the I/O resource is ready.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42856,"byte_end":42916,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42917,"byte_end":42920,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! ## Conversion to and from Sink/Stream","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42921,"byte_end":42962,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42963,"byte_end":42966,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! It is often convenient to encapsulate the reading and writing of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":42967,"byte_end":43035,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"! bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43036,"byte_end":43105,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"! type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43106,"byte_end":43172,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"! provides some utility traits in the [tokio-util] crate that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43173,"byte_end":43236,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"! abstract the asynchronous buffering that is required and allows","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43237,"byte_end":43304,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"! you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43305,"byte_end":43374,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"! buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43375,"byte_end":43445,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"! that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43446,"byte_end":43524,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"! your structured data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43525,"byte_end":43550,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43551,"byte_end":43554,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! [tokio-util]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43555,"byte_end":43631,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43632,"byte_end":43635,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"! # Standard input and output","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43636,"byte_end":43667,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43668,"byte_end":43671,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43672,"byte_end":43752,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"! These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43753,"byte_end":43829,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"! implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43830,"byte_end":43877,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43878,"byte_end":43881,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43882,"byte_end":43955,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"! context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":43956,"byte_end":44032,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"! function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44033,"byte_end":44109,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44110,"byte_end":44113,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! [input]: fn@stdin","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44114,"byte_end":44135,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"! [output]: fn@stdout","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44136,"byte_end":44159,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"! [error]: fn@stderr","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44160,"byte_end":44182,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44183,"byte_end":44186,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"! # `std` re-exports","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44187,"byte_end":44209,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44210,"byte_end":44213,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! Additionally, [`Error`], [`ErrorKind`], and [`Result`] are re-exported","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44214,"byte_end":44288,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"! from `std::io` for ease of use.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44289,"byte_end":44324,"line_start":166,"line_end":166,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44325,"byte_end":44328,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44329,"byte_end":44363,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"! [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44364,"byte_end":44400,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"! [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44401,"byte_end":44441,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"! [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44442,"byte_end":44484,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"! [\"codec\"]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44485,"byte_end":44558,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"! [`Encoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Encoder.html","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44559,"byte_end":44642,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"! [`Decoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Decoder.html","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44643,"byte_end":44726,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"! [`Error`]: struct@Error","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44727,"byte_end":44754,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"! [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44755,"byte_end":44788,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"! [`Result`]: type@Result","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44789,"byte_end":44816,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"! [`Read`]: std::io::Read","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44817,"byte_end":44844,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"! [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44845,"byte_end":44915,"line_start":179,"line_end":179,"column_start":1,"column_end":71}},{"value":"! [`Stream`]: crate::stream::Stream","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44916,"byte_end":44953,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"! [`Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\mod.rs","byte_start":44954,"byte_end":44983,"line_start":181,"line_end":181,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47360,"byte_end":47372,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":46683,"byte_end":46714,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":46715,"byte_end":46718,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":46719,"byte_end":46791,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":46792,"byte_end":46870,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":46871,"byte_end":46957,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":46958,"byte_end":47035,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47036,"byte_end":47047,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47048,"byte_end":47051,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47052,"byte_end":47120,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47121,"byte_end":47145,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47146,"byte_end":47149,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47150,"byte_end":47192,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47193,"byte_end":47243,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47244,"byte_end":47297,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47298,"byte_end":47349,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48470,"byte_end":48483,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47390,"byte_end":47475,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47480,"byte_end":47521,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47526,"byte_end":47529,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47534,"byte_end":47581,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47586,"byte_end":47589,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47594,"byte_end":47653,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47658,"byte_end":47716,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47721,"byte_end":47802,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47807,"byte_end":47833,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47838,"byte_end":47841,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47846,"byte_end":47917,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47922,"byte_end":47984,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47989,"byte_end":48060,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48065,"byte_end":48146,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48151,"byte_end":48227,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48232,"byte_end":48283,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48288,"byte_end":48291,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48296,"byte_end":48367,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48372,"byte_end":48375,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48380,"byte_end":48419,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48424,"byte_end":48462,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49386,"byte_end":49393,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48561,"byte_end":48635,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48640,"byte_end":48707,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48712,"byte_end":48715,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48720,"byte_end":48791,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48796,"byte_end":48865,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48870,"byte_end":48944,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":48949,"byte_end":49026,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49031,"byte_end":49101,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49106,"byte_end":49159,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49164,"byte_end":49167,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49172,"byte_end":49244,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49249,"byte_end":49271,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49276,"byte_end":49279,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49284,"byte_end":49323,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49328,"byte_end":49378,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52627,"byte_end":52636,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51046,"byte_end":51076,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51077,"byte_end":51080,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51081,"byte_end":51160,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51161,"byte_end":51235,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51236,"byte_end":51315,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51316,"byte_end":51393,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51394,"byte_end":51405,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51406,"byte_end":51409,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51410,"byte_end":51487,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51488,"byte_end":51506,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51507,"byte_end":51510,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51511,"byte_end":51587,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51588,"byte_end":51664,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51665,"byte_end":51684,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51685,"byte_end":51688,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51689,"byte_end":51754,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51755,"byte_end":51835,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51836,"byte_end":51915,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51916,"byte_end":51989,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":51990,"byte_end":52063,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52064,"byte_end":52085,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52086,"byte_end":52089,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52090,"byte_end":52174,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52175,"byte_end":52199,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52200,"byte_end":52203,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52204,"byte_end":52277,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52278,"byte_end":52357,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52358,"byte_end":52361,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52362,"byte_end":52427,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52428,"byte_end":52449,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52450,"byte_end":52453,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52454,"byte_end":52493,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52494,"byte_end":52530,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52531,"byte_end":52570,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52571,"byte_end":52616,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54280,"byte_end":54308,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"pub unsafe fn prepare_uninitialized_buffer(&Self, &mut [MaybeUninit<u8>])\n-> bool","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52643,"byte_end":52717,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52722,"byte_end":52771,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52776,"byte_end":52779,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52784,"byte_end":52857,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52862,"byte_end":52933,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":52938,"byte_end":53012,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53017,"byte_end":53093,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53098,"byte_end":53136,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53141,"byte_end":53144,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53149,"byte_end":53225,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53230,"byte_end":53304,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53309,"byte_end":53386,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53391,"byte_end":53423,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53428,"byte_end":53431,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53436,"byte_end":53509,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53514,"byte_end":53582,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53587,"byte_end":53643,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53648,"byte_end":53683,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53688,"byte_end":53691,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53696,"byte_end":53772,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53777,"byte_end":53852,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53857,"byte_end":53934,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53939,"byte_end":53957,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53962,"byte_end":53965,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":53970,"byte_end":54021,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54026,"byte_end":54029,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54034,"byte_end":54046,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54051,"byte_end":54054,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54059,"byte_end":54131,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54136,"byte_end":54167,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54172,"byte_end":54175,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54180,"byte_end":54211,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: method@Self::poll_read_buf","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54216,"byte_end":54265,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54821,"byte_end":54830,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54451,"byte_end":54504,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54509,"byte_end":54512,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54517,"byte_end":54575,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54580,"byte_end":54583,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54588,"byte_end":54647,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54652,"byte_end":54710,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54715,"byte_end":54782,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54787,"byte_end":54813,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":55291,"byte_end":55304,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"pub fn poll_read_buf<B: BufMut>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where Self: Sized","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":54955,"byte_end":55031,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":55036,"byte_end":55065,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":55070,"byte_end":55073,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":55078,"byte_end":55153,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":55158,"byte_end":55234,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":55239,"byte_end":55283,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58459,"byte_end":58468,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":57977,"byte_end":58007,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58008,"byte_end":58011,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58012,"byte_end":58086,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58087,"byte_end":58157,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58158,"byte_end":58227,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58228,"byte_end":58231,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58232,"byte_end":58297,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58298,"byte_end":58319,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58320,"byte_end":58323,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58324,"byte_end":58360,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58361,"byte_end":58402,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58403,"byte_end":58448,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58806,"byte_end":58816,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, &mut Context, SeekFrom)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58475,"byte_end":58532,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58537,"byte_end":58540,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58545,"byte_end":58618,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58623,"byte_end":58649,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58654,"byte_end":58657,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58662,"byte_end":58737,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58742,"byte_end":58798,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59399,"byte_end":59412,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58942,"byte_end":58985,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58990,"byte_end":58993,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":58998,"byte_end":59047,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59052,"byte_end":59122,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59127,"byte_end":59188,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59193,"byte_end":59196,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59201,"byte_end":59213,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59218,"byte_end":59221,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59226,"byte_end":59282,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59287,"byte_end":59290,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59295,"byte_end":59307,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59312,"byte_end":59315,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59320,"byte_end":59391,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62915,"byte_end":62925,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61052,"byte_end":61084,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61085,"byte_end":61088,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61089,"byte_end":61171,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61172,"byte_end":61247,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61248,"byte_end":61315,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61316,"byte_end":61319,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61320,"byte_end":61400,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61401,"byte_end":61419,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61420,"byte_end":61423,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61424,"byte_end":61495,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61496,"byte_end":61510,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61511,"byte_end":61514,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61515,"byte_end":61583,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61584,"byte_end":61664,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61665,"byte_end":61744,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61745,"byte_end":61818,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61819,"byte_end":61892,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61893,"byte_end":61914,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61915,"byte_end":61918,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":61919,"byte_end":62003,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62004,"byte_end":62028,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62029,"byte_end":62032,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62033,"byte_end":62115,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62116,"byte_end":62199,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62200,"byte_end":62203,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62204,"byte_end":62288,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62289,"byte_end":62373,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62374,"byte_end":62452,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62453,"byte_end":62532,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62533,"byte_end":62594,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62595,"byte_end":62598,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62599,"byte_end":62665,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62666,"byte_end":62688,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62689,"byte_end":62692,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62693,"byte_end":62731,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62732,"byte_end":62776,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62777,"byte_end":62816,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62817,"byte_end":62856,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62857,"byte_end":62904,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63309,"byte_end":63319,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62932,"byte_end":62986,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62991,"byte_end":62994,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":62999,"byte_end":63060,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63065,"byte_end":63068,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63073,"byte_end":63135,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63140,"byte_end":63198,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63203,"byte_end":63270,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63275,"byte_end":63301,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63860,"byte_end":63870,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63447,"byte_end":63518,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63523,"byte_end":63545,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63550,"byte_end":63553,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63558,"byte_end":63604,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63609,"byte_end":63612,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63617,"byte_end":63681,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63686,"byte_end":63744,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63749,"byte_end":63817,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63822,"byte_end":63852,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67156,"byte_end":67169,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":63952,"byte_end":64026,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64031,"byte_end":64079,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64084,"byte_end":64087,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64092,"byte_end":64163,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64168,"byte_end":64244,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64249,"byte_end":64325,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64330,"byte_end":64405,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64410,"byte_end":64481,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64486,"byte_end":64562,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64567,"byte_end":64595,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64600,"byte_end":64603,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64608,"byte_end":64669,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64674,"byte_end":64745,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64750,"byte_end":64822,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64827,"byte_end":64902,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64907,"byte_end":64980,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":64985,"byte_end":65060,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65065,"byte_end":65137,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65142,"byte_end":65153,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65158,"byte_end":65161,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65166,"byte_end":65240,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65245,"byte_end":65317,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65322,"byte_end":65391,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65396,"byte_end":65464,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65469,"byte_end":65530,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65535,"byte_end":65538,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65543,"byte_end":65561,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65566,"byte_end":65569,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65574,"byte_end":65644,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65649,"byte_end":65652,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65657,"byte_end":65720,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65725,"byte_end":65794,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65799,"byte_end":65874,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65879,"byte_end":65952,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":65957,"byte_end":66008,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66013,"byte_end":66016,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66021,"byte_end":66091,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66096,"byte_end":66171,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66176,"byte_end":66248,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66253,"byte_end":66323,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66328,"byte_end":66403,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66408,"byte_end":66411,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66416,"byte_end":66497,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66502,"byte_end":66577,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66582,"byte_end":66649,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66654,"byte_end":66657,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66662,"byte_end":66674,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66679,"byte_end":66682,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66687,"byte_end":66758,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66763,"byte_end":66829,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66834,"byte_end":66908,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66913,"byte_end":66977,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":66982,"byte_end":67021,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67026,"byte_end":67029,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67034,"byte_end":67046,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67051,"byte_end":67054,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67059,"byte_end":67134,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67139,"byte_end":67148,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67457,"byte_end":67471,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"pub fn poll_write_buf<B: Buf>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<Result<usize, io::Error>> where Self: Sized","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67251,"byte_end":67325,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67330,"byte_end":67333,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67338,"byte_end":67412,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":67417,"byte_end":67449,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7756589,"byte_end":7756600,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1180},{"krate":0,"index":1181}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19269,"byte_end":19298,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7758846,"byte_end":7758849,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"pub fn new(E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7758424,"byte_end":7758492,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7758497,"byte_end":7758500,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7758505,"byte_end":7758517,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7758522,"byte_end":7758525,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7758530,"byte_end":7758590,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7758595,"byte_end":7758598,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7758603,"byte_end":7758673,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7758678,"byte_end":7758751,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7758756,"byte_end":7758834,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7760053,"byte_end":7760067,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<PollEvented<E>>::new_with_ready","value":"pub fn new_with_ready(E, mio::Ready) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`\n state. `new_with_ready` should be used over `new` when you need control over the readiness\n state, such as when a file descriptor only allows reads. This does not add `hup` or `error`\n so if you are interested in those states, you will need to add them to the readiness state\n passed to this function.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7758949,"byte_end":7759043,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ state. `new_with_ready` should be used over `new` when you need control over the readiness","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759048,"byte_end":7759142,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ state, such as when a file descriptor only allows reads. This does not add `hup` or `error`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759147,"byte_end":7759242,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ so if you are interested in those states, you will need to add them to the readiness state","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759247,"byte_end":7759341,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ passed to this function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759346,"byte_end":7759374,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759379,"byte_end":7759382,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759387,"byte_end":7759424,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759429,"byte_end":7759432,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759437,"byte_end":7759448,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759453,"byte_end":7759470,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759475,"byte_end":7759506,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759511,"byte_end":7759556,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759561,"byte_end":7759615,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759620,"byte_end":7759672,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759677,"byte_end":7759687,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759692,"byte_end":7759699,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759704,"byte_end":7759707,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759712,"byte_end":7759724,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759729,"byte_end":7759732,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759737,"byte_end":7759797,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759802,"byte_end":7759805,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759810,"byte_end":7759880,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759885,"byte_end":7759958,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7759963,"byte_end":7760041,"line_start":204,"line_end":204,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7760545,"byte_end":7760552,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"pub fn get_ref(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7760431,"byte_end":7760505,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7760510,"byte_end":7760533,"line_start":218,"line_end":218,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7760728,"byte_end":7760735,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7760613,"byte_end":7760688,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7760693,"byte_end":7760716,"line_start":224,"line_end":224,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761271,"byte_end":7761281,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7760804,"byte_end":7760853,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7760858,"byte_end":7760861,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7760866,"byte_end":7760940,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7760945,"byte_end":7761020,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761025,"byte_end":7761028,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761033,"byte_end":7761108,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761113,"byte_end":7761189,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761194,"byte_end":7761259,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762438,"byte_end":7762453,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context, mio::Ready)\n-> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761429,"byte_end":7761480,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761485,"byte_end":7761488,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761493,"byte_end":7761566,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761571,"byte_end":7761642,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761647,"byte_end":7761722,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761727,"byte_end":7761734,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761739,"byte_end":7761742,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761747,"byte_end":7761823,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761828,"byte_end":7761894,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761899,"byte_end":7761902,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761907,"byte_end":7761980,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7761985,"byte_end":7762029,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762034,"byte_end":7762037,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: method@Self::clear_read_ready","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762042,"byte_end":7762097,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762102,"byte_end":7762105,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762110,"byte_end":7762122,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762127,"byte_end":7762130,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762135,"byte_end":7762163,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762168,"byte_end":7762171,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762176,"byte_end":7762208,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762213,"byte_end":7762257,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762262,"byte_end":7762265,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762270,"byte_end":7762283,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762288,"byte_end":7762291,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762296,"byte_end":7762369,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_write_ready`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762374,"byte_end":7762426,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7763429,"byte_end":7763445,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"pub fn clear_read_ready(&Self, &mut Context, mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762830,"byte_end":7762906,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762911,"byte_end":7762975,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762980,"byte_end":7762983,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7762988,"byte_end":7763050,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7763055,"byte_end":7763126,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7763131,"byte_end":7763134,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7763139,"byte_end":7763214,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7763219,"byte_end":7763251,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7763256,"byte_end":7763259,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7763264,"byte_end":7763276,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7763281,"byte_end":7763284,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7763289,"byte_end":7763317,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7763322,"byte_end":7763325,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7763330,"byte_end":7763368,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7763373,"byte_end":7763417,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764885,"byte_end":7764901,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7763970,"byte_end":7764022,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764027,"byte_end":7764030,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764035,"byte_end":7764104,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764109,"byte_end":7764152,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764157,"byte_end":7764160,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764165,"byte_end":7764233,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764238,"byte_end":7764313,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764318,"byte_end":7764321,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764326,"byte_end":7764400,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764405,"byte_end":7764450,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764455,"byte_end":7764458,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: method@Self::clear_write_ready","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764463,"byte_end":7764520,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764525,"byte_end":7764528,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764533,"byte_end":7764545,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764550,"byte_end":7764553,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764558,"byte_end":7764586,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764591,"byte_end":7764594,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764599,"byte_end":7764656,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764661,"byte_end":7764705,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764710,"byte_end":7764713,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764718,"byte_end":7764731,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764736,"byte_end":7764739,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764744,"byte_end":7764817,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_read_ready`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7764822,"byte_end":7764873,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7765750,"byte_end":7765767,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"pub fn clear_write_ready(&Self, &mut Context) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7765177,"byte_end":7765254,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7765259,"byte_end":7765324,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7765329,"byte_end":7765332,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7765337,"byte_end":7765413,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7765418,"byte_end":7765463,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7765468,"byte_end":7765471,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7765476,"byte_end":7765551,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7765556,"byte_end":7765630,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7765635,"byte_end":7765638,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7765643,"byte_end":7765655,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7765660,"byte_end":7765663,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7765668,"byte_end":7765738,"line_start":361,"line_end":361,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770009,"byte_end":7770021,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19269,"byte_end":19298,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770713,"byte_end":7770716,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"pub fn new<T>(&T) -> io::Result<Registration> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770141,"byte_end":7770197,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770202,"byte_end":7770205,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770210,"byte_end":7770222,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770227,"byte_end":7770230,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770235,"byte_end":7770287,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770292,"byte_end":7770351,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770356,"byte_end":7770359,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770364,"byte_end":7770367,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770372,"byte_end":7770384,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770389,"byte_end":7770392,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770397,"byte_end":7770457,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770462,"byte_end":7770465,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770470,"byte_end":7770540,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770545,"byte_end":7770618,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770623,"byte_end":7770701,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7772119,"byte_end":7772133,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<Registration>::new_with_ready","value":"pub fn new_with_ready<T>(&T, mio::Ready) -> io::Result<Registration> where\nT: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.\n `new_with_ready` should be used over `new` when you need control over the readiness state,\n such as when a file descriptor only allows reads. This does not add `hup` or `error` so if\n you are interested in those states, you will need to add them to the readiness state passed\n to this function.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770863,"byte_end":7770954,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ `new_with_ready` should be used over `new` when you need control over the readiness state,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770959,"byte_end":7771053,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ such as when a file descriptor only allows reads. This does not add `hup` or `error` so if","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771058,"byte_end":7771152,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ you are interested in those states, you will need to add them to the readiness state passed","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771157,"byte_end":7771252,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ to this function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771257,"byte_end":7771278,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771283,"byte_end":7771286,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771291,"byte_end":7771328,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771333,"byte_end":7771336,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771341,"byte_end":7771352,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771357,"byte_end":7771374,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771379,"byte_end":7771410,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771415,"byte_end":7771460,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771465,"byte_end":7771519,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771524,"byte_end":7771576,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771581,"byte_end":7771591,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771596,"byte_end":7771603,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771608,"byte_end":7771611,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771616,"byte_end":7771628,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771633,"byte_end":7771636,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771641,"byte_end":7771693,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771698,"byte_end":7771757,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771762,"byte_end":7771765,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771770,"byte_end":7771773,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771778,"byte_end":7771790,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771795,"byte_end":7771798,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771803,"byte_end":7771863,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771868,"byte_end":7771871,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771876,"byte_end":7771946,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7771951,"byte_end":7772024,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7772029,"byte_end":7772107,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7773368,"byte_end":7773378,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"pub fn deregister<T>(&mut Self, &T) -> io::Result<()> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7772592,"byte_end":7772664,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7772669,"byte_end":7772672,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7772677,"byte_end":7772753,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7772758,"byte_end":7772786,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7772791,"byte_end":7772794,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7772799,"byte_end":7772874,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7772879,"byte_end":7772955,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7772960,"byte_end":7773025,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7773030,"byte_end":7773033,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7773038,"byte_end":7773050,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7773055,"byte_end":7773058,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7773063,"byte_end":7773135,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7773140,"byte_end":7773216,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7773221,"byte_end":7773294,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7773299,"byte_end":7773302,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7773307,"byte_end":7773356,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774929,"byte_end":7774944,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7773681,"byte_end":7773746,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7773751,"byte_end":7773754,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7773759,"byte_end":7773833,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7773838,"byte_end":7773911,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7773916,"byte_end":7773966,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7773971,"byte_end":7773974,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7773979,"byte_end":7774052,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774057,"byte_end":7774132,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774137,"byte_end":7774173,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774178,"byte_end":7774181,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774186,"byte_end":7774204,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774209,"byte_end":7774212,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774217,"byte_end":7774262,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774267,"byte_end":7774270,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774275,"byte_end":7774350,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774355,"byte_end":7774416,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774421,"byte_end":7774424,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774429,"byte_end":7774504,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774509,"byte_end":7774556,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774561,"byte_end":7774564,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774569,"byte_end":7774645,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774650,"byte_end":7774723,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774728,"byte_end":7774731,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774736,"byte_end":7774809,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774814,"byte_end":7774817,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774822,"byte_end":7774834,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774839,"byte_end":7774842,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7774847,"byte_end":7774917,"line_start":173,"line_end":173,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7775785,"byte_end":7775800,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"pub fn take_read_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7775424,"byte_end":7775469,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7775474,"byte_end":7775477,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7775482,"byte_end":7775554,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7775559,"byte_end":7775634,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7775639,"byte_end":7775707,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7775712,"byte_end":7775715,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7775720,"byte_end":7775773,"line_start":197,"line_end":197,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7777154,"byte_end":7777170,"line_start":230,"line_end":230,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7775902,"byte_end":7775968,"line_start":202,"line_end":202,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7775973,"byte_end":7775976,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7775981,"byte_end":7776056,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776061,"byte_end":7776135,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776140,"byte_end":7776190,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776195,"byte_end":7776198,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776203,"byte_end":7776276,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776281,"byte_end":7776356,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776361,"byte_end":7776397,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776402,"byte_end":7776405,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776410,"byte_end":7776428,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776433,"byte_end":7776436,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776441,"byte_end":7776486,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776491,"byte_end":7776494,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776499,"byte_end":7776574,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776579,"byte_end":7776640,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776645,"byte_end":7776648,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776653,"byte_end":7776728,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776733,"byte_end":7776781,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776786,"byte_end":7776789,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776794,"byte_end":7776870,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776875,"byte_end":7776948,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776953,"byte_end":7776956,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7776961,"byte_end":7777034,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7777039,"byte_end":7777042,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7777047,"byte_end":7777059,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7777064,"byte_end":7777067,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7777072,"byte_end":7777142,"line_start":229,"line_end":229,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7778017,"byte_end":7778033,"line_start":254,"line_end":254,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"pub fn take_write_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7777651,"byte_end":7777698,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7777703,"byte_end":7777706,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7777711,"byte_end":7777784,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7777789,"byte_end":7777864,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7777869,"byte_end":7777937,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7777942,"byte_end":7777945,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7777950,"byte_end":7778005,"line_start":253,"line_end":253,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7781896,"byte_end":7781904,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1303}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1304},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7782033,"byte_end":7782042,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1306}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7782356,"byte_end":7782361,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7782987,"byte_end":7782997,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7782884,"byte_end":7782959,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7782964,"byte_end":7782975,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7783404,"byte_end":7783411,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7783080,"byte_end":7783129,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7783134,"byte_end":7783137,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7783142,"byte_end":7783154,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7783159,"byte_end":7783162,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7783167,"byte_end":7783241,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7783246,"byte_end":7783296,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7783301,"byte_end":7783365,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7783370,"byte_end":7783392,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7783912,"byte_end":7783922,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7783810,"byte_end":7783884,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7783889,"byte_end":7783900,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\seek.rs","byte_start":7787159,"byte_end":7787163,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1313}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\seek.rs","byte_start":7786996,"byte_end":7787062,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\seek.rs","byte_start":7787080,"byte_end":7787147,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":1999},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_buf_read_ext.rs","byte_start":7790322,"byte_end":7790337,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2000},{"krate":0,"index":2002},{"krate":0,"index":2004},{"krate":0,"index":2005}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_buf_read_ext.rs","byte_start":7793037,"byte_end":7793047,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2002},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_buf_read_ext.rs","byte_start":7795938,"byte_end":7795947,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_buf_read_ext.rs","byte_start":7797347,"byte_end":7797352,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_buf_read_ext.rs","byte_start":7799202,"byte_end":7799207,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2007},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7801386,"byte_end":7801398,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2008},{"krate":0,"index":2010},{"krate":0,"index":2012},{"krate":0,"index":2015},{"krate":0,"index":2022},{"krate":0,"index":2024},{"krate":0,"index":2026},{"krate":0,"index":2028},{"krate":0,"index":2030},{"krate":0,"index":2032},{"krate":0,"index":2034},{"krate":0,"index":2036},{"krate":0,"index":2038},{"krate":0,"index":2040},{"krate":0,"index":2042},{"krate":0,"index":2044},{"krate":0,"index":2046},{"krate":0,"index":2048},{"krate":0,"index":2050},{"krate":0,"index":2052},{"krate":0,"index":2054},{"krate":0,"index":2056},{"krate":0,"index":2017},{"krate":0,"index":2019},{"krate":0,"index":2021}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7802518,"byte_end":7802523,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7805352,"byte_end":7805356,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7807658,"byte_end":7807666,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7809563,"byte_end":7809573,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7811010,"byte_end":7811017,"line_start":324,"line_end":324,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7812306,"byte_end":7812313,"line_start":362,"line_end":362,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7813644,"byte_end":7813652,"line_start":400,"line_end":400,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7814992,"byte_end":7815000,"line_start":438,"line_end":438,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7816281,"byte_end":7816289,"line_start":475,"line_end":475,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7817584,"byte_end":7817592,"line_start":513,"line_end":513,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2034},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7818955,"byte_end":7818963,"line_start":552,"line_end":552,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2036},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7820256,"byte_end":7820264,"line_start":589,"line_end":589,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7821724,"byte_end":7821733,"line_start":629,"line_end":629,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7823127,"byte_end":7823136,"line_start":669,"line_end":669,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7824483,"byte_end":7824494,"line_start":707,"line_end":707,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7825855,"byte_end":7825866,"line_start":745,"line_end":745,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7827167,"byte_end":7827178,"line_start":782,"line_end":782,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7828490,"byte_end":7828501,"line_start":820,"line_end":820,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7829882,"byte_end":7829893,"line_start":859,"line_end":859,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7831187,"byte_end":7831198,"line_start":896,"line_end":896,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7832676,"byte_end":7832688,"line_start":936,"line_end":936,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7834082,"byte_end":7834094,"line_start":976,"line_end":976,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2017},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7835707,"byte_end":7835718,"line_start":1022,"line_end":1022,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2019},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7837286,"byte_end":7837300,"line_start":1069,"line_end":1069,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2021},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7838478,"byte_end":7838482,"line_start":1103,"line_end":1103,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1388},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839524,"byte_end":7839536,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":1389}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to [`AsyncSeek`] types.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7838749,"byte_end":7838822,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7838823,"byte_end":7838826,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As a convenience, this trait may be imported using the [`prelude`]:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7838827,"byte_end":7838898,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7838899,"byte_end":7838902,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7838903,"byte_end":7838917,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7838918,"byte_end":7838921,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7838922,"byte_end":7838929,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7838930,"byte_end":7838966,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7838967,"byte_end":7838993,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7838994,"byte_end":7838997,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7838998,"byte_end":7839016,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839017,"byte_end":7839056,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839057,"byte_end":7839106,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839107,"byte_end":7839110,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839111,"byte_end":7839164,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839165,"byte_end":7839212,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839213,"byte_end":7839216,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839217,"byte_end":7839246,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839247,"byte_end":7839292,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839293,"byte_end":7839318,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839319,"byte_end":7839351,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839352,"byte_end":7839355,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839356,"byte_end":7839370,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839371,"byte_end":7839376,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839377,"byte_end":7839384,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839385,"byte_end":7839388,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module][crate::io] documentation for more details.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839389,"byte_end":7839448,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839449,"byte_end":7839452,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: AsyncSeek","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839453,"byte_end":7839481,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`prelude`]: crate::prelude","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839482,"byte_end":7839513,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7840253,"byte_end":7840257,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":1388},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839554,"byte_end":7839623,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839628,"byte_end":7839681,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839686,"byte_end":7839689,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839694,"byte_end":7839771,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839776,"byte_end":7839798,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839803,"byte_end":7839806,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839811,"byte_end":7839825,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839830,"byte_end":7839833,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839838,"byte_end":7839851,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839856,"byte_end":7839880,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839885,"byte_end":7839911,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839916,"byte_end":7839919,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839924,"byte_end":7839950,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839955,"byte_end":7839958,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839963,"byte_end":7840008,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7840013,"byte_end":7840061,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7840066,"byte_end":7840107,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7840112,"byte_end":7840115,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7840120,"byte_end":7840157,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7840162,"byte_end":7840204,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7840209,"byte_end":7840221,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7840226,"byte_end":7840233,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7840238,"byte_end":7840245,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7842460,"byte_end":7842473,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2060},{"krate":0,"index":2062},{"krate":0,"index":2065},{"krate":0,"index":2069},{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":2075},{"krate":0,"index":2077},{"krate":0,"index":2079},{"krate":0,"index":2081},{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2087},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2093},{"krate":0,"index":2095},{"krate":0,"index":2097},{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2103},{"krate":0,"index":2067},{"krate":0,"index":2068}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7844315,"byte_end":7844320,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7847122,"byte_end":7847131,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7848473,"byte_end":7848482,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7849882,"byte_end":7849890,"line_start":271,"line_end":271,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7851151,"byte_end":7851159,"line_start":308,"line_end":308,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7852474,"byte_end":7852483,"line_start":346,"line_end":346,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7853796,"byte_end":7853805,"line_start":384,"line_end":384,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7855145,"byte_end":7855154,"line_start":422,"line_end":422,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7856489,"byte_end":7856498,"line_start":460,"line_end":460,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7857875,"byte_end":7857884,"line_start":498,"line_end":498,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7859271,"byte_end":7859280,"line_start":536,"line_end":536,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7860735,"byte_end":7860745,"line_start":576,"line_end":576,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2087},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7862135,"byte_end":7862145,"line_start":616,"line_end":616,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7863477,"byte_end":7863489,"line_start":655,"line_end":655,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7864816,"byte_end":7864828,"line_start":693,"line_end":693,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7866182,"byte_end":7866194,"line_start":731,"line_end":731,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7867543,"byte_end":7867555,"line_start":769,"line_end":769,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7868946,"byte_end":7868958,"line_start":807,"line_end":807,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7870359,"byte_end":7870371,"line_start":845,"line_end":845,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7871838,"byte_end":7871851,"line_start":885,"line_end":885,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7873253,"byte_end":7873266,"line_start":925,"line_end":925,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7874286,"byte_end":7874291,"line_start":958,"line_end":958,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7875511,"byte_end":7875519,"line_start":995,"line_end":995,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10215},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7876928,"byte_end":7876937,"line_start":29,"line_end":29,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":10217},{"krate":0,"index":10218},{"krate":0,"index":10219},{"krate":0,"index":10220}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7877273,"byte_end":7877276,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7877131,"byte_end":7877223,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7877228,"byte_end":7877261,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7877438,"byte_end":7877451,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7877361,"byte_end":7877426,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878127,"byte_end":7878134,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7877990,"byte_end":7878036,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878041,"byte_end":7878044,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878049,"byte_end":7878115,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878326,"byte_end":7878333,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878181,"byte_end":7878235,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878240,"byte_end":7878243,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878248,"byte_end":7878314,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878544,"byte_end":7878555,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878392,"byte_end":7878453,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878458,"byte_end":7878461,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878466,"byte_end":7878532,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878786,"byte_end":7878796,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878635,"byte_end":7878698,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878703,"byte_end":7878706,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878711,"byte_end":7878774,"line_start":88,"line_end":88,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7879000,"byte_end":7879006,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878840,"byte_end":7878896,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878901,"byte_end":7878904,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7878909,"byte_end":7878988,"line_start":95,"line_end":95,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":10201},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7883252,"byte_end":7883261,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":10203}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7883540,"byte_end":7883543,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7883386,"byte_end":7883443,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7883448,"byte_end":7883451,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7883456,"byte_end":7883528,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7883875,"byte_end":7883888,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7883675,"byte_end":7883760,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7883765,"byte_end":7883778,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7883783,"byte_end":7883786,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7883791,"byte_end":7883863,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7884345,"byte_end":7884352,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7884200,"byte_end":7884250,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7884255,"byte_end":7884258,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7884263,"byte_end":7884333,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7884572,"byte_end":7884579,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7884419,"byte_end":7884477,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7884482,"byte_end":7884485,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7884490,"byte_end":7884560,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7884814,"byte_end":7884825,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7884654,"byte_end":7884719,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7884724,"byte_end":7884727,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7884732,"byte_end":7884802,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7885089,"byte_end":7885099,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7884934,"byte_end":7885001,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7885006,"byte_end":7885009,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7885014,"byte_end":7885077,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10138},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7888918,"byte_end":7888927,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":10140},{"krate":0,"index":10141},{"krate":0,"index":10142}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7889235,"byte_end":7889238,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7889093,"byte_end":7889185,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7889190,"byte_end":7889223,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7889400,"byte_end":7889413,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7889323,"byte_end":7889388,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7890495,"byte_end":7890502,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7890437,"byte_end":7890483,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7890693,"byte_end":7890700,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7890549,"byte_end":7890603,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7890608,"byte_end":7890611,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7890616,"byte_end":7890681,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7890910,"byte_end":7890921,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7890759,"byte_end":7890820,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7890825,"byte_end":7890828,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7890833,"byte_end":7890898,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7891152,"byte_end":7891162,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7891001,"byte_end":7891064,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7891069,"byte_end":7891072,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7891077,"byte_end":7891140,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7891274,"byte_end":7891280,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7891206,"byte_end":7891262,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10089},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7893913,"byte_end":7893918,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10092},{"krate":0,"index":10093},{"krate":0,"index":10094}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":7558384,"byte_end":7558393,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7894359,"byte_end":7894366,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7894285,"byte_end":7894347,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7894698,"byte_end":7894705,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7894435,"byte_end":7894505,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7894510,"byte_end":7894513,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7894518,"byte_end":7894591,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7894596,"byte_end":7894669,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7894674,"byte_end":7894686,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7895064,"byte_end":7895075,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7894794,"byte_end":7894871,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7894876,"byte_end":7894879,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7894884,"byte_end":7894957,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7894962,"byte_end":7895035,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7895040,"byte_end":7895052,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7895272,"byte_end":7895282,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7895204,"byte_end":7895260,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2109},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\copy.rs","byte_start":7897858,"byte_end":7897862,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\copy.rs","byte_start":7897775,"byte_end":7897842,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\copy.rs","byte_start":7899127,"byte_end":7899131,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"pub fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W) -> Copy where\nR: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2125},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\empty.rs","byte_start":7901888,"byte_end":7901893,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2126}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2127},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\empty.rs","byte_start":7902572,"byte_end":7902577,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\flush.rs","byte_start":7903794,"byte_end":7903799,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":2131}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10066},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7904915,"byte_end":7904920,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":10068},{"krate":0,"index":10069},{"krate":0,"index":10070},{"krate":0,"index":10071}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":7558384,"byte_end":7558393,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905767,"byte_end":7905776,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905277,"byte_end":7905317,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905322,"byte_end":7905325,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905330,"byte_end":7905344,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905349,"byte_end":7905352,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905357,"byte_end":7905364,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905369,"byte_end":7905403,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905408,"byte_end":7905443,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905448,"byte_end":7905451,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905456,"byte_end":7905539,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905544,"byte_end":7905584,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905589,"byte_end":7905592,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905597,"byte_end":7905650,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905655,"byte_end":7905698,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905703,"byte_end":7905708,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905713,"byte_end":7905725,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905730,"byte_end":7905737,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905742,"byte_end":7905749,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7906003,"byte_end":7906010,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905936,"byte_end":7905991,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7906129,"byte_end":7906136,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7906070,"byte_end":7906117,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7906423,"byte_end":7906433,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7906188,"byte_end":7906249,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7906254,"byte_end":7906257,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7906262,"byte_end":7906325,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7906330,"byte_end":7906411,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7906552,"byte_end":7906566,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read.rs","byte_start":7908535,"byte_end":7908539,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2140}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read.rs","byte_start":7908452,"byte_end":7908519,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2145},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_buf.rs","byte_start":7909602,"byte_end":7909609,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":2149},{"krate":0,"index":2150}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_buf.rs","byte_start":7909519,"byte_end":7909586,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2156},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_exact.rs","byte_start":7910858,"byte_end":7910867,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_exact.rs","byte_start":7910775,"byte_end":7910842,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":10008},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915191,"byte_end":7915197,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":10010}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9975},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915213,"byte_end":7915219,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":9977}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9930},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915235,"byte_end":7915242,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":9932},{"krate":0,"index":9933},{"krate":0,"index":9935}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9885},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915267,"byte_end":7915274,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":9887},{"krate":0,"index":9888},{"krate":0,"index":9890}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9840},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915299,"byte_end":7915306,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":9842},{"krate":0,"index":9843},{"krate":0,"index":9845}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9795},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915331,"byte_end":7915339,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":9797},{"krate":0,"index":9798},{"krate":0,"index":9800}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9750},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915367,"byte_end":7915374,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":9752},{"krate":0,"index":9753},{"krate":0,"index":9755}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9705},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915399,"byte_end":7915406,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":9707},{"krate":0,"index":9708},{"krate":0,"index":9710}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9660},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915431,"byte_end":7915438,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":9662},{"krate":0,"index":9663},{"krate":0,"index":9665}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9615},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915463,"byte_end":7915471,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":9617},{"krate":0,"index":9618},{"krate":0,"index":9620}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9570},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915499,"byte_end":7915508,"line_start":125,"line_end":125,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":9572},{"krate":0,"index":9573},{"krate":0,"index":9575}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9525},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915536,"byte_end":7915545,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":9527},{"krate":0,"index":9528},{"krate":0,"index":9530}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9480},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915573,"byte_end":7915582,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":9482},{"krate":0,"index":9483},{"krate":0,"index":9485}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9435},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915610,"byte_end":7915620,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":9437},{"krate":0,"index":9438},{"krate":0,"index":9440}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9390},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915651,"byte_end":7915660,"line_start":130,"line_end":130,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":9392},{"krate":0,"index":9393},{"krate":0,"index":9395}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9345},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915688,"byte_end":7915697,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":9347},{"krate":0,"index":9348},{"krate":0,"index":9350}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9300},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915725,"byte_end":7915734,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":9302},{"krate":0,"index":9303},{"krate":0,"index":9305}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9255},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_int.rs","byte_start":7915762,"byte_end":7915772,"line_start":133,"line_end":133,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":9257},{"krate":0,"index":9258},{"krate":0,"index":9260}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2310},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_line.rs","byte_start":7916190,"byte_end":7916198,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_line.rs","byte_start":7916107,"byte_end":7916174,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2321},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_end.rs","byte_start":7919434,"byte_end":7919443,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":2324},{"krate":0,"index":2325},{"krate":0,"index":2326}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_end.rs","byte_start":7919304,"byte_end":7919371,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2331},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_string.rs","byte_start":7922422,"byte_end":7922434,"line_start":13,"line_end":13,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_string.rs","byte_start":7922339,"byte_end":7922406,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2342},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_until.rs","byte_start":7924887,"byte_end":7924896,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_until.rs","byte_start":7924804,"byte_end":7924871,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2354},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\repeat.rs","byte_start":7927342,"byte_end":7927348,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2355}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2353},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\repeat.rs","byte_start":7928034,"byte_end":7928040,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2358},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\shutdown.rs","byte_start":7928989,"byte_end":7928997,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":2361}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2366},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\sink.rs","byte_start":7930169,"byte_end":7930173,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2367}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2368},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\sink.rs","byte_start":7931014,"byte_end":7931018,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9232},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7932263,"byte_end":7932268,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":9234},{"krate":0,"index":9235},{"krate":0,"index":9236},{"krate":0,"index":9237}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":7558384,"byte_end":7558393,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7933129,"byte_end":7933141,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7932617,"byte_end":7932660,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7932665,"byte_end":7932668,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7932673,"byte_end":7932687,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7932692,"byte_end":7932695,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7932700,"byte_end":7932707,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7932712,"byte_end":7932746,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7932751,"byte_end":7932786,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7932791,"byte_end":7932794,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7932799,"byte_end":7932882,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7932887,"byte_end":7932934,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7932939,"byte_end":7932942,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7932947,"byte_end":7933009,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7933014,"byte_end":7933060,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7933065,"byte_end":7933070,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7933075,"byte_end":7933087,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7933092,"byte_end":7933099,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7933104,"byte_end":7933111,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7933379,"byte_end":7933396,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9186},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946190,"byte_end":7946202,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::util::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":9189},{"krate":0,"index":9190}],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2384},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947478,"byte_end":7947491,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"stream_reader","qualname":"::io::util::stream_reader::stream_reader","value":"pub fn stream_reader<S, B>(S) -> StreamReader<S, B> where S: Stream<Item =\nResult<B, io::Error>>, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946279,"byte_end":7946359,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946360,"byte_end":7946363,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946364,"byte_end":7946377,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946378,"byte_end":7946381,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946382,"byte_end":7946389,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946390,"byte_end":7946411,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ use tokio::io::{stream_reader, AsyncReadExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946412,"byte_end":7946461,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946462,"byte_end":7946482,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946483,"byte_end":7946529,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946530,"byte_end":7946533,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a stream from an iterator.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946534,"byte_end":7946574,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let stream = tokio::stream::iter(vec![","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946575,"byte_end":7946617,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     Ok(Bytes::from_static(&[0, 1, 2, 3])),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946618,"byte_end":7946664,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[4, 5, 6, 7])),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946665,"byte_end":7946711,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[8, 9, 10, 11])),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946712,"byte_end":7946760,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946761,"byte_end":7946768,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946769,"byte_end":7946772,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Convert it to an AsyncRead.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946773,"byte_end":7946807,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ let mut read = stream_reader(stream);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946808,"byte_end":7946849,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946850,"byte_end":7946853,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Read five bytes from the stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946854,"byte_end":7946893,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let mut buf = [0; 5];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946894,"byte_end":7946919,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ read.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946920,"byte_end":7946957,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(buf, [0, 1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946958,"byte_end":7946995,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7946996,"byte_end":7946999,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Read the rest of the current chunk.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947000,"byte_end":7947042,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 3);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947043,"byte_end":7947089,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..3], [5, 6, 7]);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947090,"byte_end":7947127,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947128,"byte_end":7947131,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Read the next chunk.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947132,"byte_end":7947159,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 4);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947160,"byte_end":7947206,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..4], [8, 9, 10, 11]);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947207,"byte_end":7947249,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947250,"byte_end":7947253,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We have now reached the end.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947254,"byte_end":7947289,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 0);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947290,"byte_end":7947336,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947337,"byte_end":7947340,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947341,"byte_end":7947353,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947354,"byte_end":7947361,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947362,"byte_end":7947369,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9141},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7934991,"byte_end":7934995,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":9143},{"krate":0,"index":9144}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":7558384,"byte_end":7558393,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7935585,"byte_end":7935590,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7935282,"byte_end":7935335,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7935340,"byte_end":7935386,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7935391,"byte_end":7935394,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7935399,"byte_end":7935409,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7935414,"byte_end":7935417,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7935422,"byte_end":7935499,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7935504,"byte_end":7935573,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7935909,"byte_end":7935918,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7935638,"byte_end":7935709,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7935714,"byte_end":7935788,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7935793,"byte_end":7935868,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7935873,"byte_end":7935897,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936041,"byte_end":7936048,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7935983,"byte_end":7936029,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936340,"byte_end":7936347,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936095,"byte_end":7936149,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936154,"byte_end":7936157,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936162,"byte_end":7936235,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936240,"byte_end":7936312,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936317,"byte_end":7936328,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1925},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936658,"byte_end":7936669,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936406,"byte_end":7936467,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936472,"byte_end":7936475,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936480,"byte_end":7936553,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936558,"byte_end":7936630,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936635,"byte_end":7936646,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936815,"byte_end":7936825,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936749,"byte_end":7936803,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2407},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write.rs","byte_start":7938755,"byte_end":7938760,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":2410},{"krate":0,"index":2411}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write.rs","byte_start":7938672,"byte_end":7938739,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2416},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_all.rs","byte_start":7939656,"byte_end":7939664,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":2419},{"krate":0,"index":2420}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_all.rs","byte_start":7939573,"byte_end":7939640,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2425},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_buf.rs","byte_start":7941047,"byte_end":7941055,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":2429},{"krate":0,"index":2430}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_buf.rs","byte_start":7940964,"byte_end":7941031,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":9081},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7944936,"byte_end":7944943,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":9083},{"krate":0,"index":9084}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9044},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7944959,"byte_end":7944966,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":9046},{"krate":0,"index":9047}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8999},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7944982,"byte_end":7944990,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":9001},{"krate":0,"index":9002},{"krate":0,"index":9004}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8954},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7945015,"byte_end":7945023,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":8956},{"krate":0,"index":8957},{"krate":0,"index":8959}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8909},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7945048,"byte_end":7945056,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":8911},{"krate":0,"index":8912},{"krate":0,"index":8914}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8864},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7945081,"byte_end":7945090,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":8866},{"krate":0,"index":8867},{"krate":0,"index":8869}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8819},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7945118,"byte_end":7945126,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":8821},{"krate":0,"index":8822},{"krate":0,"index":8824}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8774},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7945151,"byte_end":7945159,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":8776},{"krate":0,"index":8777},{"krate":0,"index":8779}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8729},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7945184,"byte_end":7945192,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":8731},{"krate":0,"index":8732},{"krate":0,"index":8734}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8684},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7945217,"byte_end":7945226,"line_start":122,"line_end":122,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":8686},{"krate":0,"index":8687},{"krate":0,"index":8689}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8639},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7945254,"byte_end":7945264,"line_start":124,"line_end":124,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":8641},{"krate":0,"index":8642},{"krate":0,"index":8644}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8594},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7945292,"byte_end":7945302,"line_start":125,"line_end":125,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":8596},{"krate":0,"index":8597},{"krate":0,"index":8599}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8549},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7945330,"byte_end":7945340,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":8551},{"krate":0,"index":8552},{"krate":0,"index":8554}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8504},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7945368,"byte_end":7945379,"line_start":127,"line_end":127,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":8506},{"krate":0,"index":8507},{"krate":0,"index":8509}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8459},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7945410,"byte_end":7945420,"line_start":129,"line_end":129,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":8461},{"krate":0,"index":8462},{"krate":0,"index":8464}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8414},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7945448,"byte_end":7945458,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":8416},{"krate":0,"index":8417},{"krate":0,"index":8419}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8369},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7945486,"byte_end":7945496,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":8371},{"krate":0,"index":8372},{"krate":0,"index":8374}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8324},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_int.rs","byte_start":7945524,"byte_end":7945535,"line_start":132,"line_end":132,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":8326},{"krate":0,"index":8327},{"krate":0,"index":8329}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":372},{"krate":0,"index":2581},{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2876},{"krate":0,"index":2998}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":71776,"byte_end":71794,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":71796,"byte_end":71834,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":71835,"byte_end":71838,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":71839,"byte_end":71922,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"! library, which can be used to implement networking protocols.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":71923,"byte_end":71988,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":71989,"byte_end":71992,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Organization","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":71993,"byte_end":72011,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72012,"byte_end":72015,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72016,"byte_end":72104,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"! * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72105,"byte_end":72174,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"! * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72175,"byte_end":72263,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"! Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72264,"byte_end":72322,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"! * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72323,"byte_end":72386,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"! over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72387,"byte_end":72452,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72454,"byte_end":72457,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! [`TcpListener`]: TcpListener","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72458,"byte_end":72490,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"! [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72491,"byte_end":72519,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"! [`UdpSocket`]: UdpSocket","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72520,"byte_end":72548,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"! [`UnixListener`]: UnixListener","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72549,"byte_end":72583,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"! [`UnixStream`]: UnixStream","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72584,"byte_end":72614,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"! [`UnixDatagram`]: UnixDatagram","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72615,"byte_end":72649,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73898,"byte_end":73911,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73210,"byte_end":73287,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73288,"byte_end":73291,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73292,"byte_end":73301,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73302,"byte_end":73305,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73306,"byte_end":73383,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73384,"byte_end":73455,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73456,"byte_end":73483,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73484,"byte_end":73487,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73488,"byte_end":73501,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73502,"byte_end":73505,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73506,"byte_end":73583,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73584,"byte_end":73656,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73657,"byte_end":73726,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73727,"byte_end":73730,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73731,"byte_end":73810,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73811,"byte_end":73887,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":79572,"byte_end":79589,"line_start":237,"line_end":237,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":79605,"byte_end":79609,"line_start":238,"line_end":238,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":79670,"byte_end":79676,"line_start":239,"line_end":239,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":79748,"byte_end":79763,"line_start":241,"line_end":241,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> Self::Future","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2581},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","parent":null,"children":[{"krate":0,"index":2582},{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":11318},{"krate":0,"index":2735},{"krate":0,"index":2834}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}},{"value":"! TCP utility types","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\mod.rs","byte_start":7950943,"byte_end":7950964,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2837},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7953564,"byte_end":7953575,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":2838}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955544,"byte_end":7955548,"line_start":132,"line_end":132,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7953658,"byte_end":7953734,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7953739,"byte_end":7953742,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7953747,"byte_end":7953808,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7953813,"byte_end":7953816,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7953821,"byte_end":7953896,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7953901,"byte_end":7953977,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7953982,"byte_end":7953993,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7953998,"byte_end":7954001,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954006,"byte_end":7954081,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ Note that strings only implement this trait when the **`dns`** feature","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954086,"byte_end":7954160,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ is enabled, as strings may contain domain names that need to be resolved.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954165,"byte_end":7954242,"line_start":85,"line_end":85,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954247,"byte_end":7954250,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954255,"byte_end":7954331,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954336,"byte_end":7954409,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954414,"byte_end":7954487,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954492,"byte_end":7954544,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954549,"byte_end":7954552,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954557,"byte_end":7954620,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954625,"byte_end":7954628,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954633,"byte_end":7954687,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954692,"byte_end":7954695,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954700,"byte_end":7954714,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954719,"byte_end":7954722,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954727,"byte_end":7954740,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954745,"byte_end":7954777,"line_start":99,"line_end":99,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954782,"byte_end":7954785,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954790,"byte_end":7954806,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954811,"byte_end":7954814,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954819,"byte_end":7954837,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954842,"byte_end":7954881,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954886,"byte_end":7954952,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954957,"byte_end":7954960,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954965,"byte_end":7954992,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7954997,"byte_end":7955000,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955005,"byte_end":7955032,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955037,"byte_end":7955051,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955056,"byte_end":7955061,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955066,"byte_end":7955073,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955078,"byte_end":7955081,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955086,"byte_end":7955116,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955121,"byte_end":7955124,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955129,"byte_end":7955142,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955147,"byte_end":7955179,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955184,"byte_end":7955211,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955216,"byte_end":7955219,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955224,"byte_end":7955240,"line_start":120,"line_end":120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955245,"byte_end":7955248,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955253,"byte_end":7955271,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955276,"byte_end":7955315,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind((Ipv4Addr::new(127, 0, 0, 1), 2345)).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955320,"byte_end":7955405,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955410,"byte_end":7955413,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955418,"byte_end":7955445,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955450,"byte_end":7955453,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955458,"byte_end":7955485,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955490,"byte_end":7955504,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955509,"byte_end":7955514,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7955519,"byte_end":7955526,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7957120,"byte_end":7957126,"line_start":184,"line_end":184,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956261,"byte_end":7956318,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956323,"byte_end":7956326,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956331,"byte_end":7956406,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956411,"byte_end":7956481,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956486,"byte_end":7956515,"line_start":161,"line_end":161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956520,"byte_end":7956523,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956528,"byte_end":7956575,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956580,"byte_end":7956583,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956588,"byte_end":7956602,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956607,"byte_end":7956610,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956615,"byte_end":7956628,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956633,"byte_end":7956665,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956670,"byte_end":7956673,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956678,"byte_end":7956694,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956699,"byte_end":7956702,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956707,"byte_end":7956725,"line_start":172,"line_end":172,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956730,"byte_end":7956769,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956774,"byte_end":7956844,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956849,"byte_end":7956852,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956857,"byte_end":7956896,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956901,"byte_end":7956971,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7956976,"byte_end":7957039,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7957044,"byte_end":7957053,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7957058,"byte_end":7957061,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7957066,"byte_end":7957080,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7957085,"byte_end":7957090,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7957095,"byte_end":7957102,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7957462,"byte_end":7957473,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","sig":null,"attributes":[{"value":"/ Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7957239,"byte_end":7957311,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7957316,"byte_end":7957319,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ In case if I/O resource isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7957324,"byte_end":7957400,"line_start":190,"line_end":190,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7957405,"byte_end":7957450,"line_start":191,"line_end":191,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960335,"byte_end":7960343,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7958320,"byte_end":7958392,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7958397,"byte_end":7958400,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7958405,"byte_end":7958475,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7958480,"byte_end":7958556,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7958561,"byte_end":7958605,"line_start":224,"line_end":224,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7958610,"byte_end":7958613,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7958618,"byte_end":7958693,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7958698,"byte_end":7958774,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7958779,"byte_end":7958844,"line_start":228,"line_end":228,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7958849,"byte_end":7958904,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7958909,"byte_end":7958912,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7958917,"byte_end":7958988,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7958993,"byte_end":7959068,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959073,"byte_end":7959112,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959117,"byte_end":7959120,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959125,"byte_end":7959188,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959193,"byte_end":7959196,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959201,"byte_end":7959274,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959279,"byte_end":7959310,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959315,"byte_end":7959318,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959323,"byte_end":7959396,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959401,"byte_end":7959476,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959481,"byte_end":7959554,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959559,"byte_end":7959586,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959591,"byte_end":7959594,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959599,"byte_end":7959613,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959618,"byte_end":7959621,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959626,"byte_end":7959644,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959649,"byte_end":7959675,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959680,"byte_end":7959712,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959717,"byte_end":7959720,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959725,"byte_end":7959743,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959748,"byte_end":7959799,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959804,"byte_end":7959875,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959880,"byte_end":7959940,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959945,"byte_end":7959959,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959964,"byte_end":7959969,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959974,"byte_end":7959981,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959986,"byte_end":7959989,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7959994,"byte_end":7960006,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960011,"byte_end":7960014,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960019,"byte_end":7960079,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960084,"byte_end":7960087,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960092,"byte_end":7960162,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960167,"byte_end":7960240,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960245,"byte_end":7960323,"line_start":265,"line_end":265,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961427,"byte_end":7961437,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960701,"byte_end":7960762,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960767,"byte_end":7960770,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960775,"byte_end":7960848,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960853,"byte_end":7960887,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960892,"byte_end":7960895,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960900,"byte_end":7960914,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960919,"byte_end":7960922,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960927,"byte_end":7960945,"line_start":284,"line_end":284,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960950,"byte_end":7960982,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960987,"byte_end":7960990,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7960995,"byte_end":7961011,"line_start":287,"line_end":287,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961016,"byte_end":7961071,"line_start":288,"line_end":288,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961076,"byte_end":7961079,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961084,"byte_end":7961102,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961107,"byte_end":7961146,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961151,"byte_end":7961217,"line_start":292,"line_end":292,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961222,"byte_end":7961225,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961230,"byte_end":7961272,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961277,"byte_end":7961366,"line_start":295,"line_end":295,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961371,"byte_end":7961374,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961379,"byte_end":7961393,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961398,"byte_end":7961403,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961408,"byte_end":7961415,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2614},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962868,"byte_end":7962876,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961523,"byte_end":7961597,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961602,"byte_end":7961605,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961610,"byte_end":7961672,"line_start":306,"line_end":306,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961677,"byte_end":7961680,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961685,"byte_end":7961761,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961766,"byte_end":7961835,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961840,"byte_end":7961869,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961874,"byte_end":7961877,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961882,"byte_end":7961894,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961899,"byte_end":7961902,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961907,"byte_end":7961982,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7961987,"byte_end":7962062,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962067,"byte_end":7962141,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962146,"byte_end":7962221,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962226,"byte_end":7962234,"line_start":318,"line_end":318,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962239,"byte_end":7962242,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962247,"byte_end":7962261,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962266,"byte_end":7962269,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962274,"byte_end":7962287,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962292,"byte_end":7962345,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962350,"byte_end":7962353,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962358,"byte_end":7962376,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962381,"byte_end":7962402,"line_start":326,"line_end":326,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962407,"byte_end":7962485,"line_start":327,"line_end":327,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962490,"byte_end":7962537,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962542,"byte_end":7962545,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962550,"byte_end":7962606,"line_start":330,"line_end":330,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962611,"byte_end":7962637,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962642,"byte_end":7962673,"line_start":332,"line_end":332,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962678,"byte_end":7962722,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962727,"byte_end":7962744,"line_start":334,"line_end":334,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962749,"byte_end":7962802,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962807,"byte_end":7962820,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962825,"byte_end":7962834,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962839,"byte_end":7962844,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962849,"byte_end":7962856,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963562,"byte_end":7963565,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7962945,"byte_end":7963003,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963008,"byte_end":7963011,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963016,"byte_end":7963076,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963081,"byte_end":7963084,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963089,"byte_end":7963126,"line_start":348,"line_end":348,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963131,"byte_end":7963134,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963139,"byte_end":7963153,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963158,"byte_end":7963161,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963166,"byte_end":7963179,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963184,"byte_end":7963216,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963221,"byte_end":7963224,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963229,"byte_end":7963245,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963250,"byte_end":7963253,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963258,"byte_end":7963276,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963281,"byte_end":7963320,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963325,"byte_end":7963387,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963392,"byte_end":7963395,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963400,"byte_end":7963457,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963462,"byte_end":7963502,"line_start":362,"line_end":362,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963507,"byte_end":7963510,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963515,"byte_end":7963528,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963533,"byte_end":7963538,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963543,"byte_end":7963550,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2616},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7964204,"byte_end":7964211,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963637,"byte_end":7963695,"line_start":371,"line_end":371,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963700,"byte_end":7963703,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963708,"byte_end":7963784,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963789,"byte_end":7963810,"line_start":374,"line_end":374,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963815,"byte_end":7963818,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963823,"byte_end":7963837,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963842,"byte_end":7963845,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963850,"byte_end":7963863,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963868,"byte_end":7963900,"line_start":379,"line_end":379,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963905,"byte_end":7963908,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963913,"byte_end":7963929,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963934,"byte_end":7963937,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963942,"byte_end":7963960,"line_start":383,"line_end":383,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7963965,"byte_end":7964004,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7964009,"byte_end":7964072,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7964077,"byte_end":7964080,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7964085,"byte_end":7964143,"line_start":387,"line_end":387,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7964148,"byte_end":7964151,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7964156,"byte_end":7964170,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7964175,"byte_end":7964180,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7964185,"byte_end":7964192,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2839},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":7966484,"byte_end":7966492,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":2841}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":7966282,"byte_end":7966358,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":7966359,"byte_end":7966406,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":7966407,"byte_end":7966455,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":7966907,"byte_end":7966918,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":7966670,"byte_end":7966743,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":7966748,"byte_end":7966763,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":7966768,"byte_end":7966771,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":7966776,"byte_end":7966845,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":7966850,"byte_end":7966895,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2845},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968477,"byte_end":7968485,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968069,"byte_end":7968124,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968125,"byte_end":7968128,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968129,"byte_end":7968217,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968218,"byte_end":7968295,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968296,"byte_end":7968299,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968300,"byte_end":7968328,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968329,"byte_end":7968362,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968363,"byte_end":7968414,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968415,"byte_end":7968448,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2852},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969179,"byte_end":7969188,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968507,"byte_end":7968563,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968564,"byte_end":7968567,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968568,"byte_end":7968654,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968655,"byte_end":7968707,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968708,"byte_end":7968711,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968712,"byte_end":7968798,"line_start":39,"line_end":39,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968799,"byte_end":7968884,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968885,"byte_end":7968888,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968889,"byte_end":7968917,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968918,"byte_end":7968951,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7968952,"byte_end":7968999,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969000,"byte_end":7969062,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969063,"byte_end":7969116,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969117,"byte_end":7969150,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2662},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970245,"byte_end":7970254,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969362,"byte_end":7969436,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969441,"byte_end":7969514,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969519,"byte_end":7969533,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969538,"byte_end":7969541,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969546,"byte_end":7969619,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969624,"byte_end":7969627,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969632,"byte_end":7969646,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969651,"byte_end":7969654,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969659,"byte_end":7969672,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969677,"byte_end":7969695,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969700,"byte_end":7969730,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969735,"byte_end":7969738,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969743,"byte_end":7969776,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969781,"byte_end":7969784,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969789,"byte_end":7969807,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969812,"byte_end":7969851,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969856,"byte_end":7969925,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969930,"byte_end":7969978,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969983,"byte_end":7970013,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970018,"byte_end":7970021,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970026,"byte_end":7970048,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970053,"byte_end":7970098,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970103,"byte_end":7970121,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970126,"byte_end":7970129,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970134,"byte_end":7970148,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970153,"byte_end":7970158,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970163,"byte_end":7970170,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970175,"byte_end":7970178,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970183,"byte_end":7970233,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971671,"byte_end":7971675,"line_start":128,"line_end":128,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970379,"byte_end":7970449,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970454,"byte_end":7970523,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970528,"byte_end":7970567,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970572,"byte_end":7970575,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970580,"byte_end":7970648,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970653,"byte_end":7970656,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970661,"byte_end":7970701,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970706,"byte_end":7970709,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970714,"byte_end":7970728,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970733,"byte_end":7970736,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970741,"byte_end":7970754,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970759,"byte_end":7970789,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970794,"byte_end":7970820,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970825,"byte_end":7970851,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970856,"byte_end":7970859,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970864,"byte_end":7970882,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970887,"byte_end":7970938,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970943,"byte_end":7970971,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7970976,"byte_end":7971045,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971050,"byte_end":7971098,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971103,"byte_end":7971106,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971111,"byte_end":7971140,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971145,"byte_end":7971174,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971179,"byte_end":7971182,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971187,"byte_end":7971214,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971219,"byte_end":7971266,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971271,"byte_end":7971274,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971279,"byte_end":7971303,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971308,"byte_end":7971367,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971372,"byte_end":7971411,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971416,"byte_end":7971419,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971424,"byte_end":7971438,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971443,"byte_end":7971448,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971453,"byte_end":7971460,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971465,"byte_end":7971468,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971473,"byte_end":7971538,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971543,"byte_end":7971546,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971551,"byte_end":7971597,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971602,"byte_end":7971653,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2859},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974277,"byte_end":7974290,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":2860}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7973842,"byte_end":7973908,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7973909,"byte_end":7973912,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7973913,"byte_end":7974000,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974001,"byte_end":7974085,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974086,"byte_end":7974089,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974090,"byte_end":7974118,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974119,"byte_end":7974162,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974163,"byte_end":7974214,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974215,"byte_end":7974248,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2863},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7975096,"byte_end":7975110,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":2864},{"krate":0,"index":2865}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974323,"byte_end":7974390,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974391,"byte_end":7974394,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974395,"byte_end":7974481,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974482,"byte_end":7974534,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974535,"byte_end":7974538,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Dropping the write half will shutdown the write half of the TCP stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974539,"byte_end":7974614,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974615,"byte_end":7974618,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974619,"byte_end":7974705,"line_start":45,"line_end":45,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974706,"byte_end":7974791,"line_start":46,"line_end":46,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974792,"byte_end":7974795,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974796,"byte_end":7974824,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974825,"byte_end":7974868,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974869,"byte_end":7974916,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974917,"byte_end":7974979,"line_start":51,"line_end":51,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7974980,"byte_end":7975033,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7975034,"byte_end":7975067,"line_start":53,"line_end":53,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976054,"byte_end":7976066,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7975927,"byte_end":7976004,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ not be reunited.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976005,"byte_end":7976025,"line_start":87,"line_end":87,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2870},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976067,"byte_end":7976084,"line_start":89,"line_end":89,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":2868},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2871},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976086,"byte_end":7976104,"line_start":89,"line_end":89,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":2868},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976650,"byte_end":7976657,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976387,"byte_end":7976456,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976461,"byte_end":7976525,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976530,"byte_end":7976582,"line_start":105,"line_end":105,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976587,"byte_end":7976590,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976595,"byte_end":7976638,"line_start":107,"line_end":107,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977648,"byte_end":7977657,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976764,"byte_end":7976838,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976843,"byte_end":7976916,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976921,"byte_end":7976935,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976940,"byte_end":7976943,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976948,"byte_end":7977021,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977026,"byte_end":7977029,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977034,"byte_end":7977048,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977053,"byte_end":7977056,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977061,"byte_end":7977074,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977079,"byte_end":7977097,"line_start":121,"line_end":121,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977102,"byte_end":7977132,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977137,"byte_end":7977140,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977145,"byte_end":7977178,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977183,"byte_end":7977186,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977191,"byte_end":7977209,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977214,"byte_end":7977253,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977258,"byte_end":7977323,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977328,"byte_end":7977381,"line_start":129,"line_end":129,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977386,"byte_end":7977416,"line_start":130,"line_end":130,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977421,"byte_end":7977424,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977429,"byte_end":7977451,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977456,"byte_end":7977501,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977506,"byte_end":7977524,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977529,"byte_end":7977532,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977537,"byte_end":7977551,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977556,"byte_end":7977561,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977566,"byte_end":7977573,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977578,"byte_end":7977581,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977586,"byte_end":7977636,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2709},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7979079,"byte_end":7979083,"line_start":184,"line_end":184,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977786,"byte_end":7977856,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977861,"byte_end":7977930,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977935,"byte_end":7977974,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977979,"byte_end":7977982,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7977987,"byte_end":7978055,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978060,"byte_end":7978063,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978068,"byte_end":7978108,"line_start":151,"line_end":151,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978113,"byte_end":7978116,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978121,"byte_end":7978135,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978140,"byte_end":7978143,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978148,"byte_end":7978161,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978166,"byte_end":7978196,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978201,"byte_end":7978227,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978232,"byte_end":7978258,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978263,"byte_end":7978266,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978271,"byte_end":7978289,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978294,"byte_end":7978345,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978350,"byte_end":7978378,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978383,"byte_end":7978448,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978453,"byte_end":7978506,"line_start":164,"line_end":164,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978511,"byte_end":7978514,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978519,"byte_end":7978548,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978553,"byte_end":7978582,"line_start":167,"line_end":167,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978587,"byte_end":7978590,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978595,"byte_end":7978622,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978627,"byte_end":7978674,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978679,"byte_end":7978682,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978687,"byte_end":7978711,"line_start":172,"line_end":172,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978716,"byte_end":7978775,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978780,"byte_end":7978819,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978824,"byte_end":7978827,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978832,"byte_end":7978846,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978851,"byte_end":7978856,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978861,"byte_end":7978868,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978873,"byte_end":7978876,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978881,"byte_end":7978946,"line_start":180,"line_end":180,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978951,"byte_end":7978954,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7978959,"byte_end":7979005,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7979010,"byte_end":7979061,"line_start":183,"line_end":183,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7979816,"byte_end":7979823,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7979553,"byte_end":7979622,"line_start":204,"line_end":204,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7979627,"byte_end":7979691,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7979696,"byte_end":7979748,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7979753,"byte_end":7979756,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7979761,"byte_end":7979804,"line_start":208,"line_end":208,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7979997,"byte_end":7980003,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drop the write half, but don't issue a TCP shutdown.\n","sig":null,"attributes":[{"value":"/ Drop the write half, but don't issue a TCP shutdown.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7979929,"byte_end":7979985,"line_start":213,"line_end":213,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2874},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7983293,"byte_end":7983302,"line_start":58,"line_end":58,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":2875}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7985383,"byte_end":7985390,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7983381,"byte_end":7983425,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7983430,"byte_end":7983433,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7983438,"byte_end":7983512,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address. Note that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7983517,"byte_end":7983586,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ strings only implement this trait when the **`dns`** feature is enabled,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7983591,"byte_end":7983667,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ as strings may contain domain names that need to be resolved.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7983672,"byte_end":7983737,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7983742,"byte_end":7983745,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7983750,"byte_end":7983826,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7983831,"byte_end":7983900,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7983905,"byte_end":7983981,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7983986,"byte_end":7984045,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984050,"byte_end":7984053,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984058,"byte_end":7984112,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984117,"byte_end":7984120,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984125,"byte_end":7984139,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984144,"byte_end":7984147,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984152,"byte_end":7984165,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984170,"byte_end":7984200,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984205,"byte_end":7984231,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984236,"byte_end":7984262,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984267,"byte_end":7984270,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984275,"byte_end":7984293,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984298,"byte_end":7984349,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984354,"byte_end":7984382,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984387,"byte_end":7984456,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984461,"byte_end":7984464,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984469,"byte_end":7984496,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984501,"byte_end":7984550,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984555,"byte_end":7984558,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984563,"byte_end":7984577,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984582,"byte_end":7984587,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984592,"byte_end":7984599,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984604,"byte_end":7984607,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984612,"byte_end":7984642,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984647,"byte_end":7984650,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984655,"byte_end":7984668,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984673,"byte_end":7984703,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984708,"byte_end":7984734,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984739,"byte_end":7984765,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984770,"byte_end":7984797,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984802,"byte_end":7984805,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984810,"byte_end":7984828,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984833,"byte_end":7984884,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984889,"byte_end":7984917,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect((Ipv4Addr::new(127, 0, 0, 1), 8080)).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7984922,"byte_end":7985010,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7985015,"byte_end":7985018,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7985023,"byte_end":7985050,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7985055,"byte_end":7985104,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7985109,"byte_end":7985112,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7985117,"byte_end":7985131,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7985136,"byte_end":7985141,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7985146,"byte_end":7985153,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7985158,"byte_end":7985161,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7985166,"byte_end":7985237,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7985242,"byte_end":7985245,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7985250,"byte_end":7985307,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7985312,"byte_end":7985365,"line_start":120,"line_end":120,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987823,"byte_end":7987831,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7986856,"byte_end":7986913,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7986918,"byte_end":7986921,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7986926,"byte_end":7987001,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987006,"byte_end":7987079,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987084,"byte_end":7987087,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987092,"byte_end":7987106,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987111,"byte_end":7987114,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987119,"byte_end":7987137,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987142,"byte_end":7987168,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987173,"byte_end":7987203,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987208,"byte_end":7987211,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987216,"byte_end":7987234,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987239,"byte_end":7987290,"line_start":178,"line_end":178,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987295,"byte_end":7987369,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987374,"byte_end":7987428,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987433,"byte_end":7987447,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987452,"byte_end":7987457,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987462,"byte_end":7987469,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987474,"byte_end":7987477,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987482,"byte_end":7987494,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987499,"byte_end":7987502,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987507,"byte_end":7987567,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987572,"byte_end":7987575,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987580,"byte_end":7987650,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987655,"byte_end":7987728,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7987733,"byte_end":7987811,"line_start":191,"line_end":191,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7988228,"byte_end":7988239,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"pub async fn connect_std<'_>(net::TcpStream, &'_ SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989387,"byte_end":7989397,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7988988,"byte_end":7989047,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989052,"byte_end":7989055,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989060,"byte_end":7989074,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989079,"byte_end":7989082,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989087,"byte_end":7989100,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989105,"byte_end":7989135,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989140,"byte_end":7989143,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989148,"byte_end":7989212,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989217,"byte_end":7989278,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989283,"byte_end":7989286,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989291,"byte_end":7989334,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989339,"byte_end":7989351,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989356,"byte_end":7989363,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989368,"byte_end":7989375,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989886,"byte_end":7989895,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989483,"byte_end":7989547,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989552,"byte_end":7989555,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989560,"byte_end":7989574,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989579,"byte_end":7989582,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989587,"byte_end":7989600,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989605,"byte_end":7989635,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989640,"byte_end":7989643,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989648,"byte_end":7989712,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989717,"byte_end":7989778,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989783,"byte_end":7989786,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989791,"byte_end":7989833,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989838,"byte_end":7989850,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989855,"byte_end":7989862,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989867,"byte_end":7989874,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7991053,"byte_end":7991062,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7989980,"byte_end":7990055,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990060,"byte_end":7990133,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990138,"byte_end":7990152,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990157,"byte_end":7990160,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990165,"byte_end":7990183,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990188,"byte_end":7990191,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990196,"byte_end":7990221,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990226,"byte_end":7990229,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990234,"byte_end":7990285,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990290,"byte_end":7990373,"line_start":267,"line_end":267,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990378,"byte_end":7990433,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990438,"byte_end":7990441,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990446,"byte_end":7990458,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990463,"byte_end":7990466,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990471,"byte_end":7990546,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990551,"byte_end":7990554,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990559,"byte_end":7990573,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990578,"byte_end":7990581,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990586,"byte_end":7990599,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990604,"byte_end":7990622,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990627,"byte_end":7990657,"line_start":278,"line_end":278,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990662,"byte_end":7990665,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990670,"byte_end":7990703,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990708,"byte_end":7990711,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990716,"byte_end":7990734,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990739,"byte_end":7990778,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990783,"byte_end":7990852,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990857,"byte_end":7990887,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990892,"byte_end":7990895,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990900,"byte_end":7990922,"line_start":287,"line_end":287,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990927,"byte_end":7990969,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990974,"byte_end":7990992,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7990997,"byte_end":7991000,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7991005,"byte_end":7991019,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7991024,"byte_end":7991029,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7991034,"byte_end":7991041,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992974,"byte_end":7992978,"line_start":352,"line_end":352,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7991723,"byte_end":7991793,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7991798,"byte_end":7991867,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7991872,"byte_end":7991911,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7991916,"byte_end":7991919,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7991924,"byte_end":7991998,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992003,"byte_end":7992063,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992068,"byte_end":7992071,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992076,"byte_end":7992090,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992095,"byte_end":7992098,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992103,"byte_end":7992116,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992121,"byte_end":7992151,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992156,"byte_end":7992182,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992187,"byte_end":7992213,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992218,"byte_end":7992221,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992226,"byte_end":7992244,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992249,"byte_end":7992300,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992305,"byte_end":7992333,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992338,"byte_end":7992407,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992412,"byte_end":7992415,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992420,"byte_end":7992449,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992454,"byte_end":7992483,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992488,"byte_end":7992491,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992496,"byte_end":7992523,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992528,"byte_end":7992572,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992577,"byte_end":7992580,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992585,"byte_end":7992609,"line_start":340,"line_end":340,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992614,"byte_end":7992670,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992675,"byte_end":7992714,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992719,"byte_end":7992722,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992727,"byte_end":7992741,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992746,"byte_end":7992751,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992756,"byte_end":7992763,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992768,"byte_end":7992771,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992776,"byte_end":7992841,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992846,"byte_end":7992849,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992854,"byte_end":7992900,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7992905,"byte_end":7992956,"line_start":351,"line_end":351,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993847,"byte_end":7993855,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993092,"byte_end":7993158,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993163,"byte_end":7993166,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993171,"byte_end":7993243,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993248,"byte_end":7993317,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993322,"byte_end":7993355,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993360,"byte_end":7993363,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993368,"byte_end":7993382,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993387,"byte_end":7993390,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993395,"byte_end":7993408,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993413,"byte_end":7993443,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993448,"byte_end":7993474,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993479,"byte_end":7993506,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993511,"byte_end":7993514,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993519,"byte_end":7993537,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993542,"byte_end":7993593,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993598,"byte_end":7993626,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993631,"byte_end":7993696,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993701,"byte_end":7993704,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993709,"byte_end":7993739,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993744,"byte_end":7993786,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993791,"byte_end":7993794,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993799,"byte_end":7993813,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993818,"byte_end":7993823,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993828,"byte_end":7993835,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994481,"byte_end":7994488,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7993949,"byte_end":7994011,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994016,"byte_end":7994019,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994024,"byte_end":7994088,"line_start":386,"line_end":386,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994093,"byte_end":7994096,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994101,"byte_end":7994144,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994149,"byte_end":7994152,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994157,"byte_end":7994171,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994176,"byte_end":7994179,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994184,"byte_end":7994197,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994202,"byte_end":7994232,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994237,"byte_end":7994240,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994245,"byte_end":7994309,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994314,"byte_end":7994375,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994380,"byte_end":7994383,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994388,"byte_end":7994428,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994433,"byte_end":7994445,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994450,"byte_end":7994457,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994462,"byte_end":7994469,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995295,"byte_end":7995306,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994565,"byte_end":7994627,"line_start":406,"line_end":406,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994632,"byte_end":7994635,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994640,"byte_end":7994709,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994714,"byte_end":7994787,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994792,"byte_end":7994865,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994870,"byte_end":7994945,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994950,"byte_end":7994968,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994973,"byte_end":7994976,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7994981,"byte_end":7994995,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995000,"byte_end":7995003,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995008,"byte_end":7995021,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995026,"byte_end":7995056,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995061,"byte_end":7995064,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995069,"byte_end":7995133,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995138,"byte_end":7995199,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995204,"byte_end":7995207,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995212,"byte_end":7995242,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995247,"byte_end":7995259,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995264,"byte_end":7995271,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995276,"byte_end":7995283,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2795},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995973,"byte_end":7995989,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995407,"byte_end":7995467,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995472,"byte_end":7995475,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995480,"byte_end":7995553,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995558,"byte_end":7995561,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995566,"byte_end":7995627,"line_start":434,"line_end":434,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995632,"byte_end":7995635,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995640,"byte_end":7995654,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995659,"byte_end":7995662,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995667,"byte_end":7995680,"line_start":438,"line_end":438,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995685,"byte_end":7995715,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995720,"byte_end":7995723,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995728,"byte_end":7995792,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995797,"byte_end":7995858,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995863,"byte_end":7995866,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995871,"byte_end":7995920,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995925,"byte_end":7995937,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995942,"byte_end":7995949,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7995954,"byte_end":7995961,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2796},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996581,"byte_end":7996601,"line_start":469,"line_end":469,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996076,"byte_end":7996136,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996141,"byte_end":7996144,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996149,"byte_end":7996221,"line_start":454,"line_end":454,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996226,"byte_end":7996246,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996251,"byte_end":7996254,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996259,"byte_end":7996273,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996278,"byte_end":7996281,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996286,"byte_end":7996299,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996304,"byte_end":7996334,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996339,"byte_end":7996342,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996347,"byte_end":7996411,"line_start":462,"line_end":462,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996416,"byte_end":7996477,"line_start":463,"line_end":463,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996482,"byte_end":7996485,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996490,"byte_end":7996528,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996533,"byte_end":7996545,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996550,"byte_end":7996557,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996562,"byte_end":7996569,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997272,"byte_end":7997288,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996706,"byte_end":7996766,"line_start":473,"line_end":473,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996771,"byte_end":7996774,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996779,"byte_end":7996852,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996857,"byte_end":7996860,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996865,"byte_end":7996926,"line_start":477,"line_end":477,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996931,"byte_end":7996934,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996939,"byte_end":7996953,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996958,"byte_end":7996961,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996966,"byte_end":7996979,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7996984,"byte_end":7997014,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997019,"byte_end":7997022,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997027,"byte_end":7997091,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997096,"byte_end":7997157,"line_start":485,"line_end":485,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997162,"byte_end":7997165,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997170,"byte_end":7997219,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997224,"byte_end":7997236,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997241,"byte_end":7997248,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997253,"byte_end":7997260,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997877,"byte_end":7997897,"line_start":512,"line_end":512,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997375,"byte_end":7997435,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997440,"byte_end":7997443,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997448,"byte_end":7997522,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997527,"byte_end":7997542,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997547,"byte_end":7997550,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997555,"byte_end":7997569,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997574,"byte_end":7997577,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997582,"byte_end":7997595,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997600,"byte_end":7997630,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997635,"byte_end":7997638,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997643,"byte_end":7997707,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997712,"byte_end":7997773,"line_start":506,"line_end":506,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997778,"byte_end":7997781,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997786,"byte_end":7997824,"line_start":508,"line_end":508,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997829,"byte_end":7997841,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997846,"byte_end":7997853,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7997858,"byte_end":7997865,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998599,"byte_end":7998608,"line_start":535,"line_end":535,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"pub fn keepalive(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998002,"byte_end":7998078,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998083,"byte_end":7998121,"line_start":517,"line_end":517,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998126,"byte_end":7998129,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998134,"byte_end":7998200,"line_start":519,"line_end":519,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998205,"byte_end":7998208,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998213,"byte_end":7998260,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998265,"byte_end":7998268,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998273,"byte_end":7998287,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998292,"byte_end":7998295,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998300,"byte_end":7998313,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998318,"byte_end":7998348,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998353,"byte_end":7998356,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998361,"byte_end":7998425,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998430,"byte_end":7998491,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998496,"byte_end":7998499,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998504,"byte_end":7998546,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998551,"byte_end":7998563,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998568,"byte_end":7998575,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998580,"byte_end":7998587,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999639,"byte_end":7999652,"line_start":564,"line_end":564,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"pub fn set_keepalive(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998699,"byte_end":7998773,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998778,"byte_end":7998781,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998786,"byte_end":7998853,"line_start":541,"line_end":541,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998858,"byte_end":7998932,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7998937,"byte_end":7998999,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999004,"byte_end":7999007,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999012,"byte_end":7999086,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999091,"byte_end":7999166,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999171,"byte_end":7999195,"line_start":547,"line_end":547,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999200,"byte_end":7999203,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999208,"byte_end":7999271,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999276,"byte_end":7999310,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999315,"byte_end":7999318,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999323,"byte_end":7999337,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999342,"byte_end":7999345,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999350,"byte_end":7999363,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999368,"byte_end":7999398,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999403,"byte_end":7999406,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999411,"byte_end":7999475,"line_start":557,"line_end":557,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999480,"byte_end":7999541,"line_start":558,"line_end":558,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999546,"byte_end":7999549,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999554,"byte_end":7999586,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999591,"byte_end":7999603,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999608,"byte_end":7999615,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999620,"byte_end":7999627,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000283,"byte_end":8000286,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999771,"byte_end":7999829,"line_start":568,"line_end":568,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999834,"byte_end":7999837,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999842,"byte_end":7999902,"line_start":570,"line_end":570,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999907,"byte_end":7999910,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999915,"byte_end":7999950,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999955,"byte_end":7999958,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999963,"byte_end":7999977,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999982,"byte_end":7999985,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7999990,"byte_end":8000003,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000008,"byte_end":8000038,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000043,"byte_end":8000046,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000051,"byte_end":8000115,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000120,"byte_end":8000181,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000186,"byte_end":8000189,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000194,"byte_end":8000230,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000235,"byte_end":8000247,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000252,"byte_end":8000259,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000264,"byte_end":8000271,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000853,"byte_end":8000860,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000358,"byte_end":8000416,"line_start":590,"line_end":590,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000421,"byte_end":8000424,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000429,"byte_end":8000505,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000510,"byte_end":8000531,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000536,"byte_end":8000539,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000544,"byte_end":8000558,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000563,"byte_end":8000566,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000571,"byte_end":8000584,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000589,"byte_end":8000619,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000624,"byte_end":8000627,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000632,"byte_end":8000696,"line_start":600,"line_end":600,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000701,"byte_end":8000762,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000767,"byte_end":8000770,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000775,"byte_end":8000800,"line_start":603,"line_end":603,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000805,"byte_end":8000817,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000822,"byte_end":8000829,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000834,"byte_end":8000841,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001502,"byte_end":8001508,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8000948,"byte_end":8001020,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001025,"byte_end":8001036,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001041,"byte_end":8001044,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001049,"byte_end":8001112,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001117,"byte_end":8001120,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001125,"byte_end":8001166,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001171,"byte_end":8001174,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001179,"byte_end":8001193,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001198,"byte_end":8001201,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001206,"byte_end":8001219,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001224,"byte_end":8001254,"line_start":621,"line_end":621,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001259,"byte_end":8001262,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001267,"byte_end":8001331,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001336,"byte_end":8001397,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001402,"byte_end":8001405,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001410,"byte_end":8001449,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001454,"byte_end":8001466,"line_start":627,"line_end":627,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001471,"byte_end":8001478,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001483,"byte_end":8001490,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002450,"byte_end":8002460,"line_start":658,"line_end":658,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001596,"byte_end":8001666,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001671,"byte_end":8001682,"line_start":635,"line_end":635,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001687,"byte_end":8001690,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001695,"byte_end":8001770,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001775,"byte_end":8001838,"line_start":638,"line_end":638,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001843,"byte_end":8001914,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001919,"byte_end":8001936,"line_start":640,"line_end":640,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001941,"byte_end":8001944,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8001949,"byte_end":8002022,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002027,"byte_end":8002103,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002108,"byte_end":8002124,"line_start":644,"line_end":644,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002129,"byte_end":8002132,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002137,"byte_end":8002151,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002156,"byte_end":8002159,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002164,"byte_end":8002177,"line_start":648,"line_end":648,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002182,"byte_end":8002212,"line_start":649,"line_end":649,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002217,"byte_end":8002220,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002225,"byte_end":8002289,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002294,"byte_end":8002355,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002360,"byte_end":8002363,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002368,"byte_end":8002397,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002402,"byte_end":8002414,"line_start":655,"line_end":655,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002419,"byte_end":8002426,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002431,"byte_end":8002438,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002900,"byte_end":8002905,"line_start":669,"line_end":669,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split(&mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002564,"byte_end":8002641,"line_start":662,"line_end":662,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002646,"byte_end":8002692,"line_start":663,"line_end":663,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002697,"byte_end":8002700,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002705,"byte_end":8002784,"line_start":665,"line_end":665,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002789,"byte_end":8002832,"line_start":666,"line_end":666,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002837,"byte_end":8002840,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002845,"byte_end":8002888,"line_start":668,"line_end":668,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8003488,"byte_end":8003498,"line_start":683,"line_end":683,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8002983,"byte_end":8003060,"line_start":673,"line_end":673,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8003065,"byte_end":8003111,"line_start":674,"line_end":674,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8003116,"byte_end":8003119,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8003124,"byte_end":8003202,"line_start":676,"line_end":676,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8003207,"byte_end":8003255,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8003260,"byte_end":8003263,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ **Note::** Dropping the write half will shutdown the write half of the TCP","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8003268,"byte_end":8003346,"line_start":679,"line_end":679,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling `shutdown(Write)` on the `TcpStream`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8003351,"byte_end":8003430,"line_start":680,"line_end":680,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8003435,"byte_end":8003438,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8003443,"byte_end":8003476,"line_start":682,"line_end":682,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\mod.rs","parent":null,"children":[{"krate":0,"index":2877},{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":11428},{"krate":0,"index":2997}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":23406,"byte_end":23429,"line_start":340,"line_end":340,"column_start":13,"column_end":36}},{"value":"! UDP utility types.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\mod.rs","byte_start":8010751,"byte_end":8010773,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2999},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8011229,"byte_end":8011238,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3000}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":23406,"byte_end":23429,"line_start":340,"line_end":340,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8011436,"byte_end":8011440,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8011317,"byte_end":8011389,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8011394,"byte_end":8011418,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2904},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8013143,"byte_end":8013151,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8012275,"byte_end":8012347,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8012352,"byte_end":8012355,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8012360,"byte_end":8012433,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8012438,"byte_end":8012513,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8012518,"byte_end":8012565,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8012570,"byte_end":8012573,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8012578,"byte_end":8012651,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8012656,"byte_end":8012731,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8012736,"byte_end":8012789,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8012794,"byte_end":8012797,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8012802,"byte_end":8012814,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8012819,"byte_end":8012822,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8012827,"byte_end":8012887,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8012892,"byte_end":8012895,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8012900,"byte_end":8012970,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8012975,"byte_end":8013048,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8013053,"byte_end":8013131,"line_start":67,"line_end":67,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2905},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8013535,"byte_end":8013540,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"pub fn split(Self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.\n","sig":null,"attributes":[{"value":"/ Splits the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8013343,"byte_end":8013420,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8013425,"byte_end":8013498,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8013503,"byte_end":8013523,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2906},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8013675,"byte_end":8013685,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8013604,"byte_end":8013663,"line_start":81,"line_end":81,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2907},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8013957,"byte_end":8013964,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<'_, A: ToSocketAddrs>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8013771,"byte_end":8013845,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8013850,"byte_end":8013923,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8013928,"byte_end":8013939,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2912},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8014901,"byte_end":8014905,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8014498,"byte_end":8014596,"line_start":108,"line_end":108,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8014601,"byte_end":8014672,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8014677,"byte_end":8014680,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8014685,"byte_end":8014768,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8014773,"byte_end":8014833,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8014838,"byte_end":8014841,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8014846,"byte_end":8014883,"line_start":114,"line_end":114,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8015632,"byte_end":8015641,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2917},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8016659,"byte_end":8016663,"line_start":154,"line_end":154,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8016019,"byte_end":8016098,"line_start":142,"line_end":142,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8016103,"byte_end":8016187,"line_start":143,"line_end":143,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8016192,"byte_end":8016224,"line_start":144,"line_end":144,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8016229,"byte_end":8016232,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8016237,"byte_end":8016318,"line_start":146,"line_end":146,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8016323,"byte_end":8016406,"line_start":147,"line_end":147,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8016411,"byte_end":8016445,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8016450,"byte_end":8016453,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8016458,"byte_end":8016541,"line_start":150,"line_end":150,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8016546,"byte_end":8016591,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8016596,"byte_end":8016599,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8016604,"byte_end":8016641,"line_start":153,"line_end":153,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8016803,"byte_end":8016812,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2922},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8017531,"byte_end":8017538,"line_start":176,"line_end":176,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<'_, '_, A: ToSocketAddrs>(&'_ mut Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8017240,"byte_end":8017312,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8017317,"byte_end":8017388,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8017393,"byte_end":8017396,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8017401,"byte_end":8017477,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8017482,"byte_end":8017513,"line_start":175,"line_end":175,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8018010,"byte_end":8018022,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], &SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8018861,"byte_end":8018870,"line_start":213,"line_end":213,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8018471,"byte_end":8018550,"line_start":207,"line_end":207,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8018555,"byte_end":8018622,"line_start":208,"line_end":208,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8018627,"byte_end":8018630,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8018635,"byte_end":8018713,"line_start":210,"line_end":210,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8018718,"byte_end":8018796,"line_start":211,"line_end":211,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8018801,"byte_end":8018843,"line_start":212,"line_end":212,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2932},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8019029,"byte_end":8019043,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut [u8])\n-> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2933},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8019745,"byte_end":8019754,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8019528,"byte_end":8019592,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8019597,"byte_end":8019600,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8019605,"byte_end":8019671,"line_start":236,"line_end":236,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8019676,"byte_end":8019679,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8019684,"byte_end":8019733,"line_start":238,"line_end":238,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2934},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020010,"byte_end":8020023,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8019833,"byte_end":8019897,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8019902,"byte_end":8019905,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8019910,"byte_end":8019981,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8019986,"byte_end":8019998,"line_start":246,"line_end":246,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2935},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020362,"byte_end":8020379,"line_start":256,"line_end":256,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020116,"byte_end":8020185,"line_start":251,"line_end":251,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020190,"byte_end":8020193,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020198,"byte_end":8020272,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020277,"byte_end":8020280,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020285,"byte_end":8020350,"line_start":255,"line_end":255,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2936},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020719,"byte_end":8020740,"line_start":267,"line_end":267,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020466,"byte_end":8020535,"line_start":260,"line_end":260,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020540,"byte_end":8020543,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020548,"byte_end":8020622,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020627,"byte_end":8020630,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020635,"byte_end":8020645,"line_start":264,"line_end":264,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020650,"byte_end":8020653,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020658,"byte_end":8020707,"line_start":266,"line_end":266,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2937},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021083,"byte_end":8021099,"line_start":276,"line_end":276,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020841,"byte_end":8020909,"line_start":271,"line_end":271,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020914,"byte_end":8020917,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8020922,"byte_end":8020995,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021000,"byte_end":8021003,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021008,"byte_end":8021071,"line_start":275,"line_end":275,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2938},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021578,"byte_end":8021598,"line_start":289,"line_end":289,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021184,"byte_end":8021252,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021257,"byte_end":8021260,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021265,"byte_end":8021335,"line_start":282,"line_end":282,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021340,"byte_end":8021414,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021419,"byte_end":8021481,"line_start":284,"line_end":284,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021486,"byte_end":8021489,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021494,"byte_end":8021504,"line_start":286,"line_end":286,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021509,"byte_end":8021512,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021517,"byte_end":8021566,"line_start":288,"line_end":288,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2939},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021947,"byte_end":8021964,"line_start":298,"line_end":298,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021699,"byte_end":8021770,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021775,"byte_end":8021778,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021783,"byte_end":8021857,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021862,"byte_end":8021865,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8021870,"byte_end":8021935,"line_start":297,"line_end":297,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2940},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022308,"byte_end":8022329,"line_start":309,"line_end":309,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022051,"byte_end":8022122,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022127,"byte_end":8022130,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022135,"byte_end":8022211,"line_start":304,"line_end":304,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022216,"byte_end":8022219,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022224,"byte_end":8022234,"line_start":306,"line_end":306,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022239,"byte_end":8022242,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022247,"byte_end":8022296,"line_start":308,"line_end":308,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2941},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022623,"byte_end":8022626,"line_start":318,"line_end":318,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022430,"byte_end":8022488,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022493,"byte_end":8022496,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022501,"byte_end":8022561,"line_start":315,"line_end":315,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022566,"byte_end":8022569,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022574,"byte_end":8022611,"line_start":317,"line_end":317,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022883,"byte_end":8022890,"line_start":326,"line_end":326,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022698,"byte_end":8022756,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022761,"byte_end":8022764,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022769,"byte_end":8022845,"line_start":324,"line_end":324,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022850,"byte_end":8022871,"line_start":325,"line_end":325,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2943},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8023408,"byte_end":8023425,"line_start":337,"line_end":337,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8022978,"byte_end":8023036,"line_start":330,"line_end":330,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8023041,"byte_end":8023044,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8023049,"byte_end":8023123,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8023128,"byte_end":8023201,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8023206,"byte_end":8023278,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8023283,"byte_end":8023353,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8023358,"byte_end":8023396,"line_start":336,"line_end":336,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2944},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8023890,"byte_end":8023907,"line_start":346,"line_end":346,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8023574,"byte_end":8023634,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8023639,"byte_end":8023642,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8023647,"byte_end":8023721,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8023726,"byte_end":8023799,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8023804,"byte_end":8023878,"line_start":345,"line_end":345,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8024274,"byte_end":8024292,"line_start":355,"line_end":355,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8024050,"byte_end":8024109,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8024114,"byte_end":8024117,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8024122,"byte_end":8024192,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8024197,"byte_end":8024200,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8024205,"byte_end":8024262,"line_start":354,"line_end":354,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2946},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8024668,"byte_end":8024686,"line_start":364,"line_end":364,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8024442,"byte_end":8024503,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8024508,"byte_end":8024511,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8024516,"byte_end":8024586,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8024591,"byte_end":8024594,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8024599,"byte_end":8024656,"line_start":363,"line_end":363,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3001},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027321,"byte_end":8027329,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027133,"byte_end":8027192,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027193,"byte_end":8027196,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](method@Self::send_to) or [`send`](method@Self::send) to send","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027197,"byte_end":8027277,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ datagrams.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027278,"byte_end":8027292,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3006},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027543,"byte_end":8027551,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027348,"byte_end":8027407,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027408,"byte_end":8027411,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](method@Self::recv_from) or [`recv`](method@Self::recv) to receive","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027412,"byte_end":8027499,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ datagrams.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027500,"byte_end":8027514,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3011},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027893,"byte_end":8027905,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027764,"byte_end":8027841,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ not be `reunite`d.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027842,"byte_end":8027864,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3013},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027906,"byte_end":8027918,"line_start":48,"line_end":48,"column_start":25,"column_end":37},"name":"0","qualname":"::net::udp::split::ReuniteError::0","value":"net::udp::split::SendHalf","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3014},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027920,"byte_end":8027932,"line_start":48,"line_end":48,"column_start":39,"column_end":51},"name":"1","qualname":"::net::udp::split::ReuniteError::1","value":"net::udp::split::RecvHalf","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2971},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8028942,"byte_end":8028949,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"pub fn reunite(Self, SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8028727,"byte_end":8028798,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8028803,"byte_end":8028869,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8028874,"byte_end":8028930,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2972},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8029440,"byte_end":8029449,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8029050,"byte_end":8029129,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8029134,"byte_end":8029201,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8029206,"byte_end":8029209,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8029214,"byte_end":8029292,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8029297,"byte_end":8029375,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8029380,"byte_end":8029422,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2976},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030229,"byte_end":8030233,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8029584,"byte_end":8029663,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8029668,"byte_end":8029752,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8029757,"byte_end":8029789,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8029794,"byte_end":8029797,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8029802,"byte_end":8029883,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8029888,"byte_end":8029971,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8029976,"byte_end":8030010,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030015,"byte_end":8030018,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030023,"byte_end":8030106,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030111,"byte_end":8030156,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030161,"byte_end":8030164,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030169,"byte_end":8030211,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030582,"byte_end":8030589,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"pub fn reunite(Self, RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030367,"byte_end":8030438,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030443,"byte_end":8030509,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030514,"byte_end":8030570,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2982},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030981,"byte_end":8030988,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"pub async fn send_to<'_, '_, '_>(&'_ mut Self, &'_ [u8], &'_ SocketAddr)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030690,"byte_end":8030762,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030767,"byte_end":8030838,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030843,"byte_end":8030846,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030851,"byte_end":8030927,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030932,"byte_end":8030963,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2986},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8031540,"byte_end":8031544,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8031132,"byte_end":8031230,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8031235,"byte_end":8031306,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8031311,"byte_end":8031314,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8031319,"byte_end":8031402,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8031407,"byte_end":8031467,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8031472,"byte_end":8031475,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8031480,"byte_end":8031522,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":93380,"byte_end":93386,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":93317,"byte_end":93370,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":93439,"byte_end":93444,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":93401,"byte_end":93429,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105035,"byte_end":105053,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105055,"byte_end":105102,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105103,"byte_end":105106,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105107,"byte_end":105183,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"! almost always want to import its entire contents, but unlike the standard","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105184,"byte_end":105261,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"! library's prelude you'll have to do so manually:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105262,"byte_end":105314,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105315,"byte_end":105318,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105319,"byte_end":105326,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"! # #![allow(warnings)]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105327,"byte_end":105352,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"! use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105353,"byte_end":105379,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105380,"byte_end":105387,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105388,"byte_end":105391,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\prelude.rs","byte_start":105392,"byte_end":105466,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":3132},{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":683},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":3792},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":3793},{"krate":0,"index":3797},{"krate":0,"index":3799},{"krate":0,"index":3806},{"krate":0,"index":722},{"krate":0,"index":723}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"! The Tokio runtime.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105678,"byte_end":105700,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105701,"byte_end":105704,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Unlike other Rust programs, asynchronous applications require","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105705,"byte_end":105770,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"! runtime support. In particular, the following runtime services are","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105771,"byte_end":105841,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"! necessary:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105842,"byte_end":105856,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105857,"byte_end":105860,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105861,"byte_end":105939,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"!   dispatches I/O events to tasks that depend on them.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105940,"byte_end":105997,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"! * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":105998,"byte_end":106068,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"! * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106069,"byte_end":106141,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106142,"byte_end":106145,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106146,"byte_end":106226,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"! them to be started, shut down, and configured together. However, most","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106227,"byte_end":106300,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"! applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106301,"byte_end":106375,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"! use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106376,"byte_end":106454,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! the hood.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106455,"byte_end":106468,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106469,"byte_end":106472,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106473,"byte_end":106484,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106485,"byte_end":106488,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106489,"byte_end":106556,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106557,"byte_end":106560,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106561,"byte_end":106574,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106575,"byte_end":106607,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106608,"byte_end":106634,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106635,"byte_end":106638,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106639,"byte_end":106657,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106658,"byte_end":106721,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"!     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106722,"byte_end":106792,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106793,"byte_end":106796,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106797,"byte_end":106811,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"!         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106812,"byte_end":106871,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106872,"byte_end":106875,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106876,"byte_end":106913,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"!             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106914,"byte_end":106954,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106955,"byte_end":106958,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"!             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":106959,"byte_end":107039,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"!             loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107040,"byte_end":107062,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"!                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107063,"byte_end":107126,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"!                     // socket closed","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107127,"byte_end":107167,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"!                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107168,"byte_end":107218,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"!                     Ok(n) => n,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107219,"byte_end":107254,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"!                     Err(e) => {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107255,"byte_end":107290,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"!                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107291,"byte_end":107373,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"!                         return;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107374,"byte_end":107409,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107410,"byte_end":107435,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!                 };","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107436,"byte_end":107458,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107459,"byte_end":107462,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"!                 // Write the data back","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107463,"byte_end":107505,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"!                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107506,"byte_end":107578,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"!                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107579,"byte_end":107656,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"!                     return;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107657,"byte_end":107688,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"!                 }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107689,"byte_end":107710,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107711,"byte_end":107728,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107729,"byte_end":107744,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107745,"byte_end":107754,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107755,"byte_end":107760,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107761,"byte_end":107768,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107769,"byte_end":107772,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107773,"byte_end":107851,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"! the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107852,"byte_end":107930,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"! executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107931,"byte_end":107992,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107993,"byte_end":107996,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! A [`Runtime`] instance can also be used directly.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":107997,"byte_end":108050,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108051,"byte_end":108054,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108055,"byte_end":108068,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108069,"byte_end":108101,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108102,"byte_end":108128,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"! use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108129,"byte_end":108161,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108162,"byte_end":108165,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108166,"byte_end":108223,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"!     // Create the runtime","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108224,"byte_end":108253,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"!     let mut rt = Runtime::new()?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108254,"byte_end":108291,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108292,"byte_end":108295,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"!     // Spawn the root task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108296,"byte_end":108326,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"!     rt.block_on(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108327,"byte_end":108354,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"!         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108355,"byte_end":108429,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108430,"byte_end":108433,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"!         loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108434,"byte_end":108452,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"!             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108453,"byte_end":108516,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108517,"byte_end":108520,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"!             tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108521,"byte_end":108562,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"!                 let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108563,"byte_end":108607,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108608,"byte_end":108611,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"!                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108612,"byte_end":108696,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"!                 loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108697,"byte_end":108723,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"!                     let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108724,"byte_end":108791,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"!                         // socket closed","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108792,"byte_end":108836,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"!                         Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108837,"byte_end":108891,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"!                         Ok(n) => n,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108892,"byte_end":108931,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"!                         Err(e) => {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108932,"byte_end":108971,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"!                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":108972,"byte_end":109058,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"!                             return;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109059,"byte_end":109098,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"!                         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109099,"byte_end":109128,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"!                     };","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109129,"byte_end":109155,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109156,"byte_end":109159,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"!                     // Write the data back","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109160,"byte_end":109206,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"!                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109207,"byte_end":109283,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"!                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109284,"byte_end":109365,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"!                         return;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109366,"byte_end":109401,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109402,"byte_end":109427,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"!                 }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109428,"byte_end":109449,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"!             });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109450,"byte_end":109469,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"!         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109470,"byte_end":109483,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"!     })","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109484,"byte_end":109494,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109495,"byte_end":109500,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109501,"byte_end":109508,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109509,"byte_end":109512,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! ## Runtime Configurations","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109513,"byte_end":109542,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109543,"byte_end":109546,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109547,"byte_end":109625,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"! applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109626,"byte_end":109702,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"! used to select which scheduler to use.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109703,"byte_end":109745,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109746,"byte_end":109749,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! #### Basic Scheduler","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109750,"byte_end":109774,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109775,"byte_end":109778,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109779,"byte_end":109858,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"! will be created and executed on the current thread. The basic scheduler","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109859,"byte_end":109934,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"! requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":109935,"byte_end":110005,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"! [`Builder::basic_scheduler`] method:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110006,"byte_end":110046,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110047,"byte_end":110054,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"! use tokio::runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110055,"byte_end":110078,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110079,"byte_end":110082,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110083,"byte_end":110142,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"! let basic_rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110143,"byte_end":110185,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"!     .basic_scheduler()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110186,"byte_end":110212,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"!     .build()?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110213,"byte_end":110231,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"! # Ok(()) }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110232,"byte_end":110246,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110247,"byte_end":110254,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110255,"byte_end":110258,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"! If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110259,"byte_end":110324,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"! [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110325,"byte_end":110395,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110396,"byte_end":110399,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! #### Threaded Scheduler","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110400,"byte_end":110427,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110428,"byte_end":110431,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110432,"byte_end":110503,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"! work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110504,"byte_end":110582,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"! CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110583,"byte_end":110662,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"! for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110663,"byte_end":110747,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"! flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110748,"byte_end":110828,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110829,"byte_end":110836,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"! use tokio::runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110837,"byte_end":110860,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110861,"byte_end":110864,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110865,"byte_end":110924,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"! let threaded_rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110925,"byte_end":110970,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"!     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":110971,"byte_end":111000,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"!     .build()?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111001,"byte_end":111019,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"! # Ok(()) }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111020,"byte_end":111034,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111035,"byte_end":111042,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111043,"byte_end":111046,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111047,"byte_end":111127,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"! threaded scheduler runtime by default.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111128,"byte_end":111170,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111171,"byte_end":111174,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111175,"byte_end":111252,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"! use-cases, such as when running only a single thread is required.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111253,"byte_end":111322,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111323,"byte_end":111326,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"! #### Resource drivers","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111327,"byte_end":111352,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111353,"byte_end":111356,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"! When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111357,"byte_end":111431,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"! default. In this case, attempting to use networking types or time types will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111432,"byte_end":111512,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"! fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111513,"byte_end":111592,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"! This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111593,"byte_end":111672,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"! shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111673,"byte_end":111742,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111743,"byte_end":111746,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! ## Lifetime of spawned threads","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111747,"byte_end":111781,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111782,"byte_end":111785,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"! The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111786,"byte_end":111865,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"! threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111866,"byte_end":111934,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"! `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111935,"byte_end":111997,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":111998,"byte_end":112001,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112002,"byte_end":112080,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"! idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112081,"byte_end":112160,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"! Any tasks that have not yet completed will be dropped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112161,"byte_end":112219,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112220,"byte_end":112223,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"! [tasks]: crate::task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112224,"byte_end":112248,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"! [`Runtime`]: Runtime","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112249,"byte_end":112273,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"! [`tokio::spawn`]: crate::spawn","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112274,"byte_end":112308,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"! [`tokio::main`]: ../attr.main.html","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112309,"byte_end":112347,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"! [runtime builder]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112348,"byte_end":112394,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"! [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112395,"byte_end":112445,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"! [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112446,"byte_end":112520,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"! [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112521,"byte_end":112601,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"! [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112602,"byte_end":112664,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"! [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112665,"byte_end":112731,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"! [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":112732,"byte_end":112796,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3670},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8057359,"byte_end":8057368,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":3671}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8057544,"byte_end":8057553,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"pub fn cancelled() -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8057519,"byte_end":8057532,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8057771,"byte_end":8057776,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"pub fn panic(Box<Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8057746,"byte_end":8057759,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058106,"byte_end":8058118,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058026,"byte_end":8058094,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3321},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058624,"byte_end":8058632,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058245,"byte_end":8058307,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058312,"byte_end":8058315,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058320,"byte_end":8058334,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058339,"byte_end":8058342,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058347,"byte_end":8058354,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058359,"byte_end":8058378,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058383,"byte_end":8058386,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058391,"byte_end":8058409,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058414,"byte_end":8058435,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058440,"byte_end":8058478,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058483,"byte_end":8058510,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058515,"byte_end":8058545,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058550,"byte_end":8058553,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058558,"byte_end":8058590,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058595,"byte_end":8058600,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058605,"byte_end":8058612,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3322},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059539,"byte_end":8059549,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058758,"byte_end":8058837,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058842,"byte_end":8058845,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058850,"byte_end":8058862,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058867,"byte_end":8058870,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058875,"byte_end":8058949,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8058954,"byte_end":8059029,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059034,"byte_end":8059092,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059097,"byte_end":8059100,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059105,"byte_end":8059119,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059124,"byte_end":8059127,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059132,"byte_end":8059151,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059156,"byte_end":8059175,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059180,"byte_end":8059183,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059188,"byte_end":8059206,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059211,"byte_end":8059232,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059237,"byte_end":8059275,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059280,"byte_end":8059307,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059312,"byte_end":8059342,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059347,"byte_end":8059350,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059355,"byte_end":8059382,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059387,"byte_end":8059435,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059440,"byte_end":8059491,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059496,"byte_end":8059505,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059510,"byte_end":8059515,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059520,"byte_end":8059527,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3323},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8060314,"byte_end":8060328,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059690,"byte_end":8059759,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059764,"byte_end":8059836,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059841,"byte_end":8059854,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059859,"byte_end":8059862,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059867,"byte_end":8059881,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059886,"byte_end":8059889,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059894,"byte_end":8059913,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059918,"byte_end":8059937,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059942,"byte_end":8059945,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059950,"byte_end":8059968,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059973,"byte_end":8059994,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8059999,"byte_end":8060037,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8060042,"byte_end":8060069,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8060074,"byte_end":8060104,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8060109,"byte_end":8060112,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8060117,"byte_end":8060167,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8060172,"byte_end":8060220,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8060225,"byte_end":8060266,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8060271,"byte_end":8060280,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8060285,"byte_end":8060290,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8060295,"byte_end":8060302,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3672},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":8076694,"byte_end":8076704,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":3674},{"krate":0,"index":3675}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128991,"byte_end":128998,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128163,"byte_end":128221,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128222,"byte_end":128225,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128226,"byte_end":128298,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128299,"byte_end":128347,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128348,"byte_end":128351,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128352,"byte_end":128417,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128418,"byte_end":128421,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128422,"byte_end":128499,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128500,"byte_end":128513,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128514,"byte_end":128517,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128518,"byte_end":128551,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new`]: method@Self::new","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128552,"byte_end":128590,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128591,"byte_end":128594,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128595,"byte_end":128609,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128610,"byte_end":128613,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128614,"byte_end":128621,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128622,"byte_end":128654,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128655,"byte_end":128658,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128659,"byte_end":128674,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128675,"byte_end":128699,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128700,"byte_end":128736,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128737,"byte_end":128770,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128771,"byte_end":128799,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128800,"byte_end":128842,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128843,"byte_end":128890,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128891,"byte_end":128911,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128912,"byte_end":128934,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128935,"byte_end":128938,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128939,"byte_end":128965,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128966,"byte_end":128971,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":128972,"byte_end":128979,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":130153,"byte_end":130156,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":129979,"byte_end":130051,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":130056,"byte_end":130067,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":130072,"byte_end":130075,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":130080,"byte_end":130141,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131360,"byte_end":131370,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":130846,"byte_end":130884,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":130889,"byte_end":130892,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":130897,"byte_end":130968,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":130973,"byte_end":131049,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131054,"byte_end":131108,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131113,"byte_end":131116,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131121,"byte_end":131135,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131140,"byte_end":131143,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131148,"byte_end":131155,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131160,"byte_end":131183,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131188,"byte_end":131191,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131196,"byte_end":131232,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131237,"byte_end":131266,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131271,"byte_end":131292,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131297,"byte_end":131313,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131318,"byte_end":131336,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131341,"byte_end":131348,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131925,"byte_end":131936,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"pub fn num_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131547,"byte_end":131620,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131625,"byte_end":131703,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131708,"byte_end":131711,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131716,"byte_end":131791,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131796,"byte_end":131831,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131836,"byte_end":131839,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":131844,"byte_end":131913,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132645,"byte_end":132657,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"pub fn core_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132038,"byte_end":132113,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132118,"byte_end":132121,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132126,"byte_end":132203,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132208,"byte_end":132243,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132248,"byte_end":132251,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132256,"byte_end":132325,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132330,"byte_end":132333,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132338,"byte_end":132390,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132395,"byte_end":132398,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132403,"byte_end":132417,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132422,"byte_end":132425,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132430,"byte_end":132437,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132442,"byte_end":132465,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132470,"byte_end":132473,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132478,"byte_end":132514,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132519,"byte_end":132548,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132553,"byte_end":132577,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132582,"byte_end":132598,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132603,"byte_end":132621,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132626,"byte_end":132633,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133536,"byte_end":133547,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"pub fn max_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132818,"byte_end":132874,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132879,"byte_end":132882,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132887,"byte_end":132964,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":132969,"byte_end":133051,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133056,"byte_end":133126,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133131,"byte_end":133134,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133139,"byte_end":133219,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133224,"byte_end":133227,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133232,"byte_end":133261,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133266,"byte_end":133269,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133274,"byte_end":133359,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133364,"byte_end":133367,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133372,"byte_end":133461,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133466,"byte_end":133524,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134071,"byte_end":134082,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133701,"byte_end":133765,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133770,"byte_end":133773,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133778,"byte_end":133825,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133830,"byte_end":133833,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133838,"byte_end":133852,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133857,"byte_end":133860,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133865,"byte_end":133872,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133877,"byte_end":133902,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133907,"byte_end":133910,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133915,"byte_end":133936,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133941,"byte_end":133977,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":133982,"byte_end":134013,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134018,"byte_end":134035,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134040,"byte_end":134047,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134052,"byte_end":134059,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134806,"byte_end":134823,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134196,"byte_end":134250,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134255,"byte_end":134258,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134263,"byte_end":134335,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134340,"byte_end":134373,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134378,"byte_end":134381,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134386,"byte_end":134454,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134459,"byte_end":134520,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134525,"byte_end":134528,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134533,"byte_end":134547,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134552,"byte_end":134555,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134560,"byte_end":134567,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134572,"byte_end":134597,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134602,"byte_end":134605,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134610,"byte_end":134631,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134636,"byte_end":134672,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134677,"byte_end":134706,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134711,"byte_end":134748,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134753,"byte_end":134770,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134775,"byte_end":134782,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134787,"byte_end":134794,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135464,"byte_end":135479,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":134930,"byte_end":135005,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135010,"byte_end":135025,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135030,"byte_end":135033,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135038,"byte_end":135100,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135105,"byte_end":135108,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135113,"byte_end":135127,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135132,"byte_end":135135,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135140,"byte_end":135147,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135152,"byte_end":135177,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135182,"byte_end":135185,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135190,"byte_end":135211,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135216,"byte_end":135257,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135262,"byte_end":135291,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135296,"byte_end":135325,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135330,"byte_end":135369,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135374,"byte_end":135384,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135389,"byte_end":135406,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135411,"byte_end":135418,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135423,"byte_end":135430,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135435,"byte_end":135452,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136130,"byte_end":136144,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135640,"byte_end":135691,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135696,"byte_end":135699,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135704,"byte_end":135766,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135771,"byte_end":135774,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135779,"byte_end":135793,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135798,"byte_end":135801,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135806,"byte_end":135813,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135818,"byte_end":135843,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135848,"byte_end":135851,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135856,"byte_end":135877,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135882,"byte_end":135923,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135928,"byte_end":135957,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135962,"byte_end":135990,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":135995,"byte_end":136035,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136040,"byte_end":136050,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136055,"byte_end":136072,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136077,"byte_end":136084,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136089,"byte_end":136096,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136101,"byte_end":136118,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136690,"byte_end":136695,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136305,"byte_end":136342,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136347,"byte_end":136350,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136355,"byte_end":136418,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136423,"byte_end":136426,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136431,"byte_end":136445,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136450,"byte_end":136453,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136458,"byte_end":136465,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136470,"byte_end":136502,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136507,"byte_end":136510,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136515,"byte_end":136564,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136569,"byte_end":136572,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136577,"byte_end":136600,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136605,"byte_end":136654,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136659,"byte_end":136666,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":136671,"byte_end":136678,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3708},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":138320,"byte_end":138329,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3710},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":138840,"byte_end":138851,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3712},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":139464,"byte_end":139479,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"pub fn basic_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3750},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150461,"byte_end":150467,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":3751},{"krate":0,"index":3752},{"krate":0,"index":3753},{"krate":0,"index":3754},{"krate":0,"index":3755}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150192,"byte_end":150218,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150219,"byte_end":150222,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150223,"byte_end":150311,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150312,"byte_end":150362,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150363,"byte_end":150366,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150367,"byte_end":150425,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152004,"byte_end":152009,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150831,"byte_end":150906,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150911,"byte_end":150989,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150994,"byte_end":151062,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151067,"byte_end":151070,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Runtime::enter`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151075,"byte_end":151133,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151138,"byte_end":151141,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151146,"byte_end":151186,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151191,"byte_end":151238,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151243,"byte_end":151300,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151305,"byte_end":151342,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151347,"byte_end":151350,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151355,"byte_end":151368,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151373,"byte_end":151376,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151381,"byte_end":151388,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151393,"byte_end":151425,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151430,"byte_end":151433,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151438,"byte_end":151480,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `handle.enter` below, this would panic.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151485,"byte_end":151551,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151556,"byte_end":151589,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151594,"byte_end":151626,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151631,"byte_end":151642,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151647,"byte_end":151652,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151657,"byte_end":151660,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151665,"byte_end":151680,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151685,"byte_end":151726,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/     let handle = rt.handle().clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151731,"byte_end":151772,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151777,"byte_end":151780,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151785,"byte_end":151828,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151833,"byte_end":151836,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151841,"byte_end":151916,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/     handle.enter(|| function_that_spawns(s));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151921,"byte_end":151970,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151975,"byte_end":151980,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":151985,"byte_end":151992,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153479,"byte_end":153486,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152127,"byte_end":152191,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152196,"byte_end":152199,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152204,"byte_end":152215,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152220,"byte_end":152223,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152228,"byte_end":152322,"line_start":83,"line_end":83,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152327,"byte_end":152419,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152424,"byte_end":152500,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152505,"byte_end":152508,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152513,"byte_end":152527,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152532,"byte_end":152535,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152540,"byte_end":152622,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152627,"byte_end":152673,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152678,"byte_end":152681,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152686,"byte_end":152693,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152698,"byte_end":152720,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152725,"byte_end":152759,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152764,"byte_end":152780,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152785,"byte_end":152824,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152829,"byte_end":152851,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152856,"byte_end":152887,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152892,"byte_end":152895,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152900,"byte_end":152941,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152946,"byte_end":152981,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":152986,"byte_end":153010,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153015,"byte_end":153071,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153076,"byte_end":153083,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153088,"byte_end":153091,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153096,"byte_end":153114,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153119,"byte_end":153146,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153151,"byte_end":153236,"line_start":108,"line_end":108,"column_start":5,"column_end":90}},{"value":"/     handle.block_on(async { /* ... */ })","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153241,"byte_end":153285,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/     // This next line would cause a panic","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153290,"byte_end":153335,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153340,"byte_end":153383,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153388,"byte_end":153395,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153400,"byte_end":153429,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153434,"byte_end":153443,"line_start":114,"line_end":114,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153448,"byte_end":153455,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153460,"byte_end":153467,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153784,"byte_end":153795,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153591,"byte_end":153651,"line_start":121,"line_end":121,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153656,"byte_end":153659,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153664,"byte_end":153715,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153720,"byte_end":153723,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153728,"byte_end":153772,"line_start":125,"line_end":125,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3761},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":155320,"byte_end":155325,"line_start":170,"line_end":170,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3763},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":159444,"byte_end":159452,"line_start":274,"line_end":274,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime from a synchronous\n context.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":163244,"byte_end":163259,"line_start":357,"line_end":357,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":163164,"byte_end":163232,"line_start":356,"line_end":356,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":3793},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114701,"byte_end":114708,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113684,"byte_end":113706,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113707,"byte_end":113710,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O driver, task scheduler, [timer], and blocking","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113711,"byte_end":113788,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113789,"byte_end":113840,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113841,"byte_end":113844,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113845,"byte_end":113925,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":113926,"byte_end":114011,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114012,"byte_end":114015,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114016,"byte_end":114075,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114076,"byte_end":114079,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114080,"byte_end":114094,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114095,"byte_end":114098,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114099,"byte_end":114178,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114179,"byte_end":114238,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114239,"byte_end":114242,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114243,"byte_end":114281,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114282,"byte_end":114333,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114334,"byte_end":114357,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114358,"byte_end":114361,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114362,"byte_end":114434,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114435,"byte_end":114508,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114509,"byte_end":114532,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114533,"byte_end":114536,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [timer]: crate::time","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114537,"byte_end":114561,"line_start":269,"line_end":269,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114562,"byte_end":114583,"line_start":270,"line_end":270,"column_start":1,"column_end":22}},{"value":"/ [`new`]: method@Self::new","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114584,"byte_end":114613,"line_start":271,"line_end":271,"column_start":1,"column_end":30}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114614,"byte_end":114645,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ [`tokio::run`]: fn@run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":114646,"byte_end":114672,"line_start":273,"line_end":273,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116929,"byte_end":116932,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115522,"byte_end":115590,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115595,"byte_end":115598,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115603,"byte_end":115669,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115674,"byte_end":115747,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115752,"byte_end":115823,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115828,"byte_end":115903,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115908,"byte_end":115946,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115951,"byte_end":115954,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115959,"byte_end":116019,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116024,"byte_end":116098,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116103,"byte_end":116106,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116111,"byte_end":116187,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116192,"byte_end":116268,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116273,"byte_end":116339,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116344,"byte_end":116347,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116352,"byte_end":116411,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116416,"byte_end":116419,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116424,"byte_end":116438,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116443,"byte_end":116446,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116451,"byte_end":116514,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116519,"byte_end":116522,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116527,"byte_end":116534,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116539,"byte_end":116571,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116576,"byte_end":116579,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116584,"byte_end":116611,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116616,"byte_end":116634,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116639,"byte_end":116642,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116647,"byte_end":116672,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116677,"byte_end":116684,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116689,"byte_end":116692,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116697,"byte_end":116718,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ [main]: ../attr.main.html","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116723,"byte_end":116752,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116757,"byte_end":116812,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116817,"byte_end":116866,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":116871,"byte_end":116917,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118522,"byte_end":118527,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117342,"byte_end":117384,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117389,"byte_end":117392,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117397,"byte_end":117468,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117473,"byte_end":117548,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117553,"byte_end":117576,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117581,"byte_end":117584,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117589,"byte_end":117648,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117653,"byte_end":117656,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117661,"byte_end":117682,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117687,"byte_end":117690,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117695,"byte_end":117709,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117714,"byte_end":117717,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117722,"byte_end":117729,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117734,"byte_end":117766,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117771,"byte_end":117774,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117779,"byte_end":117795,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117800,"byte_end":117825,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117830,"byte_end":117867,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117872,"byte_end":117875,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117880,"byte_end":117918,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117923,"byte_end":117943,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":117948,"byte_end":117999,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118004,"byte_end":118011,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118016,"byte_end":118023,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118028,"byte_end":118035,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118040,"byte_end":118043,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118048,"byte_end":118060,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118065,"byte_end":118068,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function will not panic unless task execution is disabled on the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118073,"byte_end":118146,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ executor. This can only happen if the runtime was built using","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118151,"byte_end":118216,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ [`Builder`] without picking either [`basic_scheduler`] or","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118221,"byte_end":118282,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`threaded_scheduler`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118287,"byte_end":118314,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118319,"byte_end":118322,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118327,"byte_end":118358,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ [`threaded_scheduler`]: fn@Builder::threaded_scheduler","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118363,"byte_end":118421,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ [`basic_scheduler`]: fn@Builder::basic_scheduler","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118426,"byte_end":118478,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118483,"byte_end":118510,"line_start":390,"line_end":390,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120148,"byte_end":120156,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&mut Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":118929,"byte_end":119003,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119008,"byte_end":119024,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119029,"byte_end":119032,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119037,"byte_end":119104,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119109,"byte_end":119182,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119187,"byte_end":119252,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119257,"byte_end":119260,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `&mut` is required as calling `block_on` **may** result in advancing the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119265,"byte_end":119341,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ state of the runtime. The details depend on how the runtime is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119346,"byte_end":119412,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ configured. [`runtime::Handle::block_on`][handle] provides a version","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119417,"byte_end":119489,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ that takes `&self`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119494,"byte_end":119517,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119522,"byte_end":119525,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method may not be called from an asynchronous context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119530,"byte_end":119593,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119598,"byte_end":119601,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119606,"byte_end":119618,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119623,"byte_end":119626,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, or if called within an","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119631,"byte_end":119709,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ asynchronous execution context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119714,"byte_end":119749,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119754,"byte_end":119757,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119762,"byte_end":119776,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119781,"byte_end":119784,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119789,"byte_end":119802,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119807,"byte_end":119839,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119844,"byte_end":119847,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119852,"byte_end":119877,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119882,"byte_end":119923,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119928,"byte_end":119931,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":119936,"byte_end":120007,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ rt.block_on(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120012,"byte_end":120035,"line_start":432,"line_end":432,"column_start":5,"column_end":28}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120040,"byte_end":120066,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120071,"byte_end":120078,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120083,"byte_end":120090,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120095,"byte_end":120098,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [handle]: fn@Handle::block_on","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120103,"byte_end":120136,"line_start":437,"line_end":437,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121678,"byte_end":121683,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120562,"byte_end":120637,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120642,"byte_end":120720,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120725,"byte_end":120793,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120798,"byte_end":120801,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Handle::enter`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120806,"byte_end":120863,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120868,"byte_end":120871,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120876,"byte_end":120916,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120921,"byte_end":120968,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ [`Handle::enter`]: fn@crate::runtime::Handle::enter","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":120973,"byte_end":121028,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121033,"byte_end":121070,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121075,"byte_end":121078,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121083,"byte_end":121096,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121101,"byte_end":121104,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121109,"byte_end":121116,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121121,"byte_end":121153,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121158,"byte_end":121161,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121166,"byte_end":121208,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `rt.enter` below, this would panic.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121213,"byte_end":121275,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121280,"byte_end":121313,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121318,"byte_end":121350,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121355,"byte_end":121366,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121371,"byte_end":121376,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121381,"byte_end":121384,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121389,"byte_end":121404,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121409,"byte_end":121450,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121455,"byte_end":121458,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121463,"byte_end":121506,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121511,"byte_end":121514,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121519,"byte_end":121594,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/     rt.enter(|| function_that_spawns(s));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121599,"byte_end":121644,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121649,"byte_end":121654,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121659,"byte_end":121666,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122270,"byte_end":122276,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121790,"byte_end":121835,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121840,"byte_end":121843,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121848,"byte_end":121932,"line_start":491,"line_end":491,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":121937,"byte_end":121997,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122002,"byte_end":122005,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122010,"byte_end":122024,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122029,"byte_end":122032,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122037,"byte_end":122044,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122049,"byte_end":122081,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122086,"byte_end":122089,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122094,"byte_end":122121,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122126,"byte_end":122144,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122149,"byte_end":122152,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122157,"byte_end":122186,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122191,"byte_end":122194,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122199,"byte_end":122246,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122251,"byte_end":122258,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123684,"byte_end":123700,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122329,"byte_end":122401,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122406,"byte_end":122427,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122432,"byte_end":122435,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122440,"byte_end":122515,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122520,"byte_end":122593,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122598,"byte_end":122675,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned, which can block dropping `Runtime`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122680,"byte_end":122751,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122756,"byte_end":122759,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122764,"byte_end":122838,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122843,"byte_end":122917,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":122922,"byte_end":122997,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123002,"byte_end":123078,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123083,"byte_end":123128,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123133,"byte_end":123136,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123141,"byte_end":123155,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123160,"byte_end":123163,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123168,"byte_end":123175,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123180,"byte_end":123212,"line_start":527,"line_end":527,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123217,"byte_end":123237,"line_start":528,"line_end":528,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123242,"byte_end":123245,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123250,"byte_end":123270,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123275,"byte_end":123303,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123308,"byte_end":123311,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123316,"byte_end":123331,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123336,"byte_end":123385,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123390,"byte_end":123393,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123398,"byte_end":123434,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123439,"byte_end":123480,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123485,"byte_end":123543,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123548,"byte_end":123562,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123567,"byte_end":123577,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123582,"byte_end":123585,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123590,"byte_end":123650,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123655,"byte_end":123660,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123665,"byte_end":123672,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124980,"byte_end":124999,"line_start":578,"line_end":578,"column_start":12,"column_end":31},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, without waiting for any spawned tasks to shutdown.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123862,"byte_end":123938,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123943,"byte_end":123946,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This can be useful if you want to drop a runtime from within another runtime.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":123951,"byte_end":124032,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ Normally, dropping a runtime will block indefinitely for spawned blocking tasks","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124037,"byte_end":124120,"line_start":555,"line_end":555,"column_start":5,"column_end":88}},{"value":"/ to complete, which would normally not be permitted within an asynchronous context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124125,"byte_end":124211,"line_start":556,"line_end":556,"column_start":5,"column_end":91}},{"value":"/ By calling `shutdown_background()`, you can drop the runtime from such a context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124216,"byte_end":124301,"line_start":557,"line_end":557,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124306,"byte_end":124309,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ Note however, that because we do not wait for any blocking tasks to complete, this","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124314,"byte_end":124400,"line_start":559,"line_end":559,"column_start":5,"column_end":91}},{"value":"/ may result in a resource leak (in that any blocking tasks are still running until they","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124405,"byte_end":124495,"line_start":560,"line_end":560,"column_start":5,"column_end":95}},{"value":"/ return.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124500,"byte_end":124511,"line_start":561,"line_end":561,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124516,"byte_end":124519,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `shutdown_timeout(Duration::of_nanos(0))`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124524,"byte_end":124609,"line_start":563,"line_end":563,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124614,"byte_end":124617,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124622,"byte_end":124629,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124634,"byte_end":124666,"line_start":566,"line_end":566,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124671,"byte_end":124674,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124679,"byte_end":124694,"line_start":568,"line_end":568,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124699,"byte_end":124748,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124753,"byte_end":124756,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124761,"byte_end":124797,"line_start":571,"line_end":571,"column_start":5,"column_end":41}},{"value":"/        let inner_runtime = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124802,"byte_end":124857,"line_start":572,"line_end":572,"column_start":5,"column_end":60}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124862,"byte_end":124879,"line_start":573,"line_end":573,"column_start":5,"column_end":22}},{"value":"/        inner_runtime.shutdown_background();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124884,"byte_end":124931,"line_start":574,"line_end":574,"column_start":5,"column_end":52}},{"value":"/    });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124936,"byte_end":124946,"line_start":575,"line_end":575,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124951,"byte_end":124956,"line_start":576,"line_end":576,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":124961,"byte_end":124968,"line_start":577,"line_end":577,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":3836},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","parent":null,"children":[{"krate":0,"index":3837},{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3892},{"krate":0,"index":3896}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":20815,"byte_end":20841,"line_start":210,"line_end":210,"column_start":13,"column_end":39}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":20916,"byte_end":20933,"line_start":212,"line_end":212,"column_start":13,"column_end":30}},{"value":"! Asynchronous signal handling for Tokio","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098264,"byte_end":8098306,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098307,"byte_end":8098310,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098311,"byte_end":8098388,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098389,"byte_end":8098467,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098468,"byte_end":8098548,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"! to see if it's suitable.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098549,"byte_end":8098577,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098578,"byte_end":8098581,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! The are some fundamental limitations of this crate documented on the OS","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098582,"byte_end":8098657,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"! specific structures, as well.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098658,"byte_end":8098691,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098692,"byte_end":8098695,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098696,"byte_end":8098710,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098711,"byte_end":8098714,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Print on \"ctrl-c\" notification.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098715,"byte_end":8098750,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098751,"byte_end":8098754,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098755,"byte_end":8098773,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"! use tokio::signal;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098774,"byte_end":8098796,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098797,"byte_end":8098800,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098801,"byte_end":8098819,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098820,"byte_end":8098883,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"!     signal::ctrl_c().await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098884,"byte_end":8098916,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"!     println!(\"ctrl-c received!\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098917,"byte_end":8098954,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"!     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098955,"byte_end":8098969,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098970,"byte_end":8098975,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098976,"byte_end":8098983,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098984,"byte_end":8098987,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Wait for SIGHUP on Unix","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8098988,"byte_end":8099015,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099016,"byte_end":8099019,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099020,"byte_end":8099038,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"! # #[cfg(unix)] {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099039,"byte_end":8099059,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"! use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099060,"byte_end":8099110,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099111,"byte_end":8099114,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099115,"byte_end":8099133,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099134,"byte_end":8099197,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"!     // An infinite stream of hangup signals.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099198,"byte_end":8099246,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"!     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099247,"byte_end":8099302,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099303,"byte_end":8099306,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"!     // Print whenever a HUP signal is received","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099307,"byte_end":8099357,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"!     loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099358,"byte_end":8099372,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"!         stream.recv().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099373,"byte_end":8099405,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"!         println!(\"got signal HUP\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099406,"byte_end":8099445,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"!     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099446,"byte_end":8099455,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099456,"byte_end":8099461,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099462,"byte_end":8099469,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099470,"byte_end":8099477,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3841},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101553,"byte_end":8101559,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"pub async fn ctrl_c() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8099851,"byte_end":8099917,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8099918,"byte_end":8099921,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8099922,"byte_end":8099999,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100000,"byte_end":8100078,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100079,"byte_end":8100128,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100129,"byte_end":8100132,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener is registered. The future","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100133,"byte_end":8100209,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ will complete on the first received `ctrl-c` **after** the initial call to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100210,"byte_end":8100288,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ either `Future::poll` or `.await`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100289,"byte_end":8100327,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100328,"byte_end":8100331,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100332,"byte_end":8100345,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100346,"byte_end":8100349,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100350,"byte_end":8100432,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100433,"byte_end":8100513,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100514,"byte_end":8100595,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100596,"byte_end":8100621,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100622,"byte_end":8100625,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100626,"byte_end":8100699,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100700,"byte_end":8100772,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100773,"byte_end":8100851,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100852,"byte_end":8100929,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8100930,"byte_end":8101006,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101007,"byte_end":8101086,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101087,"byte_end":8101111,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101112,"byte_end":8101115,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101116,"byte_end":8101194,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101195,"byte_end":8101255,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101256,"byte_end":8101259,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101260,"byte_end":8101274,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101275,"byte_end":8101278,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101279,"byte_end":8101297,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101298,"byte_end":8101320,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101321,"byte_end":8101324,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101325,"byte_end":8101343,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101344,"byte_end":8101365,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101366,"byte_end":8101405,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101406,"byte_end":8101409,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101410,"byte_end":8101478,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101479,"byte_end":8101482,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101483,"byte_end":8101525,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101526,"byte_end":8101531,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\ctrl_c.rs","byte_start":8101532,"byte_end":8101539,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3896},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"windows","qualname":"::signal::windows","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","parent":null,"children":[{"krate":0,"index":3897},{"krate":0,"index":3898},{"krate":0,"index":3899},{"krate":0,"index":3900},{"krate":0,"index":3901},{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3959},{"krate":0,"index":3962},{"krate":0,"index":3915},{"krate":0,"index":3917},{"krate":0,"index":3964},{"krate":0,"index":3965},{"krate":0,"index":3922},{"krate":0,"index":3967},{"krate":0,"index":3969},{"krate":0,"index":3924},{"krate":0,"index":3925},{"krate":0,"index":3932},{"krate":0,"index":3936},{"krate":0,"index":3971},{"krate":0,"index":3973},{"krate":0,"index":3937},{"krate":0,"index":3975},{"krate":0,"index":3944}],"decl_id":null,"docs":" Windows-specific types for signal handling.","sig":null,"attributes":[{"value":"! Windows-specific types for signal handling.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8127629,"byte_end":8127676,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8127677,"byte_end":8127680,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only defined on Windows and contains the primary `Event` type","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8127681,"byte_end":8127761,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! for receiving notifications of events. These events are listened for via the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8127762,"byte_end":8127842,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"! `SetConsoleCtrlHandler` function which receives events of the type","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8127843,"byte_end":8127913,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"! `CTRL_C_EVENT` and `CTRL_BREAK_EVENT`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8127914,"byte_end":8127955,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8127957,"byte_end":8127973,"line_start":8,"line_end":8,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":3971},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8131922,"byte_end":8131931,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"CtrlBreak","qualname":"::signal::windows::CtrlBreak","value":"CtrlBreak {  }","parent":null,"children":[{"krate":0,"index":3972}],"decl_id":null,"docs":" Represents a stream which receives \"ctrl-break\" notifications sent to the process\n via `SetConsoleCtrlHandler`.","sig":null,"attributes":[{"value":"/ Represents a stream which receives \"ctrl-break\" notifications sent to the process","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8131404,"byte_end":8131489,"line_start":138,"line_end":138,"column_start":1,"column_end":86}},{"value":"/ via `SetConsoleCtrlHandler`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8131490,"byte_end":8131522,"line_start":139,"line_end":139,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8131523,"byte_end":8131526,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ A notification to this process notifies *all* streams listening for","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8131527,"byte_end":8131598,"line_start":141,"line_end":141,"column_start":1,"column_end":72}},{"value":"/ this event. Moreover, the notifications **are coalesced** if they aren't processed","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8131599,"byte_end":8131685,"line_start":142,"line_end":142,"column_start":1,"column_end":87}},{"value":"/ quickly enough. This means that if two notifications are received back-to-back,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8131686,"byte_end":8131769,"line_start":143,"line_end":143,"column_start":1,"column_end":84}},{"value":"/ then the stream may only receive one item about the two notifications.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8131770,"byte_end":8131844,"line_start":144,"line_end":144,"column_start":1,"column_end":75}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8131845,"byte_end":8131893,"line_start":145,"line_end":145,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3938},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132644,"byte_end":8132648,"line_start":173,"line_end":173,"column_start":18,"column_end":22},"name":"recv","qualname":"<CtrlBreak>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8131976,"byte_end":8132024,"line_start":152,"line_end":152,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132029,"byte_end":8132032,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132037,"byte_end":8132109,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132114,"byte_end":8132117,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132122,"byte_end":8132136,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132141,"byte_end":8132144,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132149,"byte_end":8132167,"line_start":158,"line_end":158,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::windows::ctrl_break;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132172,"byte_end":8132215,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132220,"byte_end":8132223,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132228,"byte_end":8132246,"line_start":161,"line_end":161,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132251,"byte_end":8132314,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of CTRL-BREAK events.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132319,"byte_end":8132370,"line_start":163,"line_end":163,"column_start":5,"column_end":56}},{"value":"/     let mut stream = ctrl_break()?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132375,"byte_end":8132414,"line_start":164,"line_end":164,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132419,"byte_end":8132422,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a CTRL-BREAK event is received","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132427,"byte_end":8132483,"line_start":166,"line_end":166,"column_start":5,"column_end":61}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132488,"byte_end":8132502,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132507,"byte_end":8132539,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal CTRL-BREAK\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132544,"byte_end":8132590,"line_start":169,"line_end":169,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132595,"byte_end":8132604,"line_start":170,"line_end":170,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132609,"byte_end":8132614,"line_start":171,"line_end":171,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132619,"byte_end":8132626,"line_start":172,"line_end":172,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3943},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133614,"byte_end":8133623,"line_start":206,"line_end":206,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<CtrlBreak>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132770,"byte_end":8132840,"line_start":178,"line_end":178,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132845,"byte_end":8132865,"line_start":179,"line_end":179,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132870,"byte_end":8132873,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132878,"byte_end":8132950,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132955,"byte_end":8132958,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132963,"byte_end":8132977,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132982,"byte_end":8132985,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8132990,"byte_end":8133036,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133041,"byte_end":8133044,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133049,"byte_end":8133067,"line_start":187,"line_end":187,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133072,"byte_end":8133094,"line_start":188,"line_end":188,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133099,"byte_end":8133127,"line_start":189,"line_end":189,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133132,"byte_end":8133167,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::windows::CtrlBreak;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133172,"byte_end":8133214,"line_start":191,"line_end":191,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133219,"byte_end":8133222,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133227,"byte_end":8133248,"line_start":193,"line_end":193,"column_start":5,"column_end":26}},{"value":"/     ctrl_break: CtrlBreak,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133253,"byte_end":8133283,"line_start":194,"line_end":194,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133288,"byte_end":8133293,"line_start":195,"line_end":195,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133298,"byte_end":8133301,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133306,"byte_end":8133336,"line_start":197,"line_end":197,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133341,"byte_end":8133374,"line_start":198,"line_end":198,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133379,"byte_end":8133382,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133387,"byte_end":8133474,"line_start":200,"line_end":200,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133479,"byte_end":8133520,"line_start":201,"line_end":201,"column_start":5,"column_end":46}},{"value":"/         self.ctrl_break.poll_recv(cx)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133525,"byte_end":8133566,"line_start":202,"line_end":202,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133571,"byte_end":8133580,"line_start":203,"line_end":203,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133585,"byte_end":8133590,"line_start":204,"line_end":204,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133595,"byte_end":8133602,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3944},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134505,"byte_end":8134515,"line_start":241,"line_end":241,"column_start":8,"column_end":18},"name":"ctrl_break","qualname":"::signal::windows::ctrl_break","value":"pub fn ctrl_break() -> io::Result<CtrlBreak>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which receives \"ctrl-break\" notifications sent to the\n process.","sig":null,"attributes":[{"value":"/ Creates a new stream which receives \"ctrl-break\" notifications sent to the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133961,"byte_end":8134039,"line_start":221,"line_end":221,"column_start":1,"column_end":79}},{"value":"/ process.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134040,"byte_end":8134052,"line_start":222,"line_end":222,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134053,"byte_end":8134056,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134057,"byte_end":8134071,"line_start":224,"line_end":224,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134072,"byte_end":8134075,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134076,"byte_end":8134094,"line_start":226,"line_end":226,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::windows::ctrl_break;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134095,"byte_end":8134138,"line_start":227,"line_end":227,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134139,"byte_end":8134142,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134143,"byte_end":8134161,"line_start":229,"line_end":229,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134162,"byte_end":8134225,"line_start":230,"line_end":230,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of CTRL-BREAK events.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134226,"byte_end":8134277,"line_start":231,"line_end":231,"column_start":1,"column_end":52}},{"value":"/     let mut stream = ctrl_break()?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134278,"byte_end":8134317,"line_start":232,"line_end":232,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134318,"byte_end":8134321,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a CTRL-BREAK event is received","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134322,"byte_end":8134378,"line_start":234,"line_end":234,"column_start":1,"column_end":57}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134379,"byte_end":8134393,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134394,"byte_end":8134426,"line_start":236,"line_end":236,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal CTRL-BREAK\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134427,"byte_end":8134473,"line_start":237,"line_end":237,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134474,"byte_end":8134483,"line_start":238,"line_end":238,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134484,"byte_end":8134489,"line_start":239,"line_end":239,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8134490,"byte_end":8134497,"line_start":240,"line_end":240,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3978},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":3979},{"krate":0,"index":3999},{"krate":0,"index":4000},{"krate":0,"index":4020},{"krate":0,"index":4021},{"krate":0,"index":4041},{"krate":0,"index":4042},{"krate":0,"index":4133},{"krate":0,"index":4134},{"krate":0,"index":4135},{"krate":0,"index":4155},{"krate":0,"index":4156},{"krate":0,"index":4157},{"krate":0,"index":4158},{"krate":0,"index":4180},{"krate":0,"index":4181},{"krate":0,"index":4204},{"krate":0,"index":4205},{"krate":0,"index":4224},{"krate":0,"index":4225},{"krate":0,"index":4240},{"krate":0,"index":4241},{"krate":0,"index":4256},{"krate":0,"index":4257},{"krate":0,"index":4258},{"krate":0,"index":4259},{"krate":0,"index":4284},{"krate":0,"index":4285},{"krate":0,"index":4308},{"krate":0,"index":4309},{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":4346},{"krate":0,"index":4347},{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4369},{"krate":0,"index":4370},{"krate":0,"index":4371},{"krate":0,"index":4372},{"krate":0,"index":4414},{"krate":0,"index":4415},{"krate":0,"index":4435},{"krate":0,"index":4436},{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4480},{"krate":0,"index":4481},{"krate":0,"index":4502},{"krate":0,"index":4503},{"krate":0,"index":4527},{"krate":0,"index":4642},{"krate":0,"index":4665},{"krate":0,"index":4666},{"krate":0,"index":4528},{"krate":0,"index":4529},{"krate":0,"index":4563},{"krate":0,"index":4565}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21047,"byte_end":21073,"line_start":221,"line_end":221,"column_start":13,"column_end":39}},{"value":"! Stream utilities for Tokio.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8136036,"byte_end":8136067,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8136068,"byte_end":8136071,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! A `Stream` is an asynchronous sequence of values. It can be thought of as an asynchronous version of the standard library's `Iterator` trait.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8136072,"byte_end":8136217,"line_start":3,"line_end":3,"column_start":1,"column_end":146}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8136218,"byte_end":8136221,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module provides helpers to work with them.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8136222,"byte_end":8136273,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4566},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":8161954,"byte_end":8161963,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":4570},{"krate":0,"index":4571}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`all`](super::StreamExt::all) method.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":8161800,"byte_end":8161857,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":8161875,"byte_end":8161942,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4577},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":8163117,"byte_end":8163126,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":4581},{"krate":0,"index":4582}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`any`](super::StreamExt::any) method.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":8162963,"byte_end":8163020,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":8163038,"byte_end":8163105,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8268},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\chain.rs","byte_start":8164246,"byte_end":8164251,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":8271},{"krate":0,"index":8272}],"decl_id":null,"docs":" Stream returned by the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8247},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8165484,"byte_end":8165491,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":8250},{"krate":0,"index":8251}],"decl_id":null,"docs":" Future returned by the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":7558384,"byte_end":7558393,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":4056},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8166056,"byte_end":8166066,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::collect::FromStream","value":"FromStream<T>: sealed::FromStreamPriv<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert from a [`Stream`](crate::stream::Stream).","sig":null,"attributes":[{"value":"/ Convert from a [`Stream`](crate::stream::Stream).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8165643,"byte_end":8165696,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8165697,"byte_end":8165700,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is not intended to be used directly. Instead, call","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8165701,"byte_end":8165766,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`StreamExt::collect()`](super::StreamExt::collect).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8165767,"byte_end":8165823,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8165824,"byte_end":8165827,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8165828,"byte_end":8165846,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8165847,"byte_end":8165850,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait may not be implemented by third parties. The trait is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8165851,"byte_end":8165930,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ sealed in order to make changes in the future. Stabilization is pending","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8165931,"byte_end":8166006,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8166007,"byte_end":8166045,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":4127},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8170967,"byte_end":8170981,"line_start":231,"line_end":231,"column_start":15,"column_end":29},"name":"FromStreamPriv","qualname":"::stream::collect::sealed::FromStreamPriv","value":"FromStreamPriv<T>","parent":null,"children":[{"krate":0,"index":4129},{"krate":0,"index":4130},{"krate":0,"index":4131},{"krate":0,"index":4132}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4129},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8171061,"byte_end":8171071,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"Collection","qualname":"::stream::collect::sealed::FromStreamPriv::Collection","value":"type Collection;","parent":{"krate":0,"index":4127},"children":[],"decl_id":null,"docs":" Intermediate type used during collection process\n","sig":null,"attributes":[{"value":"/ Intermediate type used during collection process","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8170995,"byte_end":8171047,"line_start":232,"line_end":232,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4130},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8171123,"byte_end":8171133,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"initialize","qualname":"::stream::collect::sealed::FromStreamPriv::initialize","value":"pub fn initialize(usize, Option<usize>) -> Self::Collection","parent":{"krate":0,"index":4127},"children":[],"decl_id":null,"docs":" Initialize the collection\n","sig":null,"attributes":[{"value":"/ Initialize the collection","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8171082,"byte_end":8171111,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4131},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8171350,"byte_end":8171356,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"extend","qualname":"::stream::collect::sealed::FromStreamPriv::extend","value":"pub fn extend(&mut Self::Collection, T) -> bool","parent":{"krate":0,"index":4127},"children":[],"decl_id":null,"docs":" Extend the collection with the received item","sig":null,"attributes":[{"value":"/ Extend the collection with the received item","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8171200,"byte_end":8171248,"line_start":238,"line_end":238,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8171257,"byte_end":8171260,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ Return `true` to continue streaming, `false` complete collection.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8171269,"byte_end":8171338,"line_start":240,"line_end":240,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4132},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8171472,"byte_end":8171480,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"finalize","qualname":"::stream::collect::sealed::FromStreamPriv::finalize","value":"pub fn finalize(&mut Self::Collection) -> Self","parent":{"krate":0,"index":4127},"children":[],"decl_id":null,"docs":" Finalize collection into target type.\n","sig":null,"attributes":[{"value":"/ Finalize collection into target type.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8171419,"byte_end":8171460,"line_start":243,"line_end":243,"column_start":9,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":4588},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8171773,"byte_end":8171778,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`empty`](fn@empty) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`](fn@empty) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8171647,"byte_end":8171695,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8171713,"byte_end":8171761,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4148},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172368,"byte_end":8172373,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"name":"empty","qualname":"::stream::empty::empty","value":"pub const fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields nothing.","sig":null,"attributes":[{"value":"/ Creates a stream that yields nothing.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8171903,"byte_end":8171944,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8171945,"byte_end":8171948,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and returns `None`. Use","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8171949,"byte_end":8172017,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`stream::pending()`](super::pending()) to obtain a stream that is never","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172018,"byte_end":8172094,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172095,"byte_end":8172105,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172106,"byte_end":8172109,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172110,"byte_end":8172124,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172125,"byte_end":8172128,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172129,"byte_end":8172145,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172146,"byte_end":8172149,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172150,"byte_end":8172157,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172158,"byte_end":8172199,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172200,"byte_end":8172203,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172204,"byte_end":8172222,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172223,"byte_end":8172244,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let mut none = stream::empty::<i32>();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172245,"byte_end":8172291,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172292,"byte_end":8172295,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(None, none.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172296,"byte_end":8172340,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172341,"byte_end":8172346,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172347,"byte_end":8172354,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8174},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter.rs","byte_start":8172956,"byte_end":8172962,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":8177},{"krate":0,"index":8178}],"decl_id":null,"docs":" Stream returned by the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":7558384,"byte_end":7558393,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8129},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter_map.rs","byte_start":8174394,"byte_end":8174403,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":8132},{"krate":0,"index":8133}],"decl_id":null,"docs":" Stream returned by the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":7558384,"byte_end":7558393,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8101},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fold.rs","byte_start":8175820,"byte_end":8175830,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":8105},{"krate":0,"index":8106},{"krate":0,"index":8107}],"decl_id":null,"docs":" Future returned by the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8053},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fuse.rs","byte_start":8176986,"byte_end":8176990,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":8055}],"decl_id":null,"docs":" Stream returned by [`fuse()`][super::StreamExt::fuse].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4595},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178122,"byte_end":8178126,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4597}],"decl_id":null,"docs":" Stream for the [`iter`](fn@iter) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`](fn@iter) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8177998,"byte_end":8178044,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178062,"byte_end":8178110,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4249},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178700,"byte_end":8178704,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178178,"byte_end":8178242,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178243,"byte_end":8178271,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178272,"byte_end":8178275,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178276,"byte_end":8178349,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178350,"byte_end":8178405,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178406,"byte_end":8178409,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178410,"byte_end":8178417,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178418,"byte_end":8178440,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178441,"byte_end":8178482,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178483,"byte_end":8178486,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178487,"byte_end":8178535,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178536,"byte_end":8178539,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178540,"byte_end":8178586,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178587,"byte_end":8178633,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178634,"byte_end":8178676,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178677,"byte_end":8178684,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178685,"byte_end":8178692,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7986},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\map.rs","byte_start":8179484,"byte_end":8179487,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7989},{"krate":0,"index":7990}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":7558384,"byte_end":7558393,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7937},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\merge.rs","byte_start":8180557,"byte_end":8180562,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":7940},{"krate":0,"index":7941},{"krate":0,"index":7942}],"decl_id":null,"docs":" Stream returned by the [`merge`](super::StreamExt::merge) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4601},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":8182437,"byte_end":8182441,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":4604}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":8182281,"byte_end":8182340,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":8182358,"byte_end":8182425,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4609},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183137,"byte_end":8183141,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":4611}],"decl_id":null,"docs":" Stream for the [`once`](fn@once) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`once`](fn@once) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183013,"byte_end":8183059,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183077,"byte_end":8183125,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4339},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183713,"byte_end":8183717,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that emits an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a stream that emits an element exactly once.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183217,"byte_end":8183273,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183274,"byte_end":8183277,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and emits the provided value once.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183278,"byte_end":8183357,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183358,"byte_end":8183361,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183362,"byte_end":8183376,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183377,"byte_end":8183380,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183381,"byte_end":8183388,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183389,"byte_end":8183430,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183431,"byte_end":8183434,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183435,"byte_end":8183453,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183454,"byte_end":8183475,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     // one is the loneliest number","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183476,"byte_end":8183514,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/     let mut one = stream::once(1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183515,"byte_end":8183553,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183554,"byte_end":8183557,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(Some(1), one.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183558,"byte_end":8183604,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183605,"byte_end":8183608,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // just one, that's all we get","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183609,"byte_end":8183647,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(None, one.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183648,"byte_end":8183691,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183692,"byte_end":8183697,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183698,"byte_end":8183705,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4615},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184340,"byte_end":8184347,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`pending`](fn@pending) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending`](fn@pending) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184210,"byte_end":8184262,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184280,"byte_end":8184328,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4362},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8185087,"byte_end":8185094,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"name":"pending","qualname":"::stream::pending::pending","value":"pub const fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that is never ready","sig":null,"attributes":[{"value":"/ Creates a stream that is never ready","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184478,"byte_end":8184518,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184519,"byte_end":8184522,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is never ready. Attempting to call","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184523,"byte_end":8184581,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`next()`](crate::stream::StreamExt::next) will never complete. Use","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184582,"byte_end":8184653,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`stream::empty()`](super::empty()) to obtain a stream that is is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184654,"byte_end":8184723,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ immediately empty but returns no values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184724,"byte_end":8184768,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184769,"byte_end":8184772,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184773,"byte_end":8184787,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184788,"byte_end":8184791,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184792,"byte_end":8184808,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184809,"byte_end":8184812,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184813,"byte_end":8184826,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184827,"byte_end":8184868,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184869,"byte_end":8184872,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184873,"byte_end":8184891,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184892,"byte_end":8184913,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut never = stream::pending::<i32>();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184914,"byte_end":8184963,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184964,"byte_end":8184967,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // This will never complete","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184968,"byte_end":8185003,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/     never.next().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8185004,"byte_end":8185031,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8185032,"byte_end":8185035,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     unreachable!();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8185036,"byte_end":8185059,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8185060,"byte_end":8185065,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8185066,"byte_end":8185073,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4622},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190743,"byte_end":8190752,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::stream::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":4625}],"decl_id":null,"docs":" Combine many streams into one, indexing each source stream with a unique\n key.","sig":null,"attributes":[{"value":"/ Combine many streams into one, indexing each source stream with a unique","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8185511,"byte_end":8185587,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ key.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8185588,"byte_end":8185596,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8185597,"byte_end":8185600,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is similar to [`StreamExt::merge`] in that it combines source","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8185601,"byte_end":8185678,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ streams into a single merged stream that yields values in the order that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8185679,"byte_end":8185755,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ they arrive from the source streams. However, `StreamMap` has a lot more","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8185756,"byte_end":8185832,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ flexibility in usage patterns.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8185833,"byte_end":8185867,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8185868,"byte_end":8185871,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` can:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8185872,"byte_end":8185892,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8185893,"byte_end":8185896,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * Merge an arbitrary number of streams.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8185897,"byte_end":8185940,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ * Track which source stream the value was received from.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8185941,"byte_end":8186001,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ * Handle inserting and removing streams from the set of managed streams at","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186002,"byte_end":8186080,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   any point during iteration.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186081,"byte_end":8186114,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186115,"byte_end":8186118,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All source streams held by `StreamMap` are indexed using a key. This key is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186119,"byte_end":8186198,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ included with the value when a source stream yields a value. The key is also","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186199,"byte_end":8186279,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ used to remove the stream from the `StreamMap` before the stream has","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186280,"byte_end":8186352,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ completed streaming.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186353,"byte_end":8186377,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186378,"byte_end":8186381,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # `Unpin`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186382,"byte_end":8186395,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186396,"byte_end":8186399,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because the `StreamMap` API moves streams during runtime, both streams and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186400,"byte_end":8186478,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ keys must be `Unpin`. In order to insert a `!Unpin` stream into a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186479,"byte_end":8186548,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `StreamMap`, use [`pin!`] to pin the stream to the stack or [`Box::pin`] to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186549,"byte_end":8186628,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ pin the stream in the heap.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186629,"byte_end":8186660,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186661,"byte_end":8186664,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186665,"byte_end":8186685,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186686,"byte_end":8186689,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is backed by a `Vec<(K, V)>`. There is no guarantee that this","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186690,"byte_end":8186767,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ internal implementation detail will persist in future versions, but it is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186768,"byte_end":8186845,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ important to know the runtime implications. In general, `StreamMap` works","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186846,"byte_end":8186923,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ best with a \"smallish\" number of streams as all entries are scanned on","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186924,"byte_end":8186998,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ insert, remove, and polling. In cases where a large number of streams need","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8186999,"byte_end":8187077,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ to be merged, it may be advisable to use tasks sending values on a shared","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187078,"byte_end":8187155,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`mpsc`] channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187156,"byte_end":8187177,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187178,"byte_end":8187181,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`StreamExt::merge`]: crate::stream::StreamExt::merge","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187182,"byte_end":8187239,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187240,"byte_end":8187271,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ [`pin!`]: macro@pin","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187272,"byte_end":8187295,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ [`Box::pin`]: std::boxed::Box::pin","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187296,"byte_end":8187334,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187335,"byte_end":8187338,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187339,"byte_end":8187353,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187354,"byte_end":8187357,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Merging two streams, then remove them after receiving the first value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187358,"byte_end":8187431,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187432,"byte_end":8187435,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187436,"byte_end":8187443,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{StreamExt, StreamMap};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187444,"byte_end":8187490,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187491,"byte_end":8187517,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187518,"byte_end":8187521,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187522,"byte_end":8187540,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187541,"byte_end":8187562,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187563,"byte_end":8187610,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187611,"byte_end":8187658,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187659,"byte_end":8187662,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187663,"byte_end":8187696,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187697,"byte_end":8187736,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187737,"byte_end":8187740,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         // This value will never be received. The send may or may not return","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187741,"byte_end":8187821,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/         // `Err` depending on if the remote end closed first or not.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187822,"byte_end":8187894,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/         let _ = tx1.send(2).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187895,"byte_end":8187933,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187934,"byte_end":8187945,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187946,"byte_end":8187949,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187950,"byte_end":8187983,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8187984,"byte_end":8188023,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/         let _ = tx2.send(4).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188024,"byte_end":8188062,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188063,"byte_end":8188074,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188075,"byte_end":8188078,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188079,"byte_end":8188118,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188119,"byte_end":8188122,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Insert both streams","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188123,"byte_end":8188153,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     map.insert(\"one\", rx1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188154,"byte_end":8188185,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/     map.insert(\"two\", rx2);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188186,"byte_end":8188217,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188218,"byte_end":8188221,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Read twice","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188222,"byte_end":8188243,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     for _ in 0..2 {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188244,"byte_end":8188267,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/         let (key, val) = map.next().await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188268,"byte_end":8188323,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188324,"byte_end":8188327,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/         if key == \"one\" {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188328,"byte_end":8188357,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/             assert_eq!(val, 1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188358,"byte_end":8188393,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188394,"byte_end":8188414,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/             assert_eq!(val, 3);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188415,"byte_end":8188450,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188451,"byte_end":8188464,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188465,"byte_end":8188468,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         // Remove the stream to prevent reading the next value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188469,"byte_end":8188535,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/         map.remove(key);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188536,"byte_end":8188564,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188565,"byte_end":8188574,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188575,"byte_end":8188580,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188581,"byte_end":8188588,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188589,"byte_end":8188592,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This example models a read-only client to a chat system with channels. The","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188593,"byte_end":8188671,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ client sends commands to join and leave channels. `StreamMap` is used to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188672,"byte_end":8188748,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ manage active channel subscriptions.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188749,"byte_end":8188789,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188790,"byte_end":8188793,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For simplicity, messages are displayed with `println!`, but they could be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188794,"byte_end":8188871,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ sent to the client over a socket.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188872,"byte_end":8188909,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188910,"byte_end":8188913,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188914,"byte_end":8188927,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{Stream, StreamExt, StreamMap};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188928,"byte_end":8188982,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188983,"byte_end":8188986,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8188987,"byte_end":8189005,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/     Join(String),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189006,"byte_end":8189027,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     Leave(String),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189028,"byte_end":8189050,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189051,"byte_end":8189056,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189057,"byte_end":8189060,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn commands() -> impl Stream<Item = Command> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189061,"byte_end":8189111,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/     // Streams in user commands by parsing `stdin`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189112,"byte_end":8189167,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189168,"byte_end":8189198,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189199,"byte_end":8189204,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189205,"byte_end":8189208,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Join a channel, returns a stream of messages received on the channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189209,"byte_end":8189285,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ fn join(channel: &str) -> impl Stream<Item = String> + Unpin {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189286,"byte_end":8189352,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // left as an exercise to the reader","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189353,"byte_end":8189397,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189398,"byte_end":8189428,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189429,"byte_end":8189434,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189435,"byte_end":8189438,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189439,"byte_end":8189457,"line_start":124,"line_end":124,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189458,"byte_end":8189479,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     let mut channels = StreamMap::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189480,"byte_end":8189524,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189525,"byte_end":8189528,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // Input commands (join / leave channels).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189529,"byte_end":8189579,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     let cmds = commands();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189580,"byte_end":8189610,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/     tokio::pin!(cmds);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189611,"byte_end":8189637,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189638,"byte_end":8189641,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189642,"byte_end":8189656,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189657,"byte_end":8189685,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/             Some(cmd) = cmds.next() => {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189686,"byte_end":8189730,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/                 match cmd {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189731,"byte_end":8189762,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                     Command::Join(chan) => {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189763,"byte_end":8189811,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                         // Join the channel and add it to the `channels`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189812,"byte_end":8189888,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/                         // stream map","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189889,"byte_end":8189930,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/                         let msgs = join(&chan);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189931,"byte_end":8189982,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/                         channels.insert(chan, msgs);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8189983,"byte_end":8190039,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190040,"byte_end":8190065,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/                     Command::Leave(chan) => {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190066,"byte_end":8190115,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/                         channels.remove(&chan);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190116,"byte_end":8190167,"line_start":143,"line_end":143,"column_start":1,"column_end":52}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190168,"byte_end":8190193,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190194,"byte_end":8190215,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190216,"byte_end":8190233,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/             Some((chan, msg)) = channels.next() => {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190234,"byte_end":8190290,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/                 // Received a message, display it on stdout with the channel","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190291,"byte_end":8190371,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/                 // it originated from.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190372,"byte_end":8190414,"line_start":149,"line_end":149,"column_start":1,"column_end":43}},{"value":"/                 println!(\"{}: {}\", chan, msg);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190415,"byte_end":8190465,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190466,"byte_end":8190483,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/             // Both the `commands` stream and the `channels` stream are","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190484,"byte_end":8190559,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/             // complete. There is no more work to do, so leave the loop.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190560,"byte_end":8190636,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/             else => break,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190637,"byte_end":8190667,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190668,"byte_end":8190681,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190682,"byte_end":8190691,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190692,"byte_end":8190697,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190698,"byte_end":8190705,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4383},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191225,"byte_end":8191228,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamMap<K, V>>::new","value":"pub fn new() -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190857,"byte_end":8190890,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190895,"byte_end":8190898,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The stream map is initially created with a capacity of `0`, so it will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190903,"byte_end":8190977,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ not allocate until it is first inserted into.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190982,"byte_end":8191031,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191036,"byte_end":8191039,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191044,"byte_end":8191058,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191063,"byte_end":8191066,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191071,"byte_end":8191078,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191083,"byte_end":8191127,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191132,"byte_end":8191135,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191140,"byte_end":8191201,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191206,"byte_end":8191213,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4384},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191733,"byte_end":8191746,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StreamMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap` with the specified capacity.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191301,"byte_end":8191362,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191367,"byte_end":8191370,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The stream map will be able to hold at least `capacity` elements without","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191375,"byte_end":8191451,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ reallocating. If `capacity` is 0, the stream map will not allocate.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191456,"byte_end":8191527,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191532,"byte_end":8191535,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191540,"byte_end":8191554,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191559,"byte_end":8191562,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191567,"byte_end":8191574,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191579,"byte_end":8191623,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191628,"byte_end":8191631,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::with_capacity(10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191636,"byte_end":8191709,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191714,"byte_end":8191721,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4385},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192364,"byte_end":8192368,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"keys","qualname":"<StreamMap<K, V>>::keys","value":"pub fn keys(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all keys in arbitrary order.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191877,"byte_end":8191938,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191943,"byte_end":8191946,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a K.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191951,"byte_end":8191990,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8191995,"byte_end":8191998,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192003,"byte_end":8192017,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192022,"byte_end":8192025,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192030,"byte_end":8192037,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192042,"byte_end":8192086,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192091,"byte_end":8192094,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192099,"byte_end":8192134,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192139,"byte_end":8192142,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192147,"byte_end":8192185,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192190,"byte_end":8192221,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192226,"byte_end":8192257,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192262,"byte_end":8192265,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192270,"byte_end":8192297,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192302,"byte_end":8192330,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192335,"byte_end":8192340,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192345,"byte_end":8192352,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4388},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192952,"byte_end":8192958,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"values","qualname":"<StreamMap<K, V>>::values","value":"pub fn values(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192461,"byte_end":8192516,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192521,"byte_end":8192524,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a V.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192529,"byte_end":8192568,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192573,"byte_end":8192576,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192581,"byte_end":8192595,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192600,"byte_end":8192603,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192608,"byte_end":8192615,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192620,"byte_end":8192664,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192669,"byte_end":8192672,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192677,"byte_end":8192712,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192717,"byte_end":8192720,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192725,"byte_end":8192763,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192768,"byte_end":8192799,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192804,"byte_end":8192835,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192840,"byte_end":8192843,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192848,"byte_end":8192880,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192885,"byte_end":8192918,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192923,"byte_end":8192928,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8192933,"byte_end":8192940,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4391},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193558,"byte_end":8193568,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StreamMap<K, V>>::values_mut","value":"pub fn values_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193051,"byte_end":8193114,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193119,"byte_end":8193122,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a mut V.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193127,"byte_end":8193170,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193175,"byte_end":8193178,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193183,"byte_end":8193197,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193202,"byte_end":8193205,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193210,"byte_end":8193217,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193222,"byte_end":8193266,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193271,"byte_end":8193274,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193279,"byte_end":8193314,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193319,"byte_end":8193322,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193327,"byte_end":8193365,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193370,"byte_end":8193401,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193406,"byte_end":8193437,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193442,"byte_end":8193445,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values_mut() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193450,"byte_end":8193486,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193491,"byte_end":8193524,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193529,"byte_end":8193534,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193539,"byte_end":8193546,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4394},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194146,"byte_end":8194154,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StreamMap<K, V>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of streams the map can hold without reallocating.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193673,"byte_end":8193745,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193750,"byte_end":8193753,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `StreamMap` might be able to hold","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193758,"byte_end":8193829,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193834,"byte_end":8193900,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193905,"byte_end":8193908,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193913,"byte_end":8193927,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193932,"byte_end":8193935,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193940,"byte_end":8193947,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8193952,"byte_end":8193996,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194001,"byte_end":8194004,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<i32, Pending<()>> = StreamMap::with_capacity(100);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194009,"byte_end":8194082,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194087,"byte_end":8194122,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194127,"byte_end":8194134,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4395},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194530,"byte_end":8194533,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams in the map.","sig":null,"attributes":[{"value":"/ Returns the number of streams in the map.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194216,"byte_end":8194261,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194266,"byte_end":8194269,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194274,"byte_end":8194288,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194293,"byte_end":8194296,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194301,"byte_end":8194308,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194313,"byte_end":8194357,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194362,"byte_end":8194365,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194370,"byte_end":8194403,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194408,"byte_end":8194435,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194440,"byte_end":8194474,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194479,"byte_end":8194506,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194511,"byte_end":8194518,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4396},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194884,"byte_end":8194892,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194590,"byte_end":8194641,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194646,"byte_end":8194649,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194654,"byte_end":8194668,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194673,"byte_end":8194676,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194681,"byte_end":8194688,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194693,"byte_end":8194727,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194732,"byte_end":8194735,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194740,"byte_end":8194771,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194776,"byte_end":8194802,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194807,"byte_end":8194828,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194833,"byte_end":8194860,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194865,"byte_end":8194872,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4397},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195304,"byte_end":8195309,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"clear","qualname":"<StreamMap<K, V>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-stream pairs. Keeps the allocated\n memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-stream pairs. Keeps the allocated","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8194953,"byte_end":8195023,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ memory for reuse.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195028,"byte_end":8195049,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195054,"byte_end":8195057,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195062,"byte_end":8195076,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195081,"byte_end":8195084,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195089,"byte_end":8195096,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195101,"byte_end":8195145,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195150,"byte_end":8195153,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195158,"byte_end":8195191,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195196,"byte_end":8195230,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ a.clear();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195235,"byte_end":8195249,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195254,"byte_end":8195280,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195285,"byte_end":8195292,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4398},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195984,"byte_end":8195990,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"insert","qualname":"<StreamMap<K, V>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V> where K: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-stream pair into the map.","sig":null,"attributes":[{"value":"/ Insert a key-stream pair into the map.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195364,"byte_end":8195406,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195411,"byte_end":8195414,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195419,"byte_end":8195484,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195489,"byte_end":8195492,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new `stream` replaces the old","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195497,"byte_end":8195572,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ one and the old stream is returned.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195577,"byte_end":8195616,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195621,"byte_end":8195624,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195629,"byte_end":8195643,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195648,"byte_end":8195651,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195656,"byte_end":8195663,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195668,"byte_end":8195712,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195717,"byte_end":8195720,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195725,"byte_end":8195760,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195765,"byte_end":8195768,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(map.insert(37, pending::<i32>()).is_none());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195773,"byte_end":8195829,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195834,"byte_end":8195863,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195868,"byte_end":8195871,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, pending());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195876,"byte_end":8195906,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ assert!(map.insert(37, pending()).is_some());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195911,"byte_end":8195960,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8195965,"byte_end":8195972,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4399},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8196721,"byte_end":8196727,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"remove","qualname":"<StreamMap<K, V>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stream at the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stream at the key if the key was previously in the map.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8196169,"byte_end":8196270,"line_start":365,"line_end":365,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8196275,"byte_end":8196278,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8196283,"byte_end":8196357,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8196362,"byte_end":8196426,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8196431,"byte_end":8196434,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8196439,"byte_end":8196453,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8196458,"byte_end":8196461,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8196466,"byte_end":8196473,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8196478,"byte_end":8196522,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8196527,"byte_end":8196530,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8196535,"byte_end":8196570,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8196575,"byte_end":8196611,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ assert!(map.remove(&1).is_some());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8196616,"byte_end":8196654,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ assert!(map.remove(&1).is_none());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8196659,"byte_end":8196697,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8196702,"byte_end":8196709,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4401},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197561,"byte_end":8197573,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a stream for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a stream for the specified key.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197029,"byte_end":8197099,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197104,"byte_end":8197107,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197112,"byte_end":8197186,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197191,"byte_end":8197255,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197260,"byte_end":8197263,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197268,"byte_end":8197282,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197287,"byte_end":8197290,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197295,"byte_end":8197302,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197307,"byte_end":8197351,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197356,"byte_end":8197359,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197364,"byte_end":8197399,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197404,"byte_end":8197440,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197445,"byte_end":8197488,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197493,"byte_end":8197537,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197542,"byte_end":8197549,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7900},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip.rs","byte_start":8200513,"byte_end":8200517,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":7902},{"krate":0,"index":7903}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":7558384,"byte_end":7558393,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7855},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip_while.rs","byte_start":8202079,"byte_end":8202088,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7858},{"krate":0,"index":7859}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":7558384,"byte_end":7558393,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4634},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":8203892,"byte_end":8203899,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":4637}],"decl_id":null,"docs":" Future for the [`try_next`](super::StreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::StreamExt::try_next) method.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":8203728,"byte_end":8203795,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":8203813,"byte_end":8203880,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7818},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take.rs","byte_start":8204748,"byte_end":8204752,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7820},{"krate":0,"index":7821}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":7558384,"byte_end":7558393,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7769},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take_while.rs","byte_start":8206595,"byte_end":8206604,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":7772},{"krate":0,"index":7773},{"krate":0,"index":7774}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":7558384,"byte_end":7558393,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7746},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\timeout.rs","byte_start":8238272,"byte_end":8238279,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7748},{"krate":0,"index":7749},{"krate":0,"index":7750},{"krate":0,"index":7751}],"decl_id":null,"docs":" Stream returned by the [`timeout`](super::StreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":7558384,"byte_end":7558393,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":4529},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137277,"byte_end":8137286,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":4530},{"krate":0,"index":4531},{"krate":0,"index":4534},{"krate":0,"index":4537},{"krate":0,"index":4539},{"krate":0,"index":4541},{"krate":0,"index":4544},{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":4548},{"krate":0,"index":4549},{"krate":0,"index":4551},{"krate":0,"index":4553},{"krate":0,"index":4555},{"krate":0,"index":4557},{"krate":0,"index":4560},{"krate":0,"index":4562}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137166,"byte_end":8137240,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137241,"byte_end":8137266,"line_start":80,"line_end":80,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4530},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138356,"byte_end":8138360,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" Consumes and returns the next value in the stream or `None` if the\n stream is finished.","sig":null,"attributes":[{"value":"/ Consumes and returns the next value in the stream or `None` if the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137301,"byte_end":8137371,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ stream is finished.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137376,"byte_end":8137399,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137404,"byte_end":8137407,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137412,"byte_end":8137430,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137435,"byte_end":8137438,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137443,"byte_end":8137456,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137461,"byte_end":8137512,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137517,"byte_end":8137524,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137529,"byte_end":8137532,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137537,"byte_end":8137605,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137610,"byte_end":8137685,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137690,"byte_end":8137765,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137770,"byte_end":8137824,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137829,"byte_end":8137904,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137909,"byte_end":8137919,"line_start":96,"line_end":96,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137924,"byte_end":8137927,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137932,"byte_end":8137946,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137951,"byte_end":8137954,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137959,"byte_end":8137966,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137971,"byte_end":8137991,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137996,"byte_end":8138019,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138024,"byte_end":8138065,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138070,"byte_end":8138073,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138078,"byte_end":8138119,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138124,"byte_end":8138127,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138132,"byte_end":8138177,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138182,"byte_end":8138227,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138232,"byte_end":8138277,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138282,"byte_end":8138324,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138329,"byte_end":8138336,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138341,"byte_end":8138348,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4531},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139431,"byte_end":8139439,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::StreamExt::try_next","value":"pub fn try_next<T, E>(&mut Self) -> TryNext<, Self> where Self: Stream<Item =\nResult<T, E>> + Unpin","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" Consumes and returns the next item in the stream. If an error is\n encountered before the next item, the error is returned instead.","sig":null,"attributes":[{"value":"/ Consumes and returns the next item in the stream. If an error is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138462,"byte_end":8138530,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ encountered before the next item, the error is returned instead.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138535,"byte_end":8138603,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138608,"byte_end":8138611,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138616,"byte_end":8138634,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138639,"byte_end":8138642,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138647,"byte_end":8138660,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ async fn try_next(&mut self) -> Result<Option<T>, E>;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138665,"byte_end":8138722,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138727,"byte_end":8138734,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138739,"byte_end":8138742,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`](StreamExt::next) combinator,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138747,"byte_end":8138811,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ but returns a [`Result<Option<T>, E>`](Result) rather than","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138816,"byte_end":8138878,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ an [`Option<Result<T, E>>`](Option), making for easy use","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138883,"byte_end":8138943,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ with the [`?`](std::ops::Try) operator.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138948,"byte_end":8138991,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8138996,"byte_end":8138999,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139004,"byte_end":8139018,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139023,"byte_end":8139026,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139031,"byte_end":8139038,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139043,"byte_end":8139063,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139068,"byte_end":8139091,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139096,"byte_end":8139137,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139142,"byte_end":8139145,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(1), Ok(2), Err(\"nope\")]);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139150,"byte_end":8139217,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139222,"byte_end":8139225,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(1)));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139230,"byte_end":8139283,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(2)));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139288,"byte_end":8139341,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(\"nope\"));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139346,"byte_end":8139399,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139404,"byte_end":8139411,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139416,"byte_end":8139423,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4534},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140507,"byte_end":8140510,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139583,"byte_end":8139658,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139663,"byte_end":8139686,"line_start":156,"line_end":156,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139691,"byte_end":8139694,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139699,"byte_end":8139771,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139776,"byte_end":8139840,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139845,"byte_end":8139882,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139887,"byte_end":8139890,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139895,"byte_end":8139971,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8139976,"byte_end":8140047,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140052,"byte_end":8140073,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140078,"byte_end":8140081,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140086,"byte_end":8140100,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140105,"byte_end":8140108,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140113,"byte_end":8140120,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140125,"byte_end":8140145,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140150,"byte_end":8140173,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140178,"byte_end":8140219,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140224,"byte_end":8140227,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140232,"byte_end":8140269,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140274,"byte_end":8140317,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140322,"byte_end":8140325,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140330,"byte_end":8140375,"line_start":176,"line_end":176,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140380,"byte_end":8140425,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140430,"byte_end":8140475,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140480,"byte_end":8140487,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140492,"byte_end":8140499,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4537},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143120,"byte_end":8143125,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" Combine two streams into one by interleaving the output of both as it\n is produced.","sig":null,"attributes":[{"value":"/ Combine two streams into one by interleaving the output of both as it","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140654,"byte_end":8140727,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ is produced.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140732,"byte_end":8140748,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140753,"byte_end":8140756,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Values are produced from the merged stream in the order they arrive from","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140761,"byte_end":8140837,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ the two source streams. If both source streams provide values","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140842,"byte_end":8140907,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ simultaneously, the merge stream alternates between them. This provides","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140912,"byte_end":8140987,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ some level of fairness. You should not chain calls to `merge`, as this","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8140992,"byte_end":8141066,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ will break the fairness of the merging.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141071,"byte_end":8141114,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141119,"byte_end":8141122,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The merged stream completes once **both** source streams complete. When","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141127,"byte_end":8141202,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ one source stream completes before the other, the merge stream","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141207,"byte_end":8141273,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/ exclusively polls the remaining stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141278,"byte_end":8141321,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141326,"byte_end":8141329,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ For merging multiple streams, consider using [`StreamMap`] instead.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141334,"byte_end":8141405,"line_start":202,"line_end":202,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141410,"byte_end":8141413,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`StreamMap`]: crate::stream::StreamMap","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141418,"byte_end":8141461,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141466,"byte_end":8141469,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141474,"byte_end":8141488,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141493,"byte_end":8141496,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141501,"byte_end":8141508,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141513,"byte_end":8141546,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141551,"byte_end":8141577,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141582,"byte_end":8141602,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141607,"byte_end":8141610,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141615,"byte_end":8141643,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141648,"byte_end":8141651,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # /*","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141656,"byte_end":8141664,"line_start":215,"line_end":215,"column_start":5,"column_end":13}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141669,"byte_end":8141687,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141692,"byte_end":8141700,"line_start":217,"line_end":217,"column_start":5,"column_end":13}},{"value":"/ # #[tokio::main(basic_scheduler)]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141705,"byte_end":8141742,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141747,"byte_end":8141768,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/ # time::pause();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141773,"byte_end":8141793,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141798,"byte_end":8141845,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141850,"byte_end":8141897,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141902,"byte_end":8141905,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/     let mut rx = rx1.merge(rx2);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141910,"byte_end":8141946,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141951,"byte_end":8141954,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141959,"byte_end":8141992,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/         // Send some values immediately","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8141997,"byte_end":8142040,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142045,"byte_end":8142084,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142089,"byte_end":8142128,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142133,"byte_end":8142136,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/         // Let the other task send values","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142141,"byte_end":8142186,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/         time::delay_for(Duration::from_millis(20)).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142191,"byte_end":8142252,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142257,"byte_end":8142260,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/         tx1.send(4).await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142265,"byte_end":8142304,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142309,"byte_end":8142320,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142325,"byte_end":8142328,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142333,"byte_end":8142366,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         // Wait for the first task to send values","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142371,"byte_end":8142424,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         time::delay_for(Duration::from_millis(5)).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142429,"byte_end":8142489,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142494,"byte_end":8142497,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142502,"byte_end":8142541,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142546,"byte_end":8142549,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         time::delay_for(Duration::from_millis(25)).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142554,"byte_end":8142615,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142620,"byte_end":8142623,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Send the final value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142628,"byte_end":8142663,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         tx2.send(5).await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142668,"byte_end":8142707,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142712,"byte_end":8142723,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142728,"byte_end":8142731,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(1, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142736,"byte_end":8142783,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(2, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142788,"byte_end":8142835,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(3, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142840,"byte_end":8142887,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(4, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142892,"byte_end":8142939,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(5, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142944,"byte_end":8142991,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8142996,"byte_end":8142999,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/    // The merged stream is consumed","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143004,"byte_end":8143043,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/    assert!(rx.next().await.is_none());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143048,"byte_end":8143090,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143095,"byte_end":8143100,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143105,"byte_end":8143112,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4539},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144430,"byte_end":8144436,"line_start":297,"line_end":297,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"pub fn filter<F>(Self, F) -> Filter<Self, F> where F: FnMut(&Self::Item) ->\nbool, Self: Sized","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143281,"byte_end":8143353,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143358,"byte_end":8143372,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143377,"byte_end":8143380,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143385,"byte_end":8143460,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143465,"byte_end":8143511,"line_start":271,"line_end":271,"column_start":5,"column_end":51}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143516,"byte_end":8143588,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ predicate resolves to `false`, then the value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143593,"byte_end":8143642,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143647,"byte_end":8143705,"line_start":274,"line_end":274,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143710,"byte_end":8143713,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143718,"byte_end":8143794,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter`] method in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143799,"byte_end":8143871,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143876,"byte_end":8143897,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143902,"byte_end":8143905,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143910,"byte_end":8143924,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143929,"byte_end":8143932,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143937,"byte_end":8143944,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143949,"byte_end":8143969,"line_start":283,"line_end":283,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8143974,"byte_end":8143997,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144002,"byte_end":8144043,"line_start":285,"line_end":285,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144048,"byte_end":8144051,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144056,"byte_end":8144093,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter(|x| x % 2 == 0);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144098,"byte_end":8144148,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144153,"byte_end":8144156,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(2), evens.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144161,"byte_end":8144205,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(4), evens.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144210,"byte_end":8144254,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(6), evens.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144259,"byte_end":8144303,"line_start":292,"line_end":292,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(8), evens.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144308,"byte_end":8144352,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144357,"byte_end":8144398,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144403,"byte_end":8144410,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144415,"byte_end":8144422,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4541},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145803,"byte_end":8145813,"line_start":335,"line_end":335,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"pub fn filter_map<T, F>(Self, F) -> FilterMap<Self, F> where\nF: FnMut(Self::Item) -> Option<T>, Self: Sized","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144587,"byte_end":8144662,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided closure.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144667,"byte_end":8144730,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144735,"byte_end":8144738,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144743,"byte_end":8144818,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate `f` resolves to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144823,"byte_end":8144875,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144880,"byte_end":8144956,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`], then the value will be skipped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8144961,"byte_end":8145021,"line_start":311,"line_end":311,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145026,"byte_end":8145029,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145034,"byte_end":8145110,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter_map`] method in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145115,"byte_end":8145191,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145196,"byte_end":8145217,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145222,"byte_end":8145225,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145230,"byte_end":8145244,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145249,"byte_end":8145256,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145261,"byte_end":8145281,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145286,"byte_end":8145309,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145314,"byte_end":8145355,"line_start":321,"line_end":321,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145360,"byte_end":8145363,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145368,"byte_end":8145405,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter_map(|x| {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145410,"byte_end":8145453,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145458,"byte_end":8145509,"line_start":325,"line_end":325,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145514,"byte_end":8145521,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145526,"byte_end":8145529,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), evens.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145534,"byte_end":8145578,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(5), evens.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145583,"byte_end":8145627,"line_start":329,"line_end":329,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(7), evens.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145632,"byte_end":8145676,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(9), evens.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145681,"byte_end":8145725,"line_start":331,"line_end":331,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145730,"byte_end":8145771,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145776,"byte_end":8145783,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145788,"byte_end":8145795,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4544},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147945,"byte_end":8147949,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" Creates a stream which ends after the first `None`.","sig":null,"attributes":[{"value":"/ Creates a stream which ends after the first `None`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8145977,"byte_end":8146032,"line_start":343,"line_end":343,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146037,"byte_end":8146040,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ After a stream returns `None`, behavior is undefined. Future calls to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146045,"byte_end":8146118,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ `poll_next` may or may not return `Some(T)` again or they may panic.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146123,"byte_end":8146195,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ `fuse()` adapts a stream, ensuring that after `None` is given, it will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146200,"byte_end":8146274,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ return `None` forever.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146279,"byte_end":8146305,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146310,"byte_end":8146313,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146318,"byte_end":8146332,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146337,"byte_end":8146340,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146345,"byte_end":8146352,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{Stream, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146357,"byte_end":8146400,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146405,"byte_end":8146408,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146413,"byte_end":8146435,"line_start":355,"line_end":355,"column_start":5,"column_end":27}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146440,"byte_end":8146475,"line_start":356,"line_end":356,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146480,"byte_end":8146483,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ // a stream which alternates between Some and None","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146488,"byte_end":8146542,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ struct Alternate {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146547,"byte_end":8146569,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/     state: i32,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146574,"byte_end":8146593,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146598,"byte_end":8146603,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146608,"byte_end":8146611,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ impl Stream for Alternate {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146616,"byte_end":8146647,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/     type Item = i32;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146652,"byte_end":8146676,"line_start":364,"line_end":364,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146681,"byte_end":8146684,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<i32>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146689,"byte_end":8146781,"line_start":366,"line_end":366,"column_start":5,"column_end":97}},{"value":"/         let val = self.state;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146786,"byte_end":8146819,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/         self.state = self.state + 1;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146824,"byte_end":8146864,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146869,"byte_end":8146872,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/         // if it's even, Some(i32), else None","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146877,"byte_end":8146926,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/         if val % 2 == 0 {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146931,"byte_end":8146960,"line_start":371,"line_end":371,"column_start":5,"column_end":34}},{"value":"/             Poll::Ready(Some(val))","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8146965,"byte_end":8147003,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147008,"byte_end":8147028,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/             Poll::Ready(None)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147033,"byte_end":8147066,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147071,"byte_end":8147084,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147089,"byte_end":8147098,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147103,"byte_end":8147108,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147113,"byte_end":8147116,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147121,"byte_end":8147139,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147144,"byte_end":8147165,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/     let mut stream = Alternate { state: 0 };","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147170,"byte_end":8147218,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147223,"byte_end":8147226,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/     // the stream goes back and forth","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147231,"byte_end":8147272,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(stream.next().await, Some(0));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147277,"byte_end":8147326,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147331,"byte_end":8147377,"line_start":385,"line_end":385,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147382,"byte_end":8147431,"line_start":386,"line_end":386,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147436,"byte_end":8147482,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147487,"byte_end":8147490,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // however, once it is fused","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147495,"byte_end":8147531,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let mut stream = stream.fuse();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147536,"byte_end":8147575,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147580,"byte_end":8147583,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147588,"byte_end":8147637,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147642,"byte_end":8147688,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147693,"byte_end":8147696,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     // it will always return `None` after the first time.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147701,"byte_end":8147762,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147767,"byte_end":8147813,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147818,"byte_end":8147864,"line_start":397,"line_end":397,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147869,"byte_end":8147915,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147920,"byte_end":8147925,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8147930,"byte_end":8147937,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4545},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148685,"byte_end":8148689,"line_start":428,"line_end":428,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148042,"byte_end":8148113,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148118,"byte_end":8148121,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148126,"byte_end":8148199,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148204,"byte_end":8148239,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148244,"byte_end":8148247,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148252,"byte_end":8148266,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148271,"byte_end":8148274,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148279,"byte_end":8148286,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148291,"byte_end":8148311,"line_start":416,"line_end":416,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148316,"byte_end":8148339,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148344,"byte_end":8148385,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148390,"byte_end":8148393,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take(3);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148398,"byte_end":8148448,"line_start":420,"line_end":420,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148453,"byte_end":8148456,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148461,"byte_end":8148506,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148511,"byte_end":8148556,"line_start":423,"line_end":423,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148561,"byte_end":8148606,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148611,"byte_end":8148653,"line_start":425,"line_end":425,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148658,"byte_end":8148665,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148670,"byte_end":8148677,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4546},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149582,"byte_end":8149592,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"pub fn take_while<F>(Self, F) -> TakeWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided predicate","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148795,"byte_end":8148858,"line_start":435,"line_end":435,"column_start":5,"column_end":68}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148863,"byte_end":8148886,"line_start":436,"line_end":436,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148891,"byte_end":8148894,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148899,"byte_end":8148974,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8148979,"byte_end":8149051,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149056,"byte_end":8149120,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149125,"byte_end":8149128,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149133,"byte_end":8149147,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149152,"byte_end":8149155,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149160,"byte_end":8149167,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149172,"byte_end":8149192,"line_start":445,"line_end":445,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149197,"byte_end":8149220,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149225,"byte_end":8149266,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149271,"byte_end":8149274,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take_while(|x| *x <= 3);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149279,"byte_end":8149345,"line_start":449,"line_end":449,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149350,"byte_end":8149353,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149358,"byte_end":8149403,"line_start":451,"line_end":451,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149408,"byte_end":8149453,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149458,"byte_end":8149503,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149508,"byte_end":8149550,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149555,"byte_end":8149562,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149567,"byte_end":8149574,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4548},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150289,"byte_end":8150293,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" Creates a new stream that will skip the `n` first items of the\n underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream that will skip the `n` first items of the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149749,"byte_end":8149815,"line_start":465,"line_end":465,"column_start":5,"column_end":71}},{"value":"/ underlying stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149820,"byte_end":8149842,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149847,"byte_end":8149850,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149855,"byte_end":8149869,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149874,"byte_end":8149877,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149882,"byte_end":8149889,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149894,"byte_end":8149914,"line_start":471,"line_end":471,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149919,"byte_end":8149942,"line_start":472,"line_end":472,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149947,"byte_end":8149988,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8149993,"byte_end":8149996,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).skip(7);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150001,"byte_end":8150051,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150056,"byte_end":8150059,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(8), stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150064,"byte_end":8150109,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(9), stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150114,"byte_end":8150159,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(10), stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150164,"byte_end":8150210,"line_start":479,"line_end":479,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150215,"byte_end":8150257,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150262,"byte_end":8150269,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150274,"byte_end":8150281,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4549},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151271,"byte_end":8151281,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"pub fn skip_while<F>(Self, F) -> SkipWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" Skip elements from the underlying stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements from the underlying stream while the provided predicate","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150399,"byte_end":8150472,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150477,"byte_end":8150500,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150505,"byte_end":8150508,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This function, like [`Iterator::skip_while`], will ignore elemets from the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150513,"byte_end":8150591,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150596,"byte_end":8150668,"line_start":494,"line_end":494,"column_start":5,"column_end":77}},{"value":"/ returns false, the rest of the elements will be yielded.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150673,"byte_end":8150733,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150738,"byte_end":8150741,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`Iterator::skip_while`]: std::iter::Iterator::skip_while()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150746,"byte_end":8150809,"line_start":497,"line_end":497,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150814,"byte_end":8150817,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150822,"byte_end":8150836,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150841,"byte_end":8150844,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150849,"byte_end":8150856,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150861,"byte_end":8150881,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150886,"byte_end":8150909,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150914,"byte_end":8150955,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"/ let mut stream = stream::iter(vec![1,2,3,4,1]).skip_while(|x| *x < 3);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8150960,"byte_end":8151034,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151039,"byte_end":8151042,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151047,"byte_end":8151092,"line_start":507,"line_end":507,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(4), stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151097,"byte_end":8151142,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151147,"byte_end":8151192,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151197,"byte_end":8151239,"line_start":510,"line_end":510,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151244,"byte_end":8151251,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151256,"byte_end":8151263,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4551},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152860,"byte_end":8152863,"line_start":568,"line_end":568,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if every element of the stream matches a predicate.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151438,"byte_end":8151499,"line_start":521,"line_end":521,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151504,"byte_end":8151507,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ `all()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151512,"byte_end":8151582,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if they all return","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151587,"byte_end":8151657,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/ `true`, then so does `all`. If any of them return `false`, it","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151662,"byte_end":8151727,"line_start":525,"line_end":525,"column_start":5,"column_end":70}},{"value":"/ returns `false`. An empty stream returns `true`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151732,"byte_end":8151784,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151789,"byte_end":8151792,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ `all()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151797,"byte_end":8151869,"line_start":528,"line_end":528,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `false`, given that no matter what else happens,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151874,"byte_end":8151948,"line_start":529,"line_end":529,"column_start":5,"column_end":79}},{"value":"/ the result will also be `false`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151953,"byte_end":8151989,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8151994,"byte_end":8151997,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `true`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152002,"byte_end":8152037,"line_start":532,"line_end":532,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152042,"byte_end":8152045,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152050,"byte_end":8152064,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152069,"byte_end":8152072,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152077,"byte_end":8152093,"line_start":536,"line_end":536,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152098,"byte_end":8152101,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152106,"byte_end":8152113,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152118,"byte_end":8152138,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152143,"byte_end":8152166,"line_start":540,"line_end":540,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152171,"byte_end":8152212,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152217,"byte_end":8152220,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152225,"byte_end":8152247,"line_start":543,"line_end":543,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152252,"byte_end":8152255,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).all(|&x| x > 0).await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152260,"byte_end":8152312,"line_start":545,"line_end":545,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152317,"byte_end":8152320,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).all(|&x| x > 2).await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152325,"byte_end":8152378,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152383,"byte_end":8152390,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152395,"byte_end":8152402,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152407,"byte_end":8152410,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `false`:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152415,"byte_end":8152449,"line_start":551,"line_end":551,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152454,"byte_end":8152457,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152462,"byte_end":8152469,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152474,"byte_end":8152494,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152499,"byte_end":8152522,"line_start":555,"line_end":555,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152527,"byte_end":8152568,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152573,"byte_end":8152576,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152581,"byte_end":8152603,"line_start":558,"line_end":558,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152608,"byte_end":8152611,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152616,"byte_end":8152652,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152657,"byte_end":8152660,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ assert!(!iter.all(|&x| x != 2).await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152665,"byte_end":8152707,"line_start":562,"line_end":562,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152712,"byte_end":8152715,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152720,"byte_end":8152779,"line_start":564,"line_end":564,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&3));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152784,"byte_end":8152828,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152833,"byte_end":8152840,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8152845,"byte_end":8152852,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4553},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154388,"byte_end":8154391,"line_start":621,"line_end":621,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if any element of the stream matches a predicate.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153028,"byte_end":8153087,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153092,"byte_end":8153095,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `any()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153100,"byte_end":8153170,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if any of them return","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153175,"byte_end":8153248,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ `true`, then so does `any()`. If they all return `false`, it","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153253,"byte_end":8153317,"line_start":580,"line_end":580,"column_start":5,"column_end":69}},{"value":"/ returns `false`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153322,"byte_end":8153342,"line_start":581,"line_end":581,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153347,"byte_end":8153350,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ `any()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153355,"byte_end":8153427,"line_start":583,"line_end":583,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `true`, given that no matter what else happens,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153432,"byte_end":8153505,"line_start":584,"line_end":584,"column_start":5,"column_end":78}},{"value":"/ the result will also be `true`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153510,"byte_end":8153545,"line_start":585,"line_end":585,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153550,"byte_end":8153553,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `false`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153558,"byte_end":8153594,"line_start":587,"line_end":587,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153599,"byte_end":8153602,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153607,"byte_end":8153623,"line_start":589,"line_end":589,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153628,"byte_end":8153631,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153636,"byte_end":8153643,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153648,"byte_end":8153668,"line_start":592,"line_end":592,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153673,"byte_end":8153696,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153701,"byte_end":8153742,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153747,"byte_end":8153750,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153755,"byte_end":8153777,"line_start":596,"line_end":596,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153782,"byte_end":8153785,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).any(|&x| x > 0).await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153790,"byte_end":8153842,"line_start":598,"line_end":598,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153847,"byte_end":8153850,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).any(|&x| x > 5).await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153855,"byte_end":8153908,"line_start":600,"line_end":600,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153913,"byte_end":8153920,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153925,"byte_end":8153932,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153937,"byte_end":8153940,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `true`:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153945,"byte_end":8153978,"line_start":604,"line_end":604,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153983,"byte_end":8153986,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8153991,"byte_end":8153998,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154003,"byte_end":8154023,"line_start":607,"line_end":607,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154028,"byte_end":8154051,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154056,"byte_end":8154097,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154102,"byte_end":8154105,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154110,"byte_end":8154132,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154137,"byte_end":8154140,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154145,"byte_end":8154181,"line_start":613,"line_end":613,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154186,"byte_end":8154189,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert!(iter.any(|&x| x != 2).await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154194,"byte_end":8154235,"line_start":615,"line_end":615,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154240,"byte_end":8154243,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154248,"byte_end":8154307,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&2));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154312,"byte_end":8154356,"line_start":618,"line_end":618,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154361,"byte_end":8154368,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154373,"byte_end":8154380,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4555},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155534,"byte_end":8155539,"line_start":656,"line_end":656,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" Combine two streams into one by first returning all values from the\n first stream then all values from the second stream.","sig":null,"attributes":[{"value":"/ Combine two streams into one by first returning all values from the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154556,"byte_end":8154627,"line_start":629,"line_end":629,"column_start":5,"column_end":76}},{"value":"/ first stream then all values from the second stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154632,"byte_end":8154688,"line_start":630,"line_end":630,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154693,"byte_end":8154696,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ As long as `self` still has values to emit, no values from `other` are","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154701,"byte_end":8154775,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ emitted, even if some are ready.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154780,"byte_end":8154816,"line_start":633,"line_end":633,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154821,"byte_end":8154824,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154829,"byte_end":8154843,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154848,"byte_end":8154851,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154856,"byte_end":8154863,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154868,"byte_end":8154909,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154914,"byte_end":8154917,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154922,"byte_end":8154940,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154945,"byte_end":8154966,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/     let one = stream::iter(vec![1, 2, 3]);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8154971,"byte_end":8155017,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/     let two = stream::iter(vec![4, 5, 6]);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155022,"byte_end":8155068,"line_start":643,"line_end":643,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155073,"byte_end":8155076,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/     let mut stream = one.chain(two);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155081,"byte_end":8155121,"line_start":645,"line_end":645,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155126,"byte_end":8155129,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155134,"byte_end":8155183,"line_start":647,"line_end":647,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155188,"byte_end":8155237,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(3));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155242,"byte_end":8155291,"line_start":649,"line_end":649,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155296,"byte_end":8155345,"line_start":650,"line_end":650,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(5));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155350,"byte_end":8155399,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(6));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155404,"byte_end":8155453,"line_start":652,"line_end":652,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155458,"byte_end":8155504,"line_start":653,"line_end":653,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155509,"byte_end":8155514,"line_start":654,"line_end":654,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155519,"byte_end":8155526,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4557},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156132,"byte_end":8156136,"line_start":680,"line_end":680,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, B, F> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" A combinator that applies a function to every element in a stream\n producing a single, final value.","sig":null,"attributes":[{"value":"/ A combinator that applies a function to every element in a stream","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155695,"byte_end":8155764,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ producing a single, final value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155769,"byte_end":8155805,"line_start":665,"line_end":665,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155810,"byte_end":8155813,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155818,"byte_end":8155832,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155837,"byte_end":8155853,"line_start":668,"line_end":668,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155858,"byte_end":8155865,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155870,"byte_end":8155890,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155895,"byte_end":8155918,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, *};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155923,"byte_end":8155956,"line_start":672,"line_end":672,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155961,"byte_end":8155964,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let s = stream::iter(vec![1u8, 2, 3]);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8155969,"byte_end":8156011,"line_start":674,"line_end":674,"column_start":5,"column_end":47}},{"value":"/ let sum = s.fold(0, |acc, x| acc + x).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156016,"byte_end":8156064,"line_start":675,"line_end":675,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156069,"byte_end":8156072,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 6);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156077,"byte_end":8156100,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156105,"byte_end":8156112,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156117,"byte_end":8156124,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4560},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158449,"byte_end":8158456,"line_start":752,"line_end":752,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"pub fn collect<T>(Self) -> Collect<Self, T> where T: FromStream<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" Drain stream pushing all emitted values into a collection.","sig":null,"attributes":[{"value":"/ Drain stream pushing all emitted values into a collection.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156315,"byte_end":8156377,"line_start":688,"line_end":688,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156382,"byte_end":8156385,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ `collect` streams all values, awaiting as needed. Values are pushed into","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156390,"byte_end":8156466,"line_start":690,"line_end":690,"column_start":5,"column_end":81}},{"value":"/ a collection. A number of different target collection types are","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156471,"byte_end":8156538,"line_start":691,"line_end":691,"column_start":5,"column_end":72}},{"value":"/ supported, including [`Vec`](std::vec::Vec),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156543,"byte_end":8156591,"line_start":692,"line_end":692,"column_start":5,"column_end":53}},{"value":"/ [`String`](std::string::String), and [`Bytes`](bytes::Bytes).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156596,"byte_end":8156661,"line_start":693,"line_end":693,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156666,"byte_end":8156669,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # `Result`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156674,"byte_end":8156688,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156693,"byte_end":8156696,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ `collect()` can also be used with streams of type `Result<T, E>` where","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156701,"byte_end":8156775,"line_start":697,"line_end":697,"column_start":5,"column_end":79}},{"value":"/ `T: FromStream<_>`. In this case, `collect()` will stream as long as","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156780,"byte_end":8156852,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/ values yielded from the stream are `Ok(_)`. If `Err(_)` is encountered,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156857,"byte_end":8156932,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ streaming is terminated and `collect()` returns the `Err`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8156937,"byte_end":8156999,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157004,"byte_end":8157007,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157012,"byte_end":8157023,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157028,"byte_end":8157031,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ `FromStream` is currently a sealed trait. Stabilization is pending","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157036,"byte_end":8157106,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157111,"byte_end":8157149,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157154,"byte_end":8157157,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157162,"byte_end":8157176,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157181,"byte_end":8157184,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157189,"byte_end":8157205,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157210,"byte_end":8157213,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157218,"byte_end":8157225,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157230,"byte_end":8157271,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157276,"byte_end":8157279,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157284,"byte_end":8157302,"line_start":714,"line_end":714,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157307,"byte_end":8157328,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/     let doubled: Vec<i32> =","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157333,"byte_end":8157364,"line_start":716,"line_end":716,"column_start":5,"column_end":36}},{"value":"/         stream::iter(vec![1, 2, 3])","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157369,"byte_end":8157408,"line_start":717,"line_end":717,"column_start":5,"column_end":44}},{"value":"/             .map(|x| x * 2)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157413,"byte_end":8157444,"line_start":718,"line_end":718,"column_start":5,"column_end":36}},{"value":"/             .collect()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157449,"byte_end":8157475,"line_start":719,"line_end":719,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157480,"byte_end":8157503,"line_start":720,"line_end":720,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157508,"byte_end":8157511,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(vec![2, 4, 6], doubled);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157516,"byte_end":8157559,"line_start":722,"line_end":722,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157564,"byte_end":8157569,"line_start":723,"line_end":723,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157574,"byte_end":8157581,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157586,"byte_end":8157589,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Collecting a stream of `Result` values","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157594,"byte_end":8157636,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157641,"byte_end":8157644,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157649,"byte_end":8157656,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157661,"byte_end":8157702,"line_start":729,"line_end":729,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157707,"byte_end":8157710,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157715,"byte_end":8157733,"line_start":731,"line_end":731,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157738,"byte_end":8157759,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/     // A stream containing only `Ok` values will be collected","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157764,"byte_end":8157829,"line_start":733,"line_end":733,"column_start":5,"column_end":70}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157834,"byte_end":8157878,"line_start":734,"line_end":734,"column_start":5,"column_end":49}},{"value":"/         stream::iter(vec![Ok(1), Ok(2), Ok(3)])","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157883,"byte_end":8157934,"line_start":735,"line_end":735,"column_start":5,"column_end":56}},{"value":"/             .collect()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157939,"byte_end":8157965,"line_start":736,"line_end":736,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157970,"byte_end":8157993,"line_start":737,"line_end":737,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8157998,"byte_end":8158001,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(vec![1, 2, 3]), values);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158006,"byte_end":8158052,"line_start":739,"line_end":739,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158057,"byte_end":8158060,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/     // A stream containing `Err` values will return the first error.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158065,"byte_end":8158137,"line_start":741,"line_end":741,"column_start":5,"column_end":77}},{"value":"/     let results = vec![Ok(1), Err(\"no\"), Ok(2), Ok(3), Err(\"nein\")];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158142,"byte_end":8158214,"line_start":742,"line_end":742,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158219,"byte_end":8158222,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158227,"byte_end":8158271,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/         stream::iter(results)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158276,"byte_end":8158309,"line_start":745,"line_end":745,"column_start":5,"column_end":38}},{"value":"/             .collect()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158314,"byte_end":8158340,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158345,"byte_end":8158368,"line_start":747,"line_end":747,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158373,"byte_end":8158376,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Err(\"no\"), values);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158381,"byte_end":8158419,"line_start":749,"line_end":749,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158424,"byte_end":8158429,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158434,"byte_end":8158441,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4562},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8161111,"byte_end":8161118,"line_start":816,"line_end":816,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":4529},"children":[],"decl_id":null,"docs":" Applies a per-item timeout to the passed stream.","sig":null,"attributes":[{"value":"/ Applies a per-item timeout to the passed stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158596,"byte_end":8158648,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158653,"byte_end":8158656,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ `timeout()` takes a `Duration` that represents the maximum amount of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158661,"byte_end":8158733,"line_start":762,"line_end":762,"column_start":5,"column_end":77}},{"value":"/ time each element of the stream has to complete before timing out.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158738,"byte_end":8158808,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158813,"byte_end":8158816,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ If the wrapped stream yields a value before the deadline is reached, the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158821,"byte_end":8158897,"line_start":765,"line_end":765,"column_start":5,"column_end":81}},{"value":"/ value is returned. Otherwise, an error is returned. The caller may decide","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158902,"byte_end":8158979,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/ to continue consuming the stream and will eventually get the next source","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8158984,"byte_end":8159060,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ stream value once it becomes available.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159065,"byte_end":8159108,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159113,"byte_end":8159116,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159121,"byte_end":8159132,"line_start":770,"line_end":770,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159137,"byte_end":8159140,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159145,"byte_end":8159211,"line_start":772,"line_end":772,"column_start":5,"column_end":71}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159216,"byte_end":8159242,"line_start":773,"line_end":773,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159247,"byte_end":8159250,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Polling the returned stream will continue to poll the inner stream even","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159255,"byte_end":8159330,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ if one or more items time out.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159335,"byte_end":8159369,"line_start":776,"line_end":776,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159374,"byte_end":8159377,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159382,"byte_end":8159396,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159401,"byte_end":8159404,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Suppose we have a stream `int_stream` that yields 3 numbers (1, 2, 3):","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159409,"byte_end":8159483,"line_start":780,"line_end":780,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159488,"byte_end":8159491,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159496,"byte_end":8159503,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159508,"byte_end":8159528,"line_start":783,"line_end":783,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159533,"byte_end":8159556,"line_start":784,"line_end":784,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159561,"byte_end":8159602,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159607,"byte_end":8159635,"line_start":786,"line_end":786,"column_start":5,"column_end":33}},{"value":"/ # let int_stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159640,"byte_end":8159683,"line_start":787,"line_end":787,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159688,"byte_end":8159691,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let mut int_stream = int_stream.timeout(Duration::from_secs(1));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159696,"byte_end":8159764,"line_start":789,"line_end":789,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159769,"byte_end":8159772,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ // When no items time out, we get the 3 elements in succession:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159777,"byte_end":8159844,"line_start":791,"line_end":791,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159849,"byte_end":8159906,"line_start":792,"line_end":792,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159911,"byte_end":8159968,"line_start":793,"line_end":793,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8159973,"byte_end":8160030,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160035,"byte_end":8160089,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160094,"byte_end":8160097,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ // If the second item times out, we get an error and continue polling the stream:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160102,"byte_end":8160187,"line_start":797,"line_end":797,"column_start":5,"column_end":90}},{"value":"/ # let mut int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160192,"byte_end":8160268,"line_start":798,"line_end":798,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160273,"byte_end":8160330,"line_start":799,"line_end":799,"column_start":5,"column_end":62}},{"value":"/ assert!(int_stream.try_next().await.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160335,"byte_end":8160385,"line_start":800,"line_end":800,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160390,"byte_end":8160447,"line_start":801,"line_end":801,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160452,"byte_end":8160509,"line_start":802,"line_end":802,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160514,"byte_end":8160568,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160573,"byte_end":8160576,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ // If we want to stop consuming the source stream the first time an","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160581,"byte_end":8160652,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ // element times out, we can use the `take_while` operator:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160657,"byte_end":8160720,"line_start":806,"line_end":806,"column_start":5,"column_end":68}},{"value":"/ # let int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160725,"byte_end":8160797,"line_start":807,"line_end":807,"column_start":5,"column_end":77}},{"value":"/ let mut int_stream = int_stream.take_while(Result::is_ok);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160802,"byte_end":8160864,"line_start":808,"line_end":808,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160869,"byte_end":8160872,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160877,"byte_end":8160934,"line_start":810,"line_end":810,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160939,"byte_end":8160993,"line_start":811,"line_end":811,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8160998,"byte_end":8161005,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8161010,"byte_end":8161017,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"time\"))","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8161022,"byte_end":8161051,"line_start":814,"line_end":814,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":4667},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":4668},{"krate":0,"index":4678},{"krate":0,"index":4679},{"krate":0,"index":4680},{"krate":0,"index":4681},{"krate":0,"index":4868},{"krate":0,"index":5295},{"krate":0,"index":5376},{"krate":0,"index":5377},{"krate":0,"index":5378},{"krate":0,"index":5379},{"krate":0,"index":5380},{"krate":0,"index":5381},{"krate":0,"index":5430},{"krate":0,"index":5431},{"krate":0,"index":5550},{"krate":0,"index":5641},{"krate":0,"index":5779},{"krate":0,"index":5804},{"krate":0,"index":5805},{"krate":0,"index":5806},{"krate":0,"index":5807},{"krate":0,"index":5808},{"krate":0,"index":5861},{"krate":0,"index":5862},{"krate":0,"index":5863},{"krate":0,"index":5864},{"krate":0,"index":5865},{"krate":0,"index":5910},{"krate":0,"index":5911}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"! Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8239818,"byte_end":8239882,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8239883,"byte_end":8239886,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8239887,"byte_end":8239962,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! operates independently and may be executed on separate physical threads. The","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8239963,"byte_end":8240043,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! synchronization primitives provided in this module permit these independent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240044,"byte_end":8240123,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"! tasks to communicate together.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240124,"byte_end":8240158,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240159,"byte_end":8240162,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! [tasks]: crate::task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240163,"byte_end":8240187,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240188,"byte_end":8240191,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! # Message passing","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240192,"byte_end":8240213,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240214,"byte_end":8240217,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! The most common form of synchronization in a Tokio program is message","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240218,"byte_end":8240291,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"! passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240292,"byte_end":8240371,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"! synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240372,"byte_end":8240441,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240442,"byte_end":8240445,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240446,"byte_end":8240525,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"! message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240526,"byte_end":8240603,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"! few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240604,"byte_end":8240679,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"! different message passing patterns. When a channel supports multiple","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240680,"byte_end":8240752,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"! producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240753,"byte_end":8240825,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"! supports muliple consumers, many different separate tasks may **receive**","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240826,"byte_end":8240903,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"! messages.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240904,"byte_end":8240917,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240918,"byte_end":8240921,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Tokio provides many different channel flavors as different message passing","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8240922,"byte_end":8241000,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"! patterns are best handled with different implementations.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241001,"byte_end":8241062,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241063,"byte_end":8241066,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! ## `oneshot` channel","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241067,"byte_end":8241091,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241092,"byte_end":8241095,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241096,"byte_end":8241175,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"! single producer to a single consumer. This channel is usually used to send","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241176,"byte_end":8241254,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"! the result of a computation to a waiter.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241255,"byte_end":8241299,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241300,"byte_end":8241303,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241304,"byte_end":8241384,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"! computation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241385,"byte_end":8241401,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241402,"byte_end":8241405,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241406,"byte_end":8241413,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241414,"byte_end":8241443,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241444,"byte_end":8241447,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241448,"byte_end":8241491,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"!     \"represents the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241492,"byte_end":8241554,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241555,"byte_end":8241560,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241561,"byte_end":8241564,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241565,"byte_end":8241583,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241584,"byte_end":8241605,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"!     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241606,"byte_end":8241648,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241649,"byte_end":8241652,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241653,"byte_end":8241686,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"!         let res = some_computation().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241687,"byte_end":8241734,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"!         tx.send(res).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241735,"byte_end":8241769,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"!     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241770,"byte_end":8241781,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241782,"byte_end":8241785,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"!     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241786,"byte_end":8241863,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241864,"byte_end":8241867,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"!     // Wait for the computation result","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241868,"byte_end":8241910,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"!     let res = rx.await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241911,"byte_end":8241947,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241948,"byte_end":8241953,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241954,"byte_end":8241961,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241962,"byte_end":8241965,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! Note, if the task produces a computation result as its final","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8241966,"byte_end":8242030,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"! action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242031,"byte_end":8242095,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"! receive that value instead of allocating resources for the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242096,"byte_end":8242158,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"! `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242159,"byte_end":8242229,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"! the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242230,"byte_end":8242295,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"! cause.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242296,"byte_end":8242306,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242307,"byte_end":8242310,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! **Example:**","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242311,"byte_end":8242327,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242328,"byte_end":8242331,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242332,"byte_end":8242339,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"! async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242340,"byte_end":8242383,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"!     \"the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242384,"byte_end":8242435,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242436,"byte_end":8242441,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242442,"byte_end":8242445,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242446,"byte_end":8242464,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242465,"byte_end":8242486,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"!     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242487,"byte_end":8242538,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"!         some_computation().await","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242539,"byte_end":8242575,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"!     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242576,"byte_end":8242587,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242588,"byte_end":8242591,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"!     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242592,"byte_end":8242669,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242670,"byte_end":8242673,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"!     // Wait for the computation result","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242674,"byte_end":8242716,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"!     let res = join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242717,"byte_end":8242762,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242763,"byte_end":8242768,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242769,"byte_end":8242776,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242777,"byte_end":8242780,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! [oneshot]: oneshot","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242781,"byte_end":8242803,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242804,"byte_end":8242847,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242848,"byte_end":8242851,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! ## `mpsc` channel","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242852,"byte_end":8242873,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242874,"byte_end":8242877,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"! The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242878,"byte_end":8242955,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"! producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8242956,"byte_end":8243036,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"! task or to receive the result of many computations.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243037,"byte_end":8243092,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243093,"byte_end":8243096,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243097,"byte_end":8243175,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"! of computations.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243176,"byte_end":8243196,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243197,"byte_end":8243200,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243201,"byte_end":8243208,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243209,"byte_end":8243235,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243236,"byte_end":8243239,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! async fn some_computation(input: u32) -> String {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243240,"byte_end":8243293,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"!     format!(\"the result of computation {}\", input)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243294,"byte_end":8243348,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243349,"byte_end":8243354,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243355,"byte_end":8243358,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243359,"byte_end":8243377,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243378,"byte_end":8243399,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"!     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243400,"byte_end":8243450,"line_start":109,"line_end":109,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243451,"byte_end":8243454,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243455,"byte_end":8243488,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"!         for i in 0..10 {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243489,"byte_end":8243517,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"!             let res = some_computation(i).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243518,"byte_end":8243570,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"!             tx.send(res).await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243571,"byte_end":8243615,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"!         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243616,"byte_end":8243629,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243630,"byte_end":8243641,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243642,"byte_end":8243645,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"!     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243646,"byte_end":8243693,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"!         println!(\"got = {}\", res);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243694,"byte_end":8243732,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"!     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243733,"byte_end":8243742,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243743,"byte_end":8243748,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243749,"byte_end":8243756,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243757,"byte_end":8243760,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243761,"byte_end":8243841,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"! number of values that can be stored in the channel pending receipt at any","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243842,"byte_end":8243919,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"! given time. Properly setting this value is key in implementing robust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243920,"byte_end":8243993,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"! programs as the channel capacity plays a critical part in handling back","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8243994,"byte_end":8244069,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"! pressure.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244070,"byte_end":8244083,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244084,"byte_end":8244087,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"! A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244088,"byte_end":8244163,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"! dedicated to managing that resource and using message passing between other","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244164,"byte_end":8244243,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"! tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244244,"byte_end":8244322,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"! not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244323,"byte_end":8244402,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"! For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244403,"byte_end":8244483,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"! a task to manage the socket and use a channel to synchronize.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244484,"byte_end":8244549,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244550,"byte_end":8244553,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244554,"byte_end":8244634,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"! passing.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244635,"byte_end":8244647,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244648,"byte_end":8244651,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244652,"byte_end":8244665,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244666,"byte_end":8244707,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"! use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244708,"byte_end":8244738,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"! use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244739,"byte_end":8244765,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244766,"byte_end":8244769,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244770,"byte_end":8244788,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244789,"byte_end":8244828,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"!     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244829,"byte_end":8244904,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"!     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244905,"byte_end":8244951,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244952,"byte_end":8244955,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"!     for _ in 0..10 {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244956,"byte_end":8244980,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"!         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8244981,"byte_end":8245060,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"!         // original handle.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245061,"byte_end":8245092,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"!         let mut tx = tx.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245093,"byte_end":8245129,"line_start":153,"line_end":153,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245130,"byte_end":8245133,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245134,"byte_end":8245171,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"!             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245172,"byte_end":8245234,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"!         });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245235,"byte_end":8245250,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245251,"byte_end":8245260,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245261,"byte_end":8245264,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"!     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245265,"byte_end":8245344,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"!     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245345,"byte_end":8245420,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"!     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245421,"byte_end":8245499,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"!     // be a single outstanding `tx` handle.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245500,"byte_end":8245547,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"!     drop(tx);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245548,"byte_end":8245565,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245566,"byte_end":8245569,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"!     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245570,"byte_end":8245617,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"!         socket.write_all(res).await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245618,"byte_end":8245659,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"!     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245660,"byte_end":8245669,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245670,"byte_end":8245673,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245674,"byte_end":8245688,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245689,"byte_end":8245694,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245695,"byte_end":8245702,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245703,"byte_end":8245706,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"! The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245707,"byte_end":8245782,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"! provide a request / response type synchronization pattern with a shared","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245783,"byte_end":8245858,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"! resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245859,"byte_end":8245938,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"! received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8245939,"byte_end":8246004,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"! [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246005,"byte_end":8246082,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246083,"byte_end":8246086,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"! **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246087,"byte_end":8246165,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"! \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246166,"byte_end":8246246,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"! sent over the provided `oneshot` channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246247,"byte_end":8246292,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246293,"byte_end":8246296,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246297,"byte_end":8246304,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::{oneshot, mpsc};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246305,"byte_end":8246342,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"! use Command::Increment;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246343,"byte_end":8246370,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246371,"byte_end":8246374,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"! enum Command {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246375,"byte_end":8246393,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"!     Increment,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246394,"byte_end":8246412,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"!     // Other commands can be added here","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246413,"byte_end":8246456,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246457,"byte_end":8246462,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246463,"byte_end":8246466,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246467,"byte_end":8246485,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246486,"byte_end":8246507,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"!     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246508,"byte_end":8246597,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246598,"byte_end":8246601,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"!     // Spawn a task to manage the counter","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246602,"byte_end":8246647,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246648,"byte_end":8246681,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"!         let mut counter: u64 = 0;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246682,"byte_end":8246719,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246720,"byte_end":8246723,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"!         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246724,"byte_end":8246791,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"!             match cmd {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246792,"byte_end":8246819,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"!                 Increment => {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246820,"byte_end":8246854,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"!                     let prev = counter;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246855,"byte_end":8246898,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"!                     counter += 1;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246899,"byte_end":8246936,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"!                     response.send(prev).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246937,"byte_end":8246990,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"!                 }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8246991,"byte_end":8247012,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247013,"byte_end":8247030,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"!         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247031,"byte_end":8247044,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247045,"byte_end":8247056,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247057,"byte_end":8247060,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"!     let mut join_handles = vec![];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247061,"byte_end":8247099,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247100,"byte_end":8247103,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"!     // Spawn tasks that will send the increment command.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247104,"byte_end":8247164,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"!     for _ in 0..10 {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247165,"byte_end":8247189,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"!         let mut cmd_tx = cmd_tx.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247190,"byte_end":8247234,"line_start":216,"line_end":216,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247235,"byte_end":8247238,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"!         join_handles.push(tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247239,"byte_end":8247294,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"!             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247295,"byte_end":8247355,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247356,"byte_end":8247359,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"!             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247360,"byte_end":8247430,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"!             let res = resp_rx.await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247431,"byte_end":8247480,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247481,"byte_end":8247484,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"!             println!(\"previous value = {}\", res);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247485,"byte_end":8247538,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"!         }));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247539,"byte_end":8247555,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"!     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247556,"byte_end":8247565,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247566,"byte_end":8247569,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"!     // Wait for all tasks to complete","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247570,"byte_end":8247611,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"!     for join_handle in join_handles.drain(..) {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247612,"byte_end":8247663,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"!         join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247664,"byte_end":8247703,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"!     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247704,"byte_end":8247713,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247714,"byte_end":8247719,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247720,"byte_end":8247727,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247728,"byte_end":8247731,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"! [mpsc]: mpsc","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247732,"byte_end":8247748,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247749,"byte_end":8247752,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"! ## `broadcast` channel","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247753,"byte_end":8247779,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247780,"byte_end":8247783,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"! The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247784,"byte_end":8247851,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"! **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247852,"byte_end":8247924,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"! **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247925,"byte_end":8247998,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"! patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8247999,"byte_end":8248052,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248053,"byte_end":8248056,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"! This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248057,"byte_end":8248137,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"! has its use cases.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248138,"byte_end":8248160,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248161,"byte_end":8248164,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"! Basic usage","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248165,"byte_end":8248180,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248181,"byte_end":8248184,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248185,"byte_end":8248192,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248193,"byte_end":8248224,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248225,"byte_end":8248228,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248229,"byte_end":8248247,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248248,"byte_end":8248269,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248270,"byte_end":8248321,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"!     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248322,"byte_end":8248359,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248360,"byte_end":8248363,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248364,"byte_end":8248397,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248398,"byte_end":8248452,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248453,"byte_end":8248507,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248508,"byte_end":8248519,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248520,"byte_end":8248523,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248524,"byte_end":8248557,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248558,"byte_end":8248612,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248613,"byte_end":8248667,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248668,"byte_end":8248679,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248680,"byte_end":8248683,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248684,"byte_end":8248713,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248714,"byte_end":8248743,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248744,"byte_end":8248749,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248750,"byte_end":8248757,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248758,"byte_end":8248761,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"! [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248762,"byte_end":8248811,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248812,"byte_end":8248815,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"! ## `watch` channel","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248816,"byte_end":8248838,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248839,"byte_end":8248842,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"! The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248843,"byte_end":8248919,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"! producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248920,"byte_end":8248998,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"! stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8248999,"byte_end":8249078,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"! there is no guarantee that consumers will see **all** values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249079,"byte_end":8249144,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249145,"byte_end":8249148,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"! The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249149,"byte_end":8249229,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249230,"byte_end":8249233,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"! Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249234,"byte_end":8249308,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"! changes or signalling program state changes, such as transitioning to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249309,"byte_end":8249382,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"! shutdown.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249383,"byte_end":8249396,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249397,"byte_end":8249400,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"! **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249401,"byte_end":8249474,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"! changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249475,"byte_end":8249555,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"! the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249556,"byte_end":8249631,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249632,"byte_end":8249635,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249636,"byte_end":8249643,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249644,"byte_end":8249671,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"! use tokio::time::{self, Duration, Instant};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249672,"byte_end":8249719,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249720,"byte_end":8249723,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"! use std::io;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249724,"byte_end":8249740,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249741,"byte_end":8249744,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"! #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249745,"byte_end":8249787,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"! struct Config {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249788,"byte_end":8249807,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"!     timeout: Duration,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249808,"byte_end":8249834,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249835,"byte_end":8249840,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249841,"byte_end":8249844,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"! impl Config {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249845,"byte_end":8249862,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"!     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249863,"byte_end":8249920,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"!         // file loading and deserialization logic here","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249921,"byte_end":8249979,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"! # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8249980,"byte_end":8250032,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"!     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250033,"byte_end":8250042,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250043,"byte_end":8250048,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250049,"byte_end":8250052,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"! async fn my_async_operation() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250053,"byte_end":8250088,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"!     // Do something here","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250089,"byte_end":8250117,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250118,"byte_end":8250123,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250124,"byte_end":8250127,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250128,"byte_end":8250146,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250147,"byte_end":8250168,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"!     // Load initial configuration value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250169,"byte_end":8250212,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"!     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250213,"byte_end":8250278,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250279,"byte_end":8250282,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"!     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250283,"byte_end":8250361,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"!     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250362,"byte_end":8250416,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250417,"byte_end":8250420,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"!     // Spawn a task to monitor the file.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250421,"byte_end":8250465,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250466,"byte_end":8250499,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"!         loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250500,"byte_end":8250518,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"!             // Wait 10 seconds between checks","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250519,"byte_end":8250568,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"!             time::delay_for(Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250569,"byte_end":8250632,"line_start":325,"line_end":325,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250633,"byte_end":8250636,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"!             // Load the configuration file","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250637,"byte_end":8250683,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"!             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250684,"byte_end":8250757,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250758,"byte_end":8250761,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"!             // If the configuration changed, send the new config value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250762,"byte_end":8250836,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"!             // on the watch channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250837,"byte_end":8250877,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"!             if new_config != config {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250878,"byte_end":8250919,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"!                 tx.broadcast(new_config.clone()).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250920,"byte_end":8250982,"line_start":333,"line_end":333,"column_start":1,"column_end":63}},{"value":"!                 config = new_config;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8250983,"byte_end":8251023,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"!             }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251024,"byte_end":8251041,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"!         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251042,"byte_end":8251055,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251056,"byte_end":8251067,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251068,"byte_end":8251071,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"!     let mut handles = vec![];","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251072,"byte_end":8251105,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251106,"byte_end":8251109,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"!     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251110,"byte_end":8251188,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"!     // the timeout elapses, restart the operation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251189,"byte_end":8251243,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"!     //","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251244,"byte_end":8251254,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"!     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251255,"byte_end":8251332,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"!     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251333,"byte_end":8251411,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"!     // the in-flight operation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251412,"byte_end":8251447,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"!     for _ in 0..5 {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251448,"byte_end":8251471,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"!         // Clone a config watch handle for use in this task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251472,"byte_end":8251535,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"!         let mut rx = rx.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251536,"byte_end":8251572,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251573,"byte_end":8251576,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"!         let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251577,"byte_end":8251627,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"!             // Start the initial operation and pin the future to the stack.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251628,"byte_end":8251707,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"!             // Pinning to the stack is required to resume the operation","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251708,"byte_end":8251783,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"!             // across multiple calls to `select!`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251784,"byte_end":8251837,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"!             let op = my_async_operation();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251838,"byte_end":8251884,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"!             tokio::pin!(op);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251885,"byte_end":8251917,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251918,"byte_end":8251921,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"!             // Receive the **initial** configuration value. As this is the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8251922,"byte_end":8252000,"line_start":358,"line_end":358,"column_start":1,"column_end":79}},{"value":"!             // first time the config is received from the watch, it will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252001,"byte_end":8252077,"line_start":359,"line_end":359,"column_start":1,"column_end":77}},{"value":"!             // always complete immediatedly.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252078,"byte_end":8252126,"line_start":360,"line_end":360,"column_start":1,"column_end":49}},{"value":"!             let mut conf = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252127,"byte_end":8252183,"line_start":361,"line_end":361,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252184,"byte_end":8252187,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"!             let mut op_start = Instant::now();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252188,"byte_end":8252238,"line_start":363,"line_end":363,"column_start":1,"column_end":51}},{"value":"!             let mut delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252239,"byte_end":8252314,"line_start":364,"line_end":364,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252315,"byte_end":8252318,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"!             loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252319,"byte_end":8252341,"line_start":366,"line_end":366,"column_start":1,"column_end":23}},{"value":"!                 tokio::select! {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252342,"byte_end":8252378,"line_start":367,"line_end":367,"column_start":1,"column_end":37}},{"value":"!                     _ = &mut delay => {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252379,"byte_end":8252422,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"!                         // The operation elapsed. Restart it","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252423,"byte_end":8252487,"line_start":369,"line_end":369,"column_start":1,"column_end":65}},{"value":"!                         op.set(my_async_operation());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252488,"byte_end":8252545,"line_start":370,"line_end":370,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252546,"byte_end":8252549,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"!                         // Track the new start time","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252550,"byte_end":8252605,"line_start":372,"line_end":372,"column_start":1,"column_end":56}},{"value":"!                         op_start = Instant::now();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252606,"byte_end":8252660,"line_start":373,"line_end":373,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252661,"byte_end":8252664,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"!                         // Restart the timeout","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252665,"byte_end":8252715,"line_start":375,"line_end":375,"column_start":1,"column_end":51}},{"value":"!                         delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252716,"byte_end":8252795,"line_start":376,"line_end":376,"column_start":1,"column_end":80}},{"value":"!                     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252796,"byte_end":8252821,"line_start":377,"line_end":377,"column_start":1,"column_end":26}},{"value":"!                     new_conf = rx.recv() => {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252822,"byte_end":8252871,"line_start":378,"line_end":378,"column_start":1,"column_end":50}},{"value":"!                         conf = new_conf.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252872,"byte_end":8252925,"line_start":379,"line_end":379,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252926,"byte_end":8252929,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"!                         // The configuration has been updated. Update the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8252930,"byte_end":8253007,"line_start":381,"line_end":381,"column_start":1,"column_end":78}},{"value":"!                         // `delay` using the new `timeout` value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253008,"byte_end":8253077,"line_start":382,"line_end":382,"column_start":1,"column_end":70}},{"value":"!                         delay.reset(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253078,"byte_end":8253143,"line_start":383,"line_end":383,"column_start":1,"column_end":66}},{"value":"!                     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253144,"byte_end":8253169,"line_start":384,"line_end":384,"column_start":1,"column_end":26}},{"value":"!                     _ = &mut op => {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253170,"byte_end":8253210,"line_start":385,"line_end":385,"column_start":1,"column_end":41}},{"value":"!                         // The operation completed!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253211,"byte_end":8253266,"line_start":386,"line_end":386,"column_start":1,"column_end":56}},{"value":"!                         return","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253267,"byte_end":8253301,"line_start":387,"line_end":387,"column_start":1,"column_end":35}},{"value":"!                     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253302,"byte_end":8253327,"line_start":388,"line_end":388,"column_start":1,"column_end":26}},{"value":"!                 }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253328,"byte_end":8253349,"line_start":389,"line_end":389,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253350,"byte_end":8253367,"line_start":390,"line_end":390,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253368,"byte_end":8253383,"line_start":391,"line_end":391,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253384,"byte_end":8253387,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"!         handles.push(handle);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253388,"byte_end":8253421,"line_start":393,"line_end":393,"column_start":1,"column_end":34}},{"value":"!     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253422,"byte_end":8253431,"line_start":394,"line_end":394,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253432,"byte_end":8253435,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"!     for handle in handles.drain(..) {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253436,"byte_end":8253477,"line_start":396,"line_end":396,"column_start":1,"column_end":42}},{"value":"!         handle.await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253478,"byte_end":8253512,"line_start":397,"line_end":397,"column_start":1,"column_end":35}},{"value":"!     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253513,"byte_end":8253522,"line_start":398,"line_end":398,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253523,"byte_end":8253528,"line_start":399,"line_end":399,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253529,"byte_end":8253536,"line_start":400,"line_end":400,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253537,"byte_end":8253540,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"! [`watch` channel]: crate::sync::watch","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253541,"byte_end":8253582,"line_start":402,"line_end":402,"column_start":1,"column_end":42}},{"value":"! [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253583,"byte_end":8253632,"line_start":403,"line_end":403,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253633,"byte_end":8253636,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"! # State synchronization","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253637,"byte_end":8253664,"line_start":405,"line_end":405,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253665,"byte_end":8253668,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"! The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253669,"byte_end":8253743,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"! These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253744,"byte_end":8253818,"line_start":408,"line_end":408,"column_start":1,"column_end":75}},{"value":"! operate in a similar way as their `std` counterparts parts but will wait","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253819,"byte_end":8253895,"line_start":409,"line_end":409,"column_start":1,"column_end":77}},{"value":"! asynchronously instead of blocking the thread.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253896,"byte_end":8253946,"line_start":410,"line_end":410,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253947,"byte_end":8253950,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"! * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8253951,"byte_end":8254028,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"!   reach a point in the program, before continuing execution all together.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254029,"byte_end":8254106,"line_start":413,"line_end":413,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254107,"byte_end":8254110,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"! * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254111,"byte_end":8254188,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"!   one thread at a time is able to access some data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254189,"byte_end":8254244,"line_start":416,"line_end":416,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254245,"byte_end":8254248,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"! * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254249,"byte_end":8254328,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"!   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254329,"byte_end":8254407,"line_start":419,"line_end":419,"column_start":1,"column_end":79}},{"value":"!   resumes processing.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254408,"byte_end":8254433,"line_start":420,"line_end":420,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254434,"byte_end":8254437,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"! * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254438,"byte_end":8254513,"line_start":422,"line_end":422,"column_start":1,"column_end":76}},{"value":"!   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254514,"byte_end":8254590,"line_start":423,"line_end":423,"column_start":1,"column_end":77}},{"value":"!   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254591,"byte_end":8254658,"line_start":424,"line_end":424,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254659,"byte_end":8254662,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"! * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254663,"byte_end":8254739,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"!   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254740,"byte_end":8254816,"line_start":427,"line_end":427,"column_start":1,"column_end":77}},{"value":"!   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254817,"byte_end":8254891,"line_start":428,"line_end":428,"column_start":1,"column_end":75}},{"value":"!   bounding of any kind.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8254892,"byte_end":8254919,"line_start":429,"line_end":429,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5999},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8257053,"byte_end":8257060,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":6000},{"krate":0,"index":6001},{"krate":0,"index":6002}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256100,"byte_end":8256188,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256189,"byte_end":8256192,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256193,"byte_end":8256200,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256201,"byte_end":8256221,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256222,"byte_end":8256245,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256246,"byte_end":8256275,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256276,"byte_end":8256279,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256280,"byte_end":8256314,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256315,"byte_end":8256338,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256339,"byte_end":8256342,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256343,"byte_end":8256388,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256389,"byte_end":8256434,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256435,"byte_end":8256455,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256456,"byte_end":8256488,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256489,"byte_end":8256543,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256544,"byte_end":8256589,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256590,"byte_end":8256623,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256624,"byte_end":8256660,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256661,"byte_end":8256697,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256698,"byte_end":8256733,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256734,"byte_end":8256748,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256749,"byte_end":8256760,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256761,"byte_end":8256766,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256767,"byte_end":8256841,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256842,"byte_end":8256880,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256881,"byte_end":8256936,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8256937,"byte_end":8257008,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8257009,"byte_end":8257016,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8257017,"byte_end":8257024,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4672},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8257523,"byte_end":8257526,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8257283,"byte_end":8257350,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8257355,"byte_end":8257358,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8257363,"byte_end":8257451,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8257456,"byte_end":8257511,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4673},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8258599,"byte_end":8258603,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8258125,"byte_end":8258185,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8258190,"byte_end":8258193,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8258198,"byte_end":8258274,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8258279,"byte_end":8258304,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8258309,"byte_end":8258312,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8258317,"byte_end":8258410,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8258415,"byte_end":8258508,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8258513,"byte_end":8258581,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":6011},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8260525,"byte_end":8260542,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8260389,"byte_end":8260489,"line_start":124,"line_end":124,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":4677},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8260790,"byte_end":8260799,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8260580,"byte_end":8260647,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8260652,"byte_end":8260655,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8260660,"byte_end":8260752,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8260757,"byte_end":8260778,"line_start":132,"line_end":132,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":4681},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":4682},{"krate":0,"index":4683},{"krate":0,"index":4684},{"krate":0,"index":4685},{"krate":0,"index":4686},{"krate":0,"index":4687},{"krate":0,"index":4688},{"krate":0,"index":4689},{"krate":0,"index":4690},{"krate":0,"index":4691},{"krate":0,"index":4692},{"krate":0,"index":4693},{"krate":0,"index":4694},{"krate":0,"index":12350},{"krate":0,"index":4695},{"krate":0,"index":4696},{"krate":0,"index":4697},{"krate":0,"index":12356},{"krate":0,"index":4698},{"krate":0,"index":4699},{"krate":0,"index":4700},{"krate":0,"index":4701},{"krate":0,"index":4702},{"krate":0,"index":4703},{"krate":0,"index":4706},{"krate":0,"index":6018},{"krate":0,"index":6022},{"krate":0,"index":6025},{"krate":0,"index":6035},{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6037},{"krate":0,"index":6049},{"krate":0,"index":6045},{"krate":0,"index":6046},{"krate":0,"index":4711},{"krate":0,"index":4717},{"krate":0,"index":4722},{"krate":0,"index":4728},{"krate":0,"index":4733},{"krate":0,"index":4737},{"krate":0,"index":4743},{"krate":0,"index":4747},{"krate":0,"index":4750},{"krate":0,"index":4754},{"krate":0,"index":4757},{"krate":0,"index":4760},{"krate":0,"index":4761},{"krate":0,"index":4763},{"krate":0,"index":4765},{"krate":0,"index":4767},{"krate":0,"index":4769},{"krate":0,"index":4771},{"krate":0,"index":4780},{"krate":0,"index":4782},{"krate":0,"index":4785},{"krate":0,"index":4788},{"krate":0,"index":4792},{"krate":0,"index":4812},{"krate":0,"index":4817},{"krate":0,"index":4822},{"krate":0,"index":4827},{"krate":0,"index":6051},{"krate":0,"index":6052},{"krate":0,"index":6056},{"krate":0,"index":4832},{"krate":0,"index":4838},{"krate":0,"index":4844},{"krate":0,"index":4847},{"krate":0,"index":4850},{"krate":0,"index":4855},{"krate":0,"index":4860},{"krate":0,"index":4862},{"krate":0,"index":4863},{"krate":0,"index":4865},{"krate":0,"index":4866}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"! A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8260841,"byte_end":8260921,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"! all consumers.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8260922,"byte_end":8260940,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8260941,"byte_end":8260944,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8260945,"byte_end":8261023,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261024,"byte_end":8261099,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261100,"byte_end":8261178,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"! long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261179,"byte_end":8261233,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261234,"byte_end":8261237,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261238,"byte_end":8261314,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"! receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261315,"byte_end":8261395,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"! demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261396,"byte_end":8261473,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"! value, the value is released from the channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261474,"byte_end":8261524,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261525,"byte_end":8261528,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261529,"byte_end":8261607,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"! of messages the channel can retain at any given time.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261608,"byte_end":8261665,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261666,"byte_end":8261669,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261670,"byte_end":8261748,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"! returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261749,"byte_end":8261821,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"! `subscribe`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261822,"byte_end":8261838,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261839,"byte_end":8261842,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! ## Lagging","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261843,"byte_end":8261857,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261858,"byte_end":8261861,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261862,"byte_end":8261942,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"! a clone, broadcast channels are suspectible to the \"slow receiver\" problem.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8261943,"byte_end":8262022,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"! In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262023,"byte_end":8262100,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"! they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262101,"byte_end":8262179,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"! up.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262180,"byte_end":8262187,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262188,"byte_end":8262191,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262192,"byte_end":8262269,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"! upper bound on the number of values the channel may retain at any given","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262270,"byte_end":8262345,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"! time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262346,"byte_end":8262426,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262427,"byte_end":8262430,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262431,"byte_end":8262503,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"! currently held by the channel is released. This frees up space for the new","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262504,"byte_end":8262582,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"! value. Any receiver that has not yet seen the released value will return","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262583,"byte_end":8262659,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"! [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262660,"byte_end":8262719,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262720,"byte_end":8262723,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262724,"byte_end":8262802,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"! updated to the oldest value contained by the channel. The next call to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262803,"byte_end":8262877,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"! [`recv`] will return this value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262878,"byte_end":8262914,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262915,"byte_end":8262918,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262919,"byte_end":8262998,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"! that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8262999,"byte_end":8263076,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"! either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263077,"byte_end":8263152,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"! consumption of the channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263153,"byte_end":8263184,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263185,"byte_end":8263188,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! ## Closing","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263189,"byte_end":8263203,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263204,"byte_end":8263207,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263208,"byte_end":8263283,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"! sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263284,"byte_end":8263362,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"! all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263363,"byte_end":8263440,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"! with [`RecvError::Closed`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263441,"byte_end":8263472,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263473,"byte_end":8263476,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263477,"byte_end":8263523,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"! [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263524,"byte_end":8263592,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"! [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263593,"byte_end":8263643,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"! [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263644,"byte_end":8263692,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"! [`RecvError::Lagged`]: crate::sync::broadcast::RecvError::Lagged","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263693,"byte_end":8263761,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"! [`RecvError::Closed`]: crate::sync::broadcast::RecvError::Closed","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263762,"byte_end":8263830,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"! [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263831,"byte_end":8263883,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263884,"byte_end":8263887,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263888,"byte_end":8263902,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263903,"byte_end":8263906,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! Basic usage","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263907,"byte_end":8263922,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263923,"byte_end":8263926,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263927,"byte_end":8263934,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263935,"byte_end":8263966,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263967,"byte_end":8263970,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263971,"byte_end":8263989,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8263990,"byte_end":8264011,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264012,"byte_end":8264063,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"!     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264064,"byte_end":8264101,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264102,"byte_end":8264105,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264106,"byte_end":8264139,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264140,"byte_end":8264194,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264195,"byte_end":8264249,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264250,"byte_end":8264261,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264262,"byte_end":8264265,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264266,"byte_end":8264299,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264300,"byte_end":8264354,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264355,"byte_end":8264409,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264410,"byte_end":8264421,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264422,"byte_end":8264425,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264426,"byte_end":8264455,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264456,"byte_end":8264485,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264486,"byte_end":8264491,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264492,"byte_end":8264499,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264500,"byte_end":8264503,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! Handling lag","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264504,"byte_end":8264520,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264521,"byte_end":8264524,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264525,"byte_end":8264532,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264533,"byte_end":8264564,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264565,"byte_end":8264568,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264569,"byte_end":8264587,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264588,"byte_end":8264609,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264610,"byte_end":8264659,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264660,"byte_end":8264663,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264664,"byte_end":8264693,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264694,"byte_end":8264723,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"!     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264724,"byte_end":8264753,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264754,"byte_end":8264757,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"!     // The receiver lagged behind","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264758,"byte_end":8264795,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"!     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264796,"byte_end":8264838,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264839,"byte_end":8264842,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"!     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264843,"byte_end":8264912,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264913,"byte_end":8264916,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"!     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264917,"byte_end":8264966,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"!     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8264967,"byte_end":8265016,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265017,"byte_end":8265022,"line_start":109,"line_end":109,"column_start":1,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":4703},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266219,"byte_end":8266225,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":4705}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265426,"byte_end":8265472,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265473,"byte_end":8265476,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265477,"byte_end":8265537,"line_start":127,"line_end":127,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265538,"byte_end":8265565,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265566,"byte_end":8265569,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265570,"byte_end":8265584,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265585,"byte_end":8265588,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265589,"byte_end":8265596,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265597,"byte_end":8265628,"line_start":133,"line_end":133,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265629,"byte_end":8265632,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265633,"byte_end":8265651,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265652,"byte_end":8265673,"line_start":136,"line_end":136,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265674,"byte_end":8265725,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265726,"byte_end":8265763,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265764,"byte_end":8265767,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265768,"byte_end":8265801,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265802,"byte_end":8265856,"line_start":141,"line_end":141,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265857,"byte_end":8265911,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265912,"byte_end":8265923,"line_start":143,"line_end":143,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265924,"byte_end":8265927,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265928,"byte_end":8265961,"line_start":145,"line_end":145,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8265962,"byte_end":8266016,"line_start":146,"line_end":146,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266017,"byte_end":8266071,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266072,"byte_end":8266083,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266084,"byte_end":8266087,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266088,"byte_end":8266117,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266118,"byte_end":8266147,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266148,"byte_end":8266153,"line_start":152,"line_end":152,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266154,"byte_end":8266161,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266162,"byte_end":8266165,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266166,"byte_end":8266207,"line_start":155,"line_end":155,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4706},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267065,"byte_end":8267073,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":4708},{"krate":0,"index":4709},{"krate":0,"index":4710}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266262,"byte_end":8266310,"line_start":160,"line_end":160,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266311,"byte_end":8266314,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266315,"byte_end":8266381,"line_start":162,"line_end":162,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266382,"byte_end":8266411,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266412,"byte_end":8266415,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266416,"byte_end":8266430,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266431,"byte_end":8266434,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266435,"byte_end":8266442,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266443,"byte_end":8266474,"line_start":168,"line_end":168,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266475,"byte_end":8266478,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266479,"byte_end":8266497,"line_start":170,"line_end":170,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266498,"byte_end":8266519,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266520,"byte_end":8266571,"line_start":172,"line_end":172,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266572,"byte_end":8266609,"line_start":173,"line_end":173,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266610,"byte_end":8266613,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266614,"byte_end":8266647,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266648,"byte_end":8266702,"line_start":176,"line_end":176,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266703,"byte_end":8266757,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266758,"byte_end":8266769,"line_start":178,"line_end":178,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266770,"byte_end":8266773,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266774,"byte_end":8266807,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266808,"byte_end":8266862,"line_start":181,"line_end":181,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266863,"byte_end":8266917,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266918,"byte_end":8266929,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266930,"byte_end":8266933,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266934,"byte_end":8266963,"line_start":185,"line_end":185,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266964,"byte_end":8266993,"line_start":186,"line_end":186,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8266994,"byte_end":8266999,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267000,"byte_end":8267007,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267008,"byte_end":8267011,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267012,"byte_end":8267053,"line_start":190,"line_end":190,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6018},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267616,"byte_end":8267625,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::broadcast::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::send`][Sender::send].","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::send`][Sender::send].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267319,"byte_end":8267372,"line_start":202,"line_end":202,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267373,"byte_end":8267376,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267377,"byte_end":8267449,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267450,"byte_end":8267527,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267528,"byte_end":8267587,"line_start":206,"line_end":206,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6021},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267629,"byte_end":8267634,"line_start":208,"line_end":208,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::broadcast::SendError::0","value":"T","parent":{"krate":0,"index":6018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6026},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267964,"byte_end":8267970,"line_start":218,"line_end":218,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":6025},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267867,"byte_end":8267942,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267947,"byte_end":8267959,"line_start":217,"line_end":217,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6028},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268176,"byte_end":8268182,"line_start":224,"line_end":224,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":6025},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267977,"byte_end":8268049,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268054,"byte_end":8268114,"line_start":221,"line_end":221,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268119,"byte_end":8268122,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268127,"byte_end":8268171,"line_start":223,"line_end":223,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":6025},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267851,"byte_end":8267860,"line_start":215,"line_end":215,"column_start":10,"column_end":19},"name":"RecvError","qualname":"::sync::broadcast::RecvError","value":"pub enum RecvError {\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind. Attempting to receive again will\n    /// return the oldest message still retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":6026},{"krate":0,"index":6028}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267638,"byte_end":8267705,"line_start":210,"line_end":210,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267706,"byte_end":8267709,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267710,"byte_end":8267762,"line_start":212,"line_end":212,"column_start":1,"column_end":53}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8267763,"byte_end":8267813,"line_start":213,"line_end":213,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6038},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268569,"byte_end":8268574,"line_start":235,"line_end":235,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::broadcast::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6037},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`][Sender] handles, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268436,"byte_end":8268494,"line_start":233,"line_end":233,"column_start":5,"column_end":63}},{"value":"/ [`Sender`][Sender] handles, so data may yet become available.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268499,"byte_end":8268564,"line_start":234,"line_end":234,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6040},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268678,"byte_end":8268684,"line_start":239,"line_end":239,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6037},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268581,"byte_end":8268656,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268661,"byte_end":8268673,"line_start":238,"line_end":238,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6042},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268933,"byte_end":8268939,"line_start":246,"line_end":246,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":6037},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268691,"byte_end":8268765,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268770,"byte_end":8268838,"line_start":242,"line_end":242,"column_start":5,"column_end":73}},{"value":"/ retained by the channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268843,"byte_end":8268871,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268876,"byte_end":8268879,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268884,"byte_end":8268928,"line_start":245,"line_end":245,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":6037},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268417,"byte_end":8268429,"line_start":232,"line_end":232,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::broadcast::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The channel is currently empty. There are still active\n    /// [`Sender`][Sender] handles, so data may yet become available.\n    Empty,\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind and has been forcibly disconnected.\n    /// Attempting to receive again will return the oldest message still\n    /// retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":6038},{"krate":0,"index":6040},{"krate":0,"index":6042}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268192,"byte_end":8268263,"line_start":227,"line_end":227,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268264,"byte_end":8268267,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268268,"byte_end":8268328,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8268329,"byte_end":8268379,"line_start":230,"line_end":230,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":4761},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8273240,"byte_end":8273247,"line_start":403,"line_end":403,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8271628,"byte_end":8271704,"line_start":358,"line_end":358,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8271705,"byte_end":8271754,"line_start":359,"line_end":359,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8271755,"byte_end":8271758,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8271759,"byte_end":8271828,"line_start":361,"line_end":361,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8271829,"byte_end":8271879,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8271880,"byte_end":8271883,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8271884,"byte_end":8271958,"line_start":364,"line_end":364,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8271959,"byte_end":8272034,"line_start":365,"line_end":365,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272035,"byte_end":8272103,"line_start":366,"line_end":366,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272104,"byte_end":8272107,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272108,"byte_end":8272184,"line_start":368,"line_end":368,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272185,"byte_end":8272266,"line_start":369,"line_end":369,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272267,"byte_end":8272306,"line_start":370,"line_end":370,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272307,"byte_end":8272310,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272311,"byte_end":8272357,"line_start":372,"line_end":372,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272358,"byte_end":8272426,"line_start":373,"line_end":373,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272427,"byte_end":8272477,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272478,"byte_end":8272530,"line_start":375,"line_end":375,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::SendError","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272531,"byte_end":8272583,"line_start":376,"line_end":376,"column_start":1,"column_end":53}},{"value":"/ [`RecvError`]: crate::sync::broadcast::RecvError","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272584,"byte_end":8272636,"line_start":377,"line_end":377,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272637,"byte_end":8272640,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272641,"byte_end":8272655,"line_start":379,"line_end":379,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272656,"byte_end":8272659,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272660,"byte_end":8272667,"line_start":381,"line_end":381,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272668,"byte_end":8272699,"line_start":382,"line_end":382,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272700,"byte_end":8272703,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272704,"byte_end":8272722,"line_start":384,"line_end":384,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272723,"byte_end":8272744,"line_start":385,"line_end":385,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272745,"byte_end":8272796,"line_start":386,"line_end":386,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272797,"byte_end":8272834,"line_start":387,"line_end":387,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272835,"byte_end":8272838,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272839,"byte_end":8272872,"line_start":389,"line_end":389,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272873,"byte_end":8272927,"line_start":390,"line_end":390,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272928,"byte_end":8272982,"line_start":391,"line_end":391,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272983,"byte_end":8272994,"line_start":392,"line_end":392,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272995,"byte_end":8272998,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8272999,"byte_end":8273032,"line_start":394,"line_end":394,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8273033,"byte_end":8273087,"line_start":395,"line_end":395,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8273088,"byte_end":8273142,"line_start":396,"line_end":396,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8273143,"byte_end":8273154,"line_start":397,"line_end":397,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8273155,"byte_end":8273158,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8273159,"byte_end":8273188,"line_start":399,"line_end":399,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8273189,"byte_end":8273218,"line_start":400,"line_end":400,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8273219,"byte_end":8273224,"line_start":401,"line_end":401,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8273225,"byte_end":8273232,"line_start":402,"line_end":402,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4773},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276314,"byte_end":8276318,"line_start":501,"line_end":501,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274464,"byte_end":8274538,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274543,"byte_end":8274579,"line_start":452,"line_end":452,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274584,"byte_end":8274587,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274592,"byte_end":8274667,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274672,"byte_end":8274738,"line_start":455,"line_end":455,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274743,"byte_end":8274794,"line_start":456,"line_end":456,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274799,"byte_end":8274802,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274807,"byte_end":8274819,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274824,"byte_end":8274827,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274832,"byte_end":8274906,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274911,"byte_end":8274987,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274992,"byte_end":8275045,"line_start":462,"line_end":462,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275050,"byte_end":8275053,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275058,"byte_end":8275068,"line_start":464,"line_end":464,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275073,"byte_end":8275076,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275081,"byte_end":8275153,"line_start":466,"line_end":466,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275158,"byte_end":8275233,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275238,"byte_end":8275299,"line_start":468,"line_end":468,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275304,"byte_end":8275307,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275312,"byte_end":8275385,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275390,"byte_end":8275455,"line_start":471,"line_end":471,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275460,"byte_end":8275478,"line_start":472,"line_end":472,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275483,"byte_end":8275486,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275491,"byte_end":8275541,"line_start":474,"line_end":474,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275546,"byte_end":8275606,"line_start":475,"line_end":475,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275611,"byte_end":8275614,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275619,"byte_end":8275633,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275638,"byte_end":8275641,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275646,"byte_end":8275653,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275658,"byte_end":8275689,"line_start":480,"line_end":480,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275694,"byte_end":8275697,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275702,"byte_end":8275720,"line_start":482,"line_end":482,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275725,"byte_end":8275746,"line_start":483,"line_end":483,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275751,"byte_end":8275802,"line_start":484,"line_end":484,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275807,"byte_end":8275844,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275849,"byte_end":8275852,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275857,"byte_end":8275890,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275895,"byte_end":8275949,"line_start":488,"line_end":488,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8275954,"byte_end":8276008,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276013,"byte_end":8276024,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276029,"byte_end":8276032,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276037,"byte_end":8276070,"line_start":492,"line_end":492,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276075,"byte_end":8276129,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276134,"byte_end":8276188,"line_start":494,"line_end":494,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276193,"byte_end":8276204,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276209,"byte_end":8276212,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276217,"byte_end":8276246,"line_start":497,"line_end":497,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276251,"byte_end":8276280,"line_start":498,"line_end":498,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276285,"byte_end":8276290,"line_start":499,"line_end":499,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276295,"byte_end":8276302,"line_start":500,"line_end":500,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4775},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277078,"byte_end":8277087,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276483,"byte_end":8276560,"line_start":506,"line_end":506,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276565,"byte_end":8276594,"line_start":507,"line_end":507,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276599,"byte_end":8276602,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276607,"byte_end":8276621,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276626,"byte_end":8276629,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276634,"byte_end":8276641,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276646,"byte_end":8276677,"line_start":512,"line_end":512,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276682,"byte_end":8276685,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276690,"byte_end":8276708,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276713,"byte_end":8276734,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276739,"byte_end":8276786,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276791,"byte_end":8276794,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276799,"byte_end":8276826,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276831,"byte_end":8276860,"line_start":519,"line_end":519,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276865,"byte_end":8276868,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276873,"byte_end":8276909,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276914,"byte_end":8276917,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276922,"byte_end":8276951,"line_start":523,"line_end":523,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276956,"byte_end":8276959,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8276964,"byte_end":8277009,"line_start":525,"line_end":525,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277014,"byte_end":8277044,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277049,"byte_end":8277054,"line_start":527,"line_end":527,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277059,"byte_end":8277066,"line_start":528,"line_end":528,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4776},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278674,"byte_end":8278688,"line_start":586,"line_end":586,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277522,"byte_end":8277564,"line_start":550,"line_end":550,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277569,"byte_end":8277572,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277577,"byte_end":8277653,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277658,"byte_end":8277731,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277736,"byte_end":8277756,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277761,"byte_end":8277764,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277769,"byte_end":8277779,"line_start":556,"line_end":556,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277784,"byte_end":8277787,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277792,"byte_end":8277862,"line_start":558,"line_end":558,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277867,"byte_end":8277935,"line_start":559,"line_end":559,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277940,"byte_end":8277953,"line_start":560,"line_end":560,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277958,"byte_end":8277961,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8277966,"byte_end":8278018,"line_start":562,"line_end":562,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278023,"byte_end":8278073,"line_start":563,"line_end":563,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278078,"byte_end":8278124,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278129,"byte_end":8278189,"line_start":565,"line_end":565,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278194,"byte_end":8278242,"line_start":566,"line_end":566,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278247,"byte_end":8278250,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278255,"byte_end":8278269,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278274,"byte_end":8278277,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278282,"byte_end":8278289,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278294,"byte_end":8278325,"line_start":571,"line_end":571,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278330,"byte_end":8278333,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278338,"byte_end":8278356,"line_start":573,"line_end":573,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278361,"byte_end":8278382,"line_start":574,"line_end":574,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278387,"byte_end":8278435,"line_start":575,"line_end":575,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278440,"byte_end":8278443,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278448,"byte_end":8278491,"line_start":577,"line_end":577,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278496,"byte_end":8278499,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278504,"byte_end":8278542,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278547,"byte_end":8278550,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278555,"byte_end":8278598,"line_start":581,"line_end":581,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278603,"byte_end":8278606,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278611,"byte_end":8278640,"line_start":583,"line_end":583,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278645,"byte_end":8278650,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8278655,"byte_end":8278662,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4794},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8287337,"byte_end":8287345,"line_start":830,"line_end":830,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8285743,"byte_end":8285816,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8285821,"byte_end":8285824,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8285829,"byte_end":8285901,"line_start":793,"line_end":793,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8285906,"byte_end":8285930,"line_start":794,"line_end":794,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8285935,"byte_end":8285938,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of one","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8285943,"byte_end":8286023,"line_start":796,"line_end":796,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286028,"byte_end":8286102,"line_start":797,"line_end":797,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286107,"byte_end":8286110,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286115,"byte_end":8286188,"line_start":799,"line_end":799,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286193,"byte_end":8286267,"line_start":800,"line_end":800,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286272,"byte_end":8286275,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286280,"byte_end":8286356,"line_start":802,"line_end":802,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286361,"byte_end":8286437,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286442,"byte_end":8286513,"line_start":804,"line_end":804,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286518,"byte_end":8286591,"line_start":805,"line_end":805,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286596,"byte_end":8286669,"line_start":806,"line_end":806,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286674,"byte_end":8286745,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286750,"byte_end":8286802,"line_start":808,"line_end":808,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286807,"byte_end":8286810,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286815,"byte_end":8286867,"line_start":810,"line_end":810,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286872,"byte_end":8286922,"line_start":811,"line_end":811,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286927,"byte_end":8286930,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286935,"byte_end":8286949,"line_start":813,"line_end":813,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286954,"byte_end":8286957,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286962,"byte_end":8286969,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8286974,"byte_end":8287005,"line_start":816,"line_end":816,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8287010,"byte_end":8287013,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8287018,"byte_end":8287036,"line_start":818,"line_end":818,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8287041,"byte_end":8287062,"line_start":819,"line_end":819,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8287067,"byte_end":8287117,"line_start":820,"line_end":820,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8287122,"byte_end":8287125,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8287130,"byte_end":8287170,"line_start":822,"line_end":822,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8287175,"byte_end":8287178,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8287183,"byte_end":8287212,"line_start":824,"line_end":824,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8287217,"byte_end":8287220,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8287225,"byte_end":8287268,"line_start":826,"line_end":826,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8287273,"byte_end":8287303,"line_start":827,"line_end":827,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8287308,"byte_end":8287313,"line_start":828,"line_end":828,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8287318,"byte_end":8287325,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4795},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8287587,"byte_end":8287596,"line_start":837,"line_end":837,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Result<T, RecvError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.2.21\", note = \"use async fn recv()\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8287514,"byte_end":8287575,"line_start":836,"line_end":836,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4809},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291627,"byte_end":8291631,"line_start":951,"line_end":951,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8289411,"byte_end":8289457,"line_start":887,"line_end":887,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8289462,"byte_end":8289465,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8289470,"byte_end":8289538,"line_start":889,"line_end":889,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8289543,"byte_end":8289575,"line_start":890,"line_end":890,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8289580,"byte_end":8289583,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8289588,"byte_end":8289658,"line_start":892,"line_end":892,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8289663,"byte_end":8289737,"line_start":893,"line_end":893,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8289742,"byte_end":8289745,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8289750,"byte_end":8289826,"line_start":895,"line_end":895,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8289831,"byte_end":8289907,"line_start":896,"line_end":896,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8289912,"byte_end":8289980,"line_start":897,"line_end":897,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8289985,"byte_end":8290058,"line_start":898,"line_end":898,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290063,"byte_end":8290132,"line_start":899,"line_end":899,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290137,"byte_end":8290182,"line_start":900,"line_end":900,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290187,"byte_end":8290190,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290195,"byte_end":8290245,"line_start":902,"line_end":902,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290250,"byte_end":8290302,"line_start":903,"line_end":903,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290307,"byte_end":8290310,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290315,"byte_end":8290329,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290334,"byte_end":8290337,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290342,"byte_end":8290349,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290354,"byte_end":8290385,"line_start":908,"line_end":908,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290390,"byte_end":8290393,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290398,"byte_end":8290416,"line_start":910,"line_end":910,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290421,"byte_end":8290442,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290447,"byte_end":8290498,"line_start":912,"line_end":912,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290503,"byte_end":8290540,"line_start":913,"line_end":913,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290545,"byte_end":8290548,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290553,"byte_end":8290586,"line_start":915,"line_end":915,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290591,"byte_end":8290645,"line_start":916,"line_end":916,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290650,"byte_end":8290704,"line_start":917,"line_end":917,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290709,"byte_end":8290720,"line_start":918,"line_end":918,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290725,"byte_end":8290728,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290733,"byte_end":8290766,"line_start":920,"line_end":920,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290771,"byte_end":8290825,"line_start":921,"line_end":921,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290830,"byte_end":8290884,"line_start":922,"line_end":922,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290889,"byte_end":8290900,"line_start":923,"line_end":923,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290905,"byte_end":8290908,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290913,"byte_end":8290942,"line_start":925,"line_end":925,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290947,"byte_end":8290976,"line_start":926,"line_end":926,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290981,"byte_end":8290986,"line_start":927,"line_end":927,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8290991,"byte_end":8290998,"line_start":928,"line_end":928,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291003,"byte_end":8291006,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291011,"byte_end":8291027,"line_start":930,"line_end":930,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291032,"byte_end":8291035,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291040,"byte_end":8291047,"line_start":932,"line_end":932,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291052,"byte_end":8291083,"line_start":933,"line_end":933,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291088,"byte_end":8291091,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291096,"byte_end":8291114,"line_start":935,"line_end":935,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291119,"byte_end":8291140,"line_start":936,"line_end":936,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291145,"byte_end":8291194,"line_start":937,"line_end":937,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291199,"byte_end":8291202,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291207,"byte_end":8291236,"line_start":939,"line_end":939,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291241,"byte_end":8291270,"line_start":940,"line_end":940,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291275,"byte_end":8291304,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291309,"byte_end":8291312,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291317,"byte_end":8291354,"line_start":943,"line_end":943,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291359,"byte_end":8291401,"line_start":944,"line_end":944,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291406,"byte_end":8291409,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291414,"byte_end":8291483,"line_start":946,"line_end":946,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291488,"byte_end":8291491,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291496,"byte_end":8291545,"line_start":948,"line_end":948,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291550,"byte_end":8291599,"line_start":949,"line_end":949,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291604,"byte_end":8291609,"line_start":950,"line_end":950,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":6054},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8296285,"byte_end":8296296,"line_start":1110,"line_end":1110,"column_start":16,"column_end":27},"name":"into_stream","qualname":"<Receiver<T>>::into_stream","value":"pub fn into_stream(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Convert the receiver into a `Stream`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4868},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","parent":null,"children":[{"krate":0,"index":4869},{"krate":0,"index":4942},{"krate":0,"index":5002},{"krate":0,"index":5003},{"krate":0,"index":5004},{"krate":0,"index":5005},{"krate":0,"index":5006},{"krate":0,"index":5170},{"krate":0,"index":5216},{"krate":0,"index":5263},{"krate":0,"index":5264},{"krate":0,"index":5265},{"krate":0,"index":5266},{"krate":0,"index":5267},{"krate":0,"index":5294}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"! A multi-producer, single-consumer queue for sending values across","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8299950,"byte_end":8300019,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"! asynchronous tasks.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300020,"byte_end":8300043,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300044,"byte_end":8300047,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! Similar to `std`, channel creation provides [`Receiver`] and [`Sender`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300048,"byte_end":8300123,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"! handles. [`Receiver`] implements `Stream` and allows a task to read values","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300124,"byte_end":8300202,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"! out of the channel. If there is no message to read, the current task will be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300203,"byte_end":8300283,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"! notified when a new value is sent. If the channel is at capacity, the send","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300284,"byte_end":8300362,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"! is rejected and the task will be notified when additional capacity is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300363,"byte_end":8300436,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"! available. In other words, the channel provides backpressure.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300437,"byte_end":8300502,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300503,"byte_end":8300506,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300507,"byte_end":8300587,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"! bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300588,"byte_end":8300666,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"! store, and if this limit is reached, trying to send another message will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300667,"byte_end":8300743,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"! wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300744,"byte_end":8300823,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"! an infinite capacity, so the `send` method never does any kind of sleeping.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300824,"byte_end":8300903,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"! This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300904,"byte_end":8300975,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"! asynchronous code.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300976,"byte_end":8300998,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8300999,"byte_end":8301002,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! # Disconnection","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301003,"byte_end":8301022,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301023,"byte_end":8301026,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301027,"byte_end":8301093,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"! possible to send values into the channel. This is considered the termination","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301094,"byte_end":8301174,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"! event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301175,"byte_end":8301252,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301253,"byte_end":8301256,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301257,"byte_end":8301327,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"! be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301328,"byte_end":8301407,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"! result in an error.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301408,"byte_end":8301431,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301432,"byte_end":8301435,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! # Clean Shutdown","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301436,"byte_end":8301456,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301457,"byte_end":8301460,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301461,"byte_end":8301541,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"! remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301542,"byte_end":8301622,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"! shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301623,"byte_end":8301701,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"! any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301702,"byte_end":8301774,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"! consumes the channel to completion, at which point the receiver can be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301775,"byte_end":8301849,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"! dropped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301850,"byte_end":8301862,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301863,"byte_end":8301866,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! # Communicating between sync and async code","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301867,"byte_end":8301914,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301915,"byte_end":8301918,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8301919,"byte_end":8302000,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"! are two situations to consider:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302001,"byte_end":8302036,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302037,"byte_end":8302040,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302041,"byte_end":8302121,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"! Tokio `mpsc` channel for both directions of communication. To call the async","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302122,"byte_end":8302202,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"! [`send`][bounded-send] or [`recv`][bounded-recv] methods in sync code, you","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302203,"byte_end":8302281,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"! will need to use [`Handle::block_on`], which allow you to execute an async","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302282,"byte_end":8302360,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"! method in synchronous code. This is necessary because a bounded channel may","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302361,"byte_end":8302440,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"! need to wait for additional capacity to become available.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302441,"byte_end":8302502,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302503,"byte_end":8302506,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302507,"byte_end":8302587,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"! the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302588,"byte_end":8302666,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"! use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302667,"byte_end":8302733,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"! [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302734,"byte_end":8302816,"line_start":55,"line_end":55,"column_start":1,"column_end":83}},{"value":"! to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302817,"byte_end":8302881,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302882,"byte_end":8302885,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302886,"byte_end":8302927,"line_start":58,"line_end":58,"column_start":1,"column_end":42}},{"value":"! [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302928,"byte_end":8302973,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"! [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8302974,"byte_end":8303027,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"! [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8303028,"byte_end":8303083,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"! [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8303084,"byte_end":8303143,"line_start":62,"line_end":62,"column_start":1,"column_end":60}},{"value":"! [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8303144,"byte_end":8303204,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"! [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8303205,"byte_end":8303250,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"! [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8303251,"byte_end":8303341,"line_start":65,"line_end":65,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":4954},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8317206,"byte_end":8317212,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":4956}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8317081,"byte_end":8317126,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8317127,"byte_end":8317130,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8317131,"byte_end":8317194,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":4963},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8317721,"byte_end":8317729,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":4965}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8317593,"byte_end":8317641,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8317642,"byte_end":8317645,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8317646,"byte_end":8317709,"line_start":38,"line_end":38,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":4969},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319117,"byte_end":8319124,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks,\n returning the sender/receiver halves.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318010,"byte_end":8318090,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ returning the sender/receiver halves.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318091,"byte_end":8318132,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318133,"byte_end":8318136,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318137,"byte_end":8318214,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318215,"byte_end":8318240,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318241,"byte_end":8318244,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318245,"byte_end":8318324,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318325,"byte_end":8318373,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318374,"byte_end":8318377,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318378,"byte_end":8318457,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318458,"byte_end":8318533,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318534,"byte_end":8318600,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318601,"byte_end":8318604,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318605,"byte_end":8318619,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318620,"byte_end":8318623,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318624,"byte_end":8318635,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318636,"byte_end":8318662,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318663,"byte_end":8318666,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318667,"byte_end":8318685,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318686,"byte_end":8318707,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318708,"byte_end":8318758,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318759,"byte_end":8318762,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318763,"byte_end":8318796,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318797,"byte_end":8318825,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318826,"byte_end":8318876,"line_start":76,"line_end":76,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318877,"byte_end":8318926,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318927,"byte_end":8318954,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318955,"byte_end":8318972,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318973,"byte_end":8318986,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318987,"byte_end":8318998,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8318999,"byte_end":8319002,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319003,"byte_end":8319048,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319049,"byte_end":8319085,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319086,"byte_end":8319095,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319096,"byte_end":8319101,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319102,"byte_end":8319109,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4975},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320806,"byte_end":8320810,"line_start":147,"line_end":147,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319724,"byte_end":8319770,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319775,"byte_end":8319778,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319783,"byte_end":8319855,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319860,"byte_end":8319914,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319919,"byte_end":8319922,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319927,"byte_end":8319941,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319946,"byte_end":8319949,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319954,"byte_end":8319961,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319966,"byte_end":8319992,"line_start":116,"line_end":116,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319997,"byte_end":8320000,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320005,"byte_end":8320023,"line_start":118,"line_end":118,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320028,"byte_end":8320049,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320054,"byte_end":8320104,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320109,"byte_end":8320112,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320117,"byte_end":8320150,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320155,"byte_end":8320199,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320204,"byte_end":8320215,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320220,"byte_end":8320223,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320228,"byte_end":8320279,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320284,"byte_end":8320326,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320331,"byte_end":8320336,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320341,"byte_end":8320348,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320353,"byte_end":8320356,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320361,"byte_end":8320385,"line_start":131,"line_end":131,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320390,"byte_end":8320393,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320398,"byte_end":8320405,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320410,"byte_end":8320436,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320441,"byte_end":8320444,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320449,"byte_end":8320467,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320472,"byte_end":8320493,"line_start":137,"line_end":137,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320498,"byte_end":8320548,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320553,"byte_end":8320556,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320561,"byte_end":8320601,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320606,"byte_end":8320646,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320651,"byte_end":8320654,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320659,"byte_end":8320710,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320715,"byte_end":8320766,"line_start":144,"line_end":144,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320771,"byte_end":8320776,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320781,"byte_end":8320788,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4980},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8320976,"byte_end":8320985,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4981},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321641,"byte_end":8321649,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321078,"byte_end":8321151,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321156,"byte_end":8321159,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321164,"byte_end":8321236,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321241,"byte_end":8321312,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321317,"byte_end":8321370,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321375,"byte_end":8321378,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321383,"byte_end":8321455,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321460,"byte_end":8321484,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321489,"byte_end":8321492,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321497,"byte_end":8321567,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321572,"byte_end":8321629,"line_start":168,"line_end":168,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4982},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321967,"byte_end":8321972,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321730,"byte_end":8321794,"line_start":173,"line_end":173,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321799,"byte_end":8321802,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321807,"byte_end":8321882,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8321887,"byte_end":8321955,"line_start":176,"line_end":176,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4988},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8324062,"byte_end":8324066,"line_start":244,"line_end":244,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ mut Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322418,"byte_end":8322469,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322474,"byte_end":8322477,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322482,"byte_end":8322558,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322563,"byte_end":8322639,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322644,"byte_end":8322718,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322723,"byte_end":8322798,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322803,"byte_end":8322872,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322877,"byte_end":8322949,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322954,"byte_end":8322985,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322990,"byte_end":8322993,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322998,"byte_end":8323010,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323015,"byte_end":8323018,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323023,"byte_end":8323096,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323101,"byte_end":8323175,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323180,"byte_end":8323240,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323245,"byte_end":8323248,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323253,"byte_end":8323283,"line_start":215,"line_end":215,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323288,"byte_end":8323314,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323319,"byte_end":8323322,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323327,"byte_end":8323341,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323346,"byte_end":8323349,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323354,"byte_end":8323424,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323429,"byte_end":8323468,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323473,"byte_end":8323476,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323481,"byte_end":8323492,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323497,"byte_end":8323523,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323528,"byte_end":8323531,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323536,"byte_end":8323554,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323559,"byte_end":8323580,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323585,"byte_end":8323633,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323638,"byte_end":8323641,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323646,"byte_end":8323679,"line_start":230,"line_end":230,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323684,"byte_end":8323712,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323717,"byte_end":8323767,"line_start":232,"line_end":232,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323772,"byte_end":8323821,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323826,"byte_end":8323853,"line_start":234,"line_end":234,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323858,"byte_end":8323875,"line_start":235,"line_end":235,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323880,"byte_end":8323893,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323898,"byte_end":8323909,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323914,"byte_end":8323917,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323922,"byte_end":8323967,"line_start":239,"line_end":239,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8323972,"byte_end":8324008,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8324013,"byte_end":8324022,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8324027,"byte_end":8324032,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8324037,"byte_end":8324044,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4993},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326799,"byte_end":8326807,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8324487,"byte_end":8324546,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8324551,"byte_end":8324554,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8324559,"byte_end":8324638,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8324643,"byte_end":8324718,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8324723,"byte_end":8324801,"line_start":262,"line_end":262,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8324806,"byte_end":8324848,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8324853,"byte_end":8324856,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function may be paired with [`poll_ready`] in order to wait for","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8324861,"byte_end":8324933,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ channel capacity before trying to send a value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8324938,"byte_end":8324989,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8324994,"byte_end":8324997,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325002,"byte_end":8325014,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325019,"byte_end":8325022,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325027,"byte_end":8325098,"line_start":270,"line_end":270,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325103,"byte_end":8325179,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325184,"byte_end":8325206,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325211,"byte_end":8325214,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325219,"byte_end":8325292,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325297,"byte_end":8325371,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325376,"byte_end":8325436,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325441,"byte_end":8325444,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325449,"byte_end":8325475,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/ [`poll_ready`]: Sender::poll_ready","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325480,"byte_end":8325518,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/ [`channel`]: channel","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325523,"byte_end":8325547,"line_start":280,"line_end":280,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325552,"byte_end":8325582,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325587,"byte_end":8325590,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325595,"byte_end":8325609,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325614,"byte_end":8325617,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325622,"byte_end":8325629,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325634,"byte_end":8325660,"line_start":286,"line_end":286,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325665,"byte_end":8325668,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325673,"byte_end":8325691,"line_start":288,"line_end":288,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325696,"byte_end":8325717,"line_start":289,"line_end":289,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325722,"byte_end":8325768,"line_start":290,"line_end":290,"column_start":5,"column_end":51}},{"value":"/     let (mut tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325773,"byte_end":8325822,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/     let mut tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325827,"byte_end":8325861,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325866,"byte_end":8325869,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325874,"byte_end":8325907,"line_start":294,"line_end":294,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325912,"byte_end":8325951,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8325956,"byte_end":8325995,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326000,"byte_end":8326062,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326067,"byte_end":8326078,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326083,"byte_end":8326086,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326091,"byte_end":8326124,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326129,"byte_end":8326178,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326183,"byte_end":8326230,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326235,"byte_end":8326271,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326276,"byte_end":8326287,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326292,"byte_end":8326295,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326300,"byte_end":8326320,"line_start":306,"line_end":306,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326325,"byte_end":8326364,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326369,"byte_end":8326414,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326419,"byte_end":8326422,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326427,"byte_end":8326466,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326471,"byte_end":8326516,"line_start":311,"line_end":311,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326521,"byte_end":8326524,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326529,"byte_end":8326578,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326583,"byte_end":8326614,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326619,"byte_end":8326681,"line_start":315,"line_end":315,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326686,"byte_end":8326751,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326756,"byte_end":8326765,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326770,"byte_end":8326775,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326780,"byte_end":8326787,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4994},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328624,"byte_end":8328636,"line_start":372,"line_end":372,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ mut Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8326928,"byte_end":8327008,"line_start":325,"line_end":325,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327013,"byte_end":8327016,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327021,"byte_end":8327098,"line_start":327,"line_end":327,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327103,"byte_end":8327181,"line_start":328,"line_end":328,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327186,"byte_end":8327234,"line_start":329,"line_end":329,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327239,"byte_end":8327242,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327247,"byte_end":8327273,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327278,"byte_end":8327281,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327286,"byte_end":8327298,"line_start":333,"line_end":333,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327303,"byte_end":8327306,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327311,"byte_end":8327384,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327389,"byte_end":8327446,"line_start":336,"line_end":336,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327451,"byte_end":8327532,"line_start":337,"line_end":337,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327537,"byte_end":8327540,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327545,"byte_end":8327575,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327580,"byte_end":8327606,"line_start":340,"line_end":340,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327611,"byte_end":8327614,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327619,"byte_end":8327633,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327638,"byte_end":8327641,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327646,"byte_end":8327724,"line_start":344,"line_end":344,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327729,"byte_end":8327800,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327805,"byte_end":8327808,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327813,"byte_end":8327824,"line_start":347,"line_end":347,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327829,"byte_end":8327855,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327860,"byte_end":8327903,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327908,"byte_end":8327911,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327916,"byte_end":8327934,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327939,"byte_end":8327960,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8327965,"byte_end":8328013,"line_start":353,"line_end":353,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328018,"byte_end":8328021,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328026,"byte_end":8328059,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328064,"byte_end":8328092,"line_start":356,"line_end":356,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328097,"byte_end":8328183,"line_start":357,"line_end":357,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328188,"byte_end":8328241,"line_start":358,"line_end":358,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328246,"byte_end":8328273,"line_start":359,"line_end":359,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328278,"byte_end":8328295,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328300,"byte_end":8328313,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328318,"byte_end":8328329,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328334,"byte_end":8328337,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328342,"byte_end":8328387,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328392,"byte_end":8328428,"line_start":365,"line_end":365,"column_start":5,"column_end":41}},{"value":"/         delay_for(Duration::from_millis(200)).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328433,"byte_end":8328489,"line_start":366,"line_end":366,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328494,"byte_end":8328503,"line_start":367,"line_end":367,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328508,"byte_end":8328513,"line_start":368,"line_end":368,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328518,"byte_end":8328525,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8328530,"byte_end":8328554,"line_start":370,"line_end":370,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4999},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8330420,"byte_end":8330430,"line_start":413,"line_end":413,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), ClosedError>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8329339,"byte_end":8329421,"line_start":396,"line_end":396,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8329426,"byte_end":8329429,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, then `Poll::Pending` is returned and the task is notified when a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8329434,"byte_end":8329526,"line_start":398,"line_end":398,"column_start":5,"column_end":97}},{"value":"/ slot becomes available.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8329531,"byte_end":8329558,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8329563,"byte_end":8329566,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Once `poll_ready` returns `Poll::Ready(Ok(()))`, a call to `try_send` will succeed unless","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8329571,"byte_end":8329664,"line_start":401,"line_end":401,"column_start":5,"column_end":98}},{"value":"/ the channel has since been closed. To provide this guarantee, the channel reserves one slot","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8329669,"byte_end":8329764,"line_start":402,"line_end":402,"column_start":5,"column_end":100}},{"value":"/ in the channel for the coming send. This reserved slot is not available to other `Sender`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8329769,"byte_end":8329862,"line_start":403,"line_end":403,"column_start":5,"column_end":98}},{"value":"/ instances, so you need to be careful to not end up with deadlocks by blocking after calling","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8329867,"byte_end":8329962,"line_start":404,"line_end":404,"column_start":5,"column_end":100}},{"value":"/ `poll_ready` but before sending an element.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8329967,"byte_end":8330014,"line_start":405,"line_end":405,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8330019,"byte_end":8330022,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If, after `poll_ready` succeeds, you decide you do not wish to send an item after all, you","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8330027,"byte_end":8330121,"line_start":407,"line_end":407,"column_start":5,"column_end":99}},{"value":"/ can use [`disarm`](Sender::disarm) to release the reserved slot.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8330126,"byte_end":8330194,"line_start":408,"line_end":408,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8330199,"byte_end":8330202,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Until an item is sent or [`disarm`](Sender::disarm) is called, repeated calls to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8330207,"byte_end":8330291,"line_start":410,"line_end":410,"column_start":5,"column_end":89}},{"value":"/ `poll_ready` will return either `Poll::Ready(Ok(()))` or `Poll::Ready(Err(_))` if channel","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8330296,"byte_end":8330389,"line_start":411,"line_end":411,"column_start":5,"column_end":98}},{"value":"/ is closed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8330394,"byte_end":8330408,"line_start":412,"line_end":412,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":5001},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332986,"byte_end":8332992,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"disarm","qualname":"<Sender<T>>::disarm","value":"pub fn disarm(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Undo a successful call to `poll_ready`.","sig":null,"attributes":[{"value":"/ Undo a successful call to `poll_ready`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8330575,"byte_end":8330618,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8330623,"byte_end":8330626,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Once a call to `poll_ready` returns `Poll::Ready(Ok(()))`, it holds up one slot in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8330631,"byte_end":8330721,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/ channel to make room for the coming send. `disarm` allows you to give up that slot if you","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8330726,"byte_end":8330819,"line_start":420,"line_end":420,"column_start":5,"column_end":98}},{"value":"/ decide you do not wish to send an item after all. After calling `disarm`, you must call","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8330824,"byte_end":8330915,"line_start":421,"line_end":421,"column_start":5,"column_end":96}},{"value":"/ `poll_ready` until it returns `Poll::Ready(Ok(()))` before attempting to send again.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8330920,"byte_end":8331008,"line_start":422,"line_end":422,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331013,"byte_end":8331016,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if no slot is reserved for this sender (usually because `poll_ready` was","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331021,"byte_end":8331113,"line_start":424,"line_end":424,"column_start":5,"column_end":97}},{"value":"/ not previously called, or did not succeed).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331118,"byte_end":8331165,"line_start":425,"line_end":425,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331170,"byte_end":8331173,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Motivation","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331178,"byte_end":8331194,"line_start":427,"line_end":427,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331199,"byte_end":8331202,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Since `poll_ready` takes up one of the finite number of slots in a bounded channel, callers","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331207,"byte_end":8331302,"line_start":429,"line_end":429,"column_start":5,"column_end":100}},{"value":"/ need to send an item shortly after `poll_ready` succeeds. If they do not, idle senders may","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331307,"byte_end":8331401,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ take up all the slots of the channel, and prevent active senders from getting any requests","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331406,"byte_end":8331500,"line_start":431,"line_end":431,"column_start":5,"column_end":99}},{"value":"/ through. Consider this code that forwards from one channel to another:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331505,"byte_end":8331579,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331584,"byte_end":8331587,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331592,"byte_end":8331610,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331615,"byte_end":8331625,"line_start":435,"line_end":435,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331630,"byte_end":8331663,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/   if let Some(item) = ready!(rx.poll_recv(cx)) {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331668,"byte_end":8331720,"line_start":437,"line_end":437,"column_start":5,"column_end":57}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331725,"byte_end":8331752,"line_start":438,"line_end":438,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331757,"byte_end":8331771,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331776,"byte_end":8331790,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331795,"byte_end":8331802,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331807,"byte_end":8331812,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331817,"byte_end":8331824,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331829,"byte_end":8331832,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If many such forwarders exist, and they all forward into a single (cloned) `Sender`, then","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331837,"byte_end":8331930,"line_start":445,"line_end":445,"column_start":5,"column_end":98}},{"value":"/ any number of forwarders may be waiting for `rx.poll_recv` at the same time. While they do,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8331935,"byte_end":8332030,"line_start":446,"line_end":446,"column_start":5,"column_end":100}},{"value":"/ they are effectively each reducing the channel's capacity by 1. If enough of these","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332035,"byte_end":8332121,"line_start":447,"line_end":447,"column_start":5,"column_end":91}},{"value":"/ forwarders are idle, forwarders whose `rx` _do_ have elements will be unable to find a spot","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332126,"byte_end":8332221,"line_start":448,"line_end":448,"column_start":5,"column_end":100}},{"value":"/ for them through `poll_ready`, and the system will deadlock.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332226,"byte_end":8332290,"line_start":449,"line_end":449,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332295,"byte_end":8332298,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ `disarm` solves this problem by allowing you to give up the reserved slot if you find that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332303,"byte_end":8332397,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ you have to block. We can then fix the code above by writing:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332402,"byte_end":8332467,"line_start":452,"line_end":452,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332472,"byte_end":8332475,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332480,"byte_end":8332498,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332503,"byte_end":8332513,"line_start":455,"line_end":455,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332518,"byte_end":8332551,"line_start":456,"line_end":456,"column_start":5,"column_end":38}},{"value":"/   let item = rx.poll_recv(cx);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332556,"byte_end":8332590,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/   if let Poll::Ready(Ok(_)) = item {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332595,"byte_end":8332635,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/     // we're going to send the item below, so don't disarm","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332640,"byte_end":8332702,"line_start":459,"line_end":459,"column_start":5,"column_end":67}},{"value":"/   } else {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332707,"byte_end":8332721,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/     // give up our send slot, we won't need it for a while","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332726,"byte_end":8332788,"line_start":461,"line_end":461,"column_start":5,"column_end":67}},{"value":"/     tx.disarm();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332793,"byte_end":8332813,"line_start":462,"line_end":462,"column_start":5,"column_end":25}},{"value":"/   }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332818,"byte_end":8332825,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/   if let Some(item) = ready!(item) {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332830,"byte_end":8332870,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332875,"byte_end":8332902,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332907,"byte_end":8332921,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332926,"byte_end":8332940,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332945,"byte_end":8332952,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332957,"byte_end":8332962,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8332967,"byte_end":8332974,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":5052},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8334984,"byte_end":8334990,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":5051},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5226},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8358587,"byte_end":8358602,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":5228}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8358429,"byte_end":8358483,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8358484,"byte_end":8358487,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8358488,"byte_end":8358520,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8358521,"byte_end":8358575,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":5235},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359180,"byte_end":8359197,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":5237}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359019,"byte_end":8359076,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359077,"byte_end":8359080,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359081,"byte_end":8359113,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359114,"byte_end":8359168,"line_start":35,"line_end":35,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":5241},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360008,"byte_end":8360025,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359496,"byte_end":8359572,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359573,"byte_end":8359583,"line_start":50,"line_end":50,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359584,"byte_end":8359587,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359588,"byte_end":8359668,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359669,"byte_end":8359748,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359749,"byte_end":8359762,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359763,"byte_end":8359766,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359767,"byte_end":8359846,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359847,"byte_end":8359923,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359924,"byte_end":8360000,"line_start":58,"line_end":58,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5247},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360473,"byte_end":8360482,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5248},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361645,"byte_end":8361649,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360575,"byte_end":8360621,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360626,"byte_end":8360629,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360634,"byte_end":8360706,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360711,"byte_end":8360765,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360770,"byte_end":8360773,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360778,"byte_end":8360792,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360797,"byte_end":8360800,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360805,"byte_end":8360812,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360817,"byte_end":8360843,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360848,"byte_end":8360851,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360856,"byte_end":8360874,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360879,"byte_end":8360900,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360905,"byte_end":8360958,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360963,"byte_end":8360966,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360971,"byte_end":8361004,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361009,"byte_end":8361047,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361052,"byte_end":8361063,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361068,"byte_end":8361071,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361076,"byte_end":8361127,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361132,"byte_end":8361174,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361179,"byte_end":8361184,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361189,"byte_end":8361196,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361201,"byte_end":8361204,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361209,"byte_end":8361233,"line_start":104,"line_end":104,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361238,"byte_end":8361241,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361246,"byte_end":8361253,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361258,"byte_end":8361284,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361289,"byte_end":8361292,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361297,"byte_end":8361315,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361320,"byte_end":8361341,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361346,"byte_end":8361399,"line_start":111,"line_end":111,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361404,"byte_end":8361407,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361412,"byte_end":8361446,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361451,"byte_end":8361485,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361490,"byte_end":8361493,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361498,"byte_end":8361549,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361554,"byte_end":8361605,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361610,"byte_end":8361615,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361620,"byte_end":8361627,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5253},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362334,"byte_end":8362342,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361771,"byte_end":8361844,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361849,"byte_end":8361852,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361857,"byte_end":8361929,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8361934,"byte_end":8362005,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362010,"byte_end":8362063,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362068,"byte_end":8362071,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362076,"byte_end":8362148,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362153,"byte_end":8362177,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362182,"byte_end":8362185,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362190,"byte_end":8362260,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362265,"byte_end":8362322,"line_start":136,"line_end":136,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5254},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362660,"byte_end":8362665,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362423,"byte_end":8362487,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362492,"byte_end":8362495,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362500,"byte_end":8362575,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362580,"byte_end":8362648,"line_start":144,"line_end":144,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5262},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8363788,"byte_end":8363792,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8363100,"byte_end":8363174,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8363179,"byte_end":8363182,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8363187,"byte_end":8363272,"line_start":166,"line_end":166,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8363277,"byte_end":8363358,"line_start":167,"line_end":167,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8363363,"byte_end":8363431,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8363436,"byte_end":8363439,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8363444,"byte_end":8363517,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8363522,"byte_end":8363593,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8363598,"byte_end":8363675,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8363680,"byte_end":8363683,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8363688,"byte_end":8363727,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8363732,"byte_end":8363776,"line_start":175,"line_end":175,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":5267},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","parent":null,"children":[{"krate":0,"index":5268},{"krate":0,"index":5269},{"krate":0,"index":6082},{"krate":0,"index":6086},{"krate":0,"index":5270},{"krate":0,"index":5273},{"krate":0,"index":6089},{"krate":0,"index":6097},{"krate":0,"index":5275},{"krate":0,"index":5277},{"krate":0,"index":5280},{"krate":0,"index":6100},{"krate":0,"index":6103},{"krate":0,"index":5283},{"krate":0,"index":5285},{"krate":0,"index":6105},{"krate":0,"index":6113},{"krate":0,"index":6110},{"krate":0,"index":6111},{"krate":0,"index":5286},{"krate":0,"index":5288},{"krate":0,"index":6115},{"krate":0,"index":6118},{"krate":0,"index":5289},{"krate":0,"index":5291},{"krate":0,"index":5293},{"krate":0,"index":6125},{"krate":0,"index":6133},{"krate":0,"index":6120},{"krate":0,"index":6122}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"! Channel error types","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8363910,"byte_end":8363933,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6082},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364037,"byte_end":8364046,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8363973,"byte_end":8364008,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6085},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364050,"byte_end":8364055,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":6082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6091},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364599,"byte_end":8364603,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":6089},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364467,"byte_end":8364535,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364540,"byte_end":8364594,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6094},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364704,"byte_end":8364710,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":6089},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364613,"byte_end":8364682,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364687,"byte_end":8364699,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":6089},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364445,"byte_end":8364457,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> {\n\n    /// The data could not be sent on the channel because the channel is\n    /// currently full and sending would require blocking.\n    Full(T),\n\n    /// The receive half of the channel was explicitly closed or has been\n    /// dropped.\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":6091},{"krate":0,"index":6094}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364299,"byte_end":8364370,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364371,"byte_end":8364418,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6100},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365348,"byte_end":8365357,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365286,"byte_end":8365319,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6106},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365862,"byte_end":8365867,"line_start":76,"line_end":76,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6105},"children":[],"decl_id":null,"docs":" This channel is currently empty, but the Sender(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This channel is currently empty, but the Sender(s) have not yet","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365734,"byte_end":8365801,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365806,"byte_end":8365857,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6108},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365987,"byte_end":8365993,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6105},"children":[],"decl_id":null,"docs":" The channel's sending half has been closed, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The channel's sending half has been closed, and there will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365873,"byte_end":8365935,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/ never be any more data received on it.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365940,"byte_end":8365982,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":6105},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365715,"byte_end":8365727,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// This channel is currently empty, but the Sender(s) have not yet\n    /// disconnected, so data may yet become available.\n    Empty,\n\n    /// The channel's sending half has been closed, and there will\n    /// never be any more data received on it.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":6106},{"krate":0,"index":6108}],"decl_id":null,"docs":" This enumeration is the list of the possible reasons that try_recv\n could not return data when called.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible reasons that try_recv","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365568,"byte_end":8365638,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ could not return data when called.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365639,"byte_end":8365677,"line_start":71,"line_end":71,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":6115},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8366484,"byte_end":8366495,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"ClosedError","qualname":"::sync::mpsc::error::ClosedError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).\n","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8366383,"byte_end":8366455,"line_start":99,"line_end":99,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6127},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8367101,"byte_end":8367108,"line_start":125,"line_end":125,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":6125},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6130},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8367221,"byte_end":8367227,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":6125},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6125},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8366939,"byte_end":8366955,"line_start":122,"line_end":122,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> {\n\n    #[doc =\n      r\" The data could not be sent on the channel because the channel is\"]\n    #[doc = r\" full, and the timeout to send has elapsed.\"]\n    Timeout(T),\n\n    #[doc =\n      r\" The receive half of the channel was explicitly closed or has been\"]\n    #[doc = r\" dropped.\"]\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":6127},{"krate":0,"index":6130}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":23098,"byte_end":23122,"line_start":324,"line_end":324,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6136},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372158,"byte_end":8372163,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":6138},{"krate":0,"index":6139}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8367888,"byte_end":8367926,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8367927,"byte_end":8367930,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8367931,"byte_end":8368009,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368010,"byte_end":8368086,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368087,"byte_end":8368111,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368112,"byte_end":8368115,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368116,"byte_end":8368157,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368158,"byte_end":8368161,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368162,"byte_end":8368242,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368243,"byte_end":8368322,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368323,"byte_end":8368386,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368387,"byte_end":8368390,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368391,"byte_end":8368470,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368471,"byte_end":8368551,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368552,"byte_end":8368630,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368631,"byte_end":8368710,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368711,"byte_end":8368789,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368790,"byte_end":8368870,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368871,"byte_end":8368884,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368885,"byte_end":8368888,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368889,"byte_end":8368968,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8368969,"byte_end":8369045,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369046,"byte_end":8369123,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369124,"byte_end":8369157,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369158,"byte_end":8369161,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369162,"byte_end":8369237,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369238,"byte_end":8369316,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369317,"byte_end":8369359,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369360,"byte_end":8369363,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369364,"byte_end":8369391,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369392,"byte_end":8369440,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369441,"byte_end":8369519,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369520,"byte_end":8369523,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369524,"byte_end":8369539,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369540,"byte_end":8369543,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369544,"byte_end":8369562,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369563,"byte_end":8369590,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369591,"byte_end":8369614,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369615,"byte_end":8369618,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369619,"byte_end":8369637,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369638,"byte_end":8369659,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369660,"byte_end":8369704,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369705,"byte_end":8369744,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369745,"byte_end":8369748,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369749,"byte_end":8369782,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369783,"byte_end":8369829,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369830,"byte_end":8369853,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369854,"byte_end":8369865,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369866,"byte_end":8369869,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369870,"byte_end":8369912,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369913,"byte_end":8369932,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369933,"byte_end":8369938,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369939,"byte_end":8369946,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369947,"byte_end":8369950,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369951,"byte_end":8369954,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369955,"byte_end":8369973,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8369974,"byte_end":8370001,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370002,"byte_end":8370025,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370026,"byte_end":8370029,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370030,"byte_end":8370048,"line_start":68,"line_end":68,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370049,"byte_end":8370070,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370071,"byte_end":8370115,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370116,"byte_end":8370119,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370120,"byte_end":8370143,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370144,"byte_end":8370190,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370191,"byte_end":8370228,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370229,"byte_end":8370261,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370262,"byte_end":8370319,"line_start":76,"line_end":76,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370320,"byte_end":8370351,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370352,"byte_end":8370393,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370394,"byte_end":8370411,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370412,"byte_end":8370427,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370428,"byte_end":8370437,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370438,"byte_end":8370441,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370442,"byte_end":8370456,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370457,"byte_end":8370499,"line_start":84,"line_end":84,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370500,"byte_end":8370522,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370523,"byte_end":8370536,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370537,"byte_end":8370546,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370547,"byte_end":8370581,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370582,"byte_end":8370587,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370588,"byte_end":8370595,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370596,"byte_end":8370672,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370673,"byte_end":8370746,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370747,"byte_end":8370762,"line_start":93,"line_end":93,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370763,"byte_end":8370838,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370839,"byte_end":8370915,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370916,"byte_end":8370968,"line_start":96,"line_end":96,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370969,"byte_end":8370972,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8370973,"byte_end":8371051,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8371052,"byte_end":8371132,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8371133,"byte_end":8371209,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8371210,"byte_end":8371287,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8371288,"byte_end":8371366,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8371367,"byte_end":8371447,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8371448,"byte_end":8371528,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8371529,"byte_end":8371598,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8371599,"byte_end":8371602,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8371603,"byte_end":8371682,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8371683,"byte_end":8371762,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8371763,"byte_end":8371841,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8371842,"byte_end":8371903,"line_start":110,"line_end":110,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8371904,"byte_end":8371907,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8371908,"byte_end":8371935,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8371936,"byte_end":8371973,"line_start":113,"line_end":113,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8371974,"byte_end":8372008,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372009,"byte_end":8372058,"line_start":115,"line_end":115,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372059,"byte_end":8372096,"line_start":116,"line_end":116,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372097,"byte_end":8372129,"line_start":117,"line_end":117,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":5304},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372592,"byte_end":8372602,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":5307}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372231,"byte_end":8372262,"line_start":124,"line_end":124,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372263,"byte_end":8372266,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372267,"byte_end":8372346,"line_start":126,"line_end":126,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372347,"byte_end":8372422,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372423,"byte_end":8372456,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372457,"byte_end":8372460,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372461,"byte_end":8372539,"line_start":130,"line_end":130,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372540,"byte_end":8372580,"line_start":131,"line_end":131,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5308},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373389,"byte_end":8373404,"line_start":151,"line_end":151,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":5310}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372647,"byte_end":8372685,"line_start":136,"line_end":136,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372686,"byte_end":8372689,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372690,"byte_end":8372771,"line_start":138,"line_end":138,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372772,"byte_end":8372852,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372853,"byte_end":8372927,"line_start":140,"line_end":140,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372928,"byte_end":8372989,"line_start":141,"line_end":141,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372990,"byte_end":8372993,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8372994,"byte_end":8373073,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-couned pointer to the original","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373074,"byte_end":8373152,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373153,"byte_end":8373221,"line_start":145,"line_end":145,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373222,"byte_end":8373225,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373226,"byte_end":8373304,"line_start":147,"line_end":147,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373305,"byte_end":8373345,"line_start":148,"line_end":148,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373346,"byte_end":8373349,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373350,"byte_end":8373377,"line_start":150,"line_end":150,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6143},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8374112,"byte_end":8374124,"line_start":169,"line_end":169,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`] function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373904,"byte_end":8373961,"line_start":163,"line_end":163,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373962,"byte_end":8373965,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ A `try_lock` operation can only fail if the mutex is already locked.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373966,"byte_end":8374038,"line_start":165,"line_end":165,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8374039,"byte_end":8374042,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8374043,"byte_end":8374083,"line_start":167,"line_end":167,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":5324},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375340,"byte_end":8375343,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375137,"byte_end":8375195,"line_start":204,"line_end":204,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375200,"byte_end":8375203,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375208,"byte_end":8375222,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375227,"byte_end":8375230,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375235,"byte_end":8375242,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375247,"byte_end":8375274,"line_start":209,"line_end":209,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375279,"byte_end":8375282,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375287,"byte_end":8375316,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375321,"byte_end":8375328,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5325},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375968,"byte_end":8375972,"line_start":240,"line_end":240,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375508,"byte_end":8375554,"line_start":223,"line_end":223,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375559,"byte_end":8375605,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375610,"byte_end":8375681,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375686,"byte_end":8375689,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375694,"byte_end":8375708,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375713,"byte_end":8375716,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375721,"byte_end":8375728,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375733,"byte_end":8375760,"line_start":230,"line_end":230,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375765,"byte_end":8375768,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375773,"byte_end":8375791,"line_start":232,"line_end":232,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375796,"byte_end":8375817,"line_start":233,"line_end":233,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375822,"byte_end":8375856,"line_start":234,"line_end":234,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375861,"byte_end":8375864,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375869,"byte_end":8375908,"line_start":236,"line_end":236,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375913,"byte_end":8375928,"line_start":237,"line_end":237,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375933,"byte_end":8375938,"line_start":238,"line_end":238,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375943,"byte_end":8375950,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5328},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376999,"byte_end":8377009,"line_start":271,"line_end":271,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376078,"byte_end":8376152,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376157,"byte_end":8376224,"line_start":246,"line_end":246,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376229,"byte_end":8376253,"line_start":247,"line_end":247,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376258,"byte_end":8376261,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376266,"byte_end":8376339,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376344,"byte_end":8376417,"line_start":250,"line_end":250,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376422,"byte_end":8376493,"line_start":251,"line_end":251,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376498,"byte_end":8376573,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376578,"byte_end":8376620,"line_start":253,"line_end":253,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376625,"byte_end":8376628,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376633,"byte_end":8376647,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376652,"byte_end":8376655,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376660,"byte_end":8376667,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376672,"byte_end":8376699,"line_start":258,"line_end":258,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376704,"byte_end":8376727,"line_start":259,"line_end":259,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376732,"byte_end":8376735,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376740,"byte_end":8376758,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376763,"byte_end":8376784,"line_start":262,"line_end":262,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376789,"byte_end":8376833,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376838,"byte_end":8376841,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376846,"byte_end":8376899,"line_start":265,"line_end":265,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376904,"byte_end":8376919,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376924,"byte_end":8376929,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376934,"byte_end":8376941,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376946,"byte_end":8376949,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8376954,"byte_end":8376981,"line_start":270,"line_end":270,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5335},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377886,"byte_end":8377894,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377418,"byte_end":8377487,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377492,"byte_end":8377534,"line_start":285,"line_end":285,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377539,"byte_end":8377542,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377547,"byte_end":8377581,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377586,"byte_end":8377600,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377605,"byte_end":8377608,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377613,"byte_end":8377620,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377625,"byte_end":8377652,"line_start":291,"line_end":291,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377657,"byte_end":8377720,"line_start":292,"line_end":292,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377725,"byte_end":8377728,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377733,"byte_end":8377763,"line_start":294,"line_end":294,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377768,"byte_end":8377771,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377776,"byte_end":8377806,"line_start":296,"line_end":296,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377811,"byte_end":8377833,"line_start":297,"line_end":297,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377838,"byte_end":8377850,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377855,"byte_end":8377862,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8377867,"byte_end":8377874,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5336},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379015,"byte_end":8379029,"line_start":332,"line_end":332,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378103,"byte_end":8378177,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378182,"byte_end":8378219,"line_start":309,"line_end":309,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378224,"byte_end":8378227,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378232,"byte_end":8378300,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378305,"byte_end":8378378,"line_start":312,"line_end":312,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378383,"byte_end":8378459,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378464,"byte_end":8378538,"line_start":314,"line_end":314,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378543,"byte_end":8378591,"line_start":315,"line_end":315,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378596,"byte_end":8378599,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378604,"byte_end":8378638,"line_start":317,"line_end":317,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378643,"byte_end":8378670,"line_start":318,"line_end":318,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378675,"byte_end":8378689,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378694,"byte_end":8378697,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378702,"byte_end":8378709,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378714,"byte_end":8378741,"line_start":322,"line_end":322,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378746,"byte_end":8378769,"line_start":323,"line_end":323,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378774,"byte_end":8378837,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378842,"byte_end":8378845,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378850,"byte_end":8378890,"line_start":326,"line_end":326,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378895,"byte_end":8378898,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378903,"byte_end":8378947,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378952,"byte_end":8378974,"line_start":329,"line_end":329,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378979,"byte_end":8378991,"line_start":330,"line_end":330,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8378996,"byte_end":8379003,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5337},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379587,"byte_end":8379597,"line_start":353,"line_end":353,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379254,"byte_end":8379308,"line_start":339,"line_end":339,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379313,"byte_end":8379327,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379332,"byte_end":8379335,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379340,"byte_end":8379347,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379352,"byte_end":8379379,"line_start":343,"line_end":343,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379384,"byte_end":8379387,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379392,"byte_end":8379410,"line_start":345,"line_end":345,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379415,"byte_end":8379436,"line_start":346,"line_end":346,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379441,"byte_end":8379475,"line_start":347,"line_end":347,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379480,"byte_end":8379483,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379488,"byte_end":8379523,"line_start":349,"line_end":349,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379528,"byte_end":8379553,"line_start":350,"line_end":350,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379558,"byte_end":8379563,"line_start":351,"line_end":351,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379568,"byte_end":8379575,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6148},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384627,"byte_end":8384633,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":6149},{"krate":0,"index":6150}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8381817,"byte_end":8381853,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8381854,"byte_end":8381857,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8381858,"byte_end":8381934,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8381935,"byte_end":8382015,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382016,"byte_end":8382057,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382058,"byte_end":8382061,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382062,"byte_end":8382136,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify()`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382137,"byte_end":8382218,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382219,"byte_end":8382285,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382286,"byte_end":8382289,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382290,"byte_end":8382348,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382349,"byte_end":8382429,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382430,"byte_end":8382510,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify()`] sets the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382511,"byte_end":8382590,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382591,"byte_end":8382641,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382642,"byte_end":8382645,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **before** `notfied().await`, then the next call to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382646,"byte_end":8382725,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382726,"byte_end":8382801,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382802,"byte_end":8382872,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382873,"byte_end":8382876,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382877,"byte_end":8382957,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8382958,"byte_end":8383031,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383032,"byte_end":8383103,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383104,"byte_end":8383107,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383108,"byte_end":8383122,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383123,"byte_end":8383126,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383127,"byte_end":8383143,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383144,"byte_end":8383147,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383148,"byte_end":8383155,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383156,"byte_end":8383184,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383185,"byte_end":8383208,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383209,"byte_end":8383212,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383213,"byte_end":8383231,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383232,"byte_end":8383253,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383254,"byte_end":8383299,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383300,"byte_end":8383337,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383338,"byte_end":8383341,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383342,"byte_end":8383375,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383376,"byte_end":8383413,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383414,"byte_end":8383460,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383461,"byte_end":8383472,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383473,"byte_end":8383476,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383477,"byte_end":8383518,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/     notify.notify();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383519,"byte_end":8383543,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383544,"byte_end":8383549,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383550,"byte_end":8383557,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383558,"byte_end":8383561,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383562,"byte_end":8383587,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383588,"byte_end":8383591,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383592,"byte_end":8383599,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383600,"byte_end":8383628,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383629,"byte_end":8383632,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383633,"byte_end":8383668,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383669,"byte_end":8383694,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383695,"byte_end":8383698,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383699,"byte_end":8383722,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383723,"byte_end":8383758,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383759,"byte_end":8383782,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383783,"byte_end":8383788,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383789,"byte_end":8383792,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383793,"byte_end":8383817,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383818,"byte_end":8383856,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383857,"byte_end":8383896,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383897,"byte_end":8383931,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383932,"byte_end":8383935,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383936,"byte_end":8383991,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8383992,"byte_end":8384025,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384026,"byte_end":8384035,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384036,"byte_end":8384039,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384040,"byte_end":8384079,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384080,"byte_end":8384098,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384099,"byte_end":8384130,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384131,"byte_end":8384209,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384210,"byte_end":8384243,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384244,"byte_end":8384261,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384262,"byte_end":8384265,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384266,"byte_end":8384316,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384317,"byte_end":8384362,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384363,"byte_end":8384376,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384377,"byte_end":8384386,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384387,"byte_end":8384392,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384393,"byte_end":8384400,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384401,"byte_end":8384404,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384405,"byte_end":8384434,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384435,"byte_end":8384476,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384477,"byte_end":8384521,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/ [`notify()`]: Notify::notify()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384522,"byte_end":8384556,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8384557,"byte_end":8384598,"line_start":100,"line_end":100,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5405},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8385865,"byte_end":8385868,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8385661,"byte_end":8385717,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8385722,"byte_end":8385725,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8385730,"byte_end":8385744,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8385749,"byte_end":8385752,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8385757,"byte_end":8385764,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8385769,"byte_end":8385797,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8385802,"byte_end":8385805,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8385810,"byte_end":8385841,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8385846,"byte_end":8385853,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5406},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386940,"byte_end":8386948,"line_start":200,"line_end":200,"column_start":18,"column_end":26},"name":"notified","qualname":"<Notify>::notified","value":"pub async fn notified<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386010,"byte_end":8386038,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386043,"byte_end":8386046,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386051,"byte_end":8386127,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify()`], then `notified().await` will complete","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386132,"byte_end":8386206,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386211,"byte_end":8386286,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify()`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386291,"byte_end":8386360,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386365,"byte_end":8386368,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ [`notify()`]: Notify::notify","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386373,"byte_end":8386405,"line_start":178,"line_end":178,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386410,"byte_end":8386413,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386418,"byte_end":8386432,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386437,"byte_end":8386440,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386445,"byte_end":8386452,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386457,"byte_end":8386485,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386490,"byte_end":8386513,"line_start":184,"line_end":184,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386518,"byte_end":8386521,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386526,"byte_end":8386544,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386549,"byte_end":8386570,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386575,"byte_end":8386620,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386625,"byte_end":8386662,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386667,"byte_end":8386670,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386675,"byte_end":8386708,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386713,"byte_end":8386750,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386755,"byte_end":8386801,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386806,"byte_end":8386817,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386822,"byte_end":8386825,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386830,"byte_end":8386871,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386876,"byte_end":8386900,"line_start":197,"line_end":197,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386905,"byte_end":8386910,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8386915,"byte_end":8386922,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5409},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388444,"byte_end":8388450,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"notify","qualname":"<Notify>::notify","value":"pub fn notify(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387285,"byte_end":8387312,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387317,"byte_end":8387320,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387325,"byte_end":8387396,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387401,"byte_end":8387469,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387474,"byte_end":8387550,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify()`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387555,"byte_end":8387596,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387601,"byte_end":8387604,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387609,"byte_end":8387683,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ `notify` will result in a single permit being stored. The next call to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387688,"byte_end":8387762,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387767,"byte_end":8387839,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387844,"byte_end":8387858,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387863,"byte_end":8387866,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387871,"byte_end":8387915,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387920,"byte_end":8387923,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387928,"byte_end":8387942,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387947,"byte_end":8387950,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387955,"byte_end":8387962,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8387967,"byte_end":8387995,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388000,"byte_end":8388023,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388028,"byte_end":8388031,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388036,"byte_end":8388054,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388059,"byte_end":8388080,"line_start":235,"line_end":235,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388085,"byte_end":8388130,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388135,"byte_end":8388172,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388177,"byte_end":8388180,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388185,"byte_end":8388218,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388223,"byte_end":8388260,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388265,"byte_end":8388311,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388316,"byte_end":8388327,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388332,"byte_end":8388335,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388340,"byte_end":8388381,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388386,"byte_end":8388410,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388415,"byte_end":8388420,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8388425,"byte_end":8388432,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5431},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":5432},{"krate":0,"index":5433},{"krate":0,"index":5434},{"krate":0,"index":5435},{"krate":0,"index":5436},{"krate":0,"index":5437},{"krate":0,"index":5438},{"krate":0,"index":5439},{"krate":0,"index":5440},{"krate":0,"index":5441},{"krate":0,"index":12592},{"krate":0,"index":5442},{"krate":0,"index":12594},{"krate":0,"index":5443},{"krate":0,"index":5444},{"krate":0,"index":12596},{"krate":0,"index":5445},{"krate":0,"index":12598},{"krate":0,"index":5446},{"krate":0,"index":5447},{"krate":0,"index":5448},{"krate":0,"index":5449},{"krate":0,"index":6177},{"krate":0,"index":6180},{"krate":0,"index":6183},{"krate":0,"index":6186},{"krate":0,"index":5450},{"krate":0,"index":5458},{"krate":0,"index":5459},{"krate":0,"index":6214},{"krate":0,"index":6218},{"krate":0,"index":6217},{"krate":0,"index":5465},{"krate":0,"index":5467},{"krate":0,"index":5480},{"krate":0,"index":5483},{"krate":0,"index":5487},{"krate":0,"index":5490},{"krate":0,"index":5494},{"krate":0,"index":5518},{"krate":0,"index":5520},{"krate":0,"index":5522},{"krate":0,"index":5526},{"krate":0,"index":5530},{"krate":0,"index":5531},{"krate":0,"index":5532},{"krate":0,"index":5533},{"krate":0,"index":5534},{"krate":0,"index":5548}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"! A channel for sending a single message between asynchronous tasks.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8400226,"byte_end":8400296,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":6177},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8400775,"byte_end":8400781,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6179}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8400628,"byte_end":8400675,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8400676,"byte_end":8400679,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8400680,"byte_end":8400746,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6183},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8400973,"byte_end":8400981,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6185}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8400824,"byte_end":8400873,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8400874,"byte_end":8400877,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8400878,"byte_end":8400944,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":5450},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8401032,"byte_end":8401037,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":5451},{"krate":0,"index":6189},{"krate":0,"index":6199},{"krate":0,"index":6196},{"krate":0,"index":6197},{"krate":0,"index":6192},{"krate":0,"index":6193},{"krate":0,"index":6201},{"krate":0,"index":6212},{"krate":0,"index":6209},{"krate":0,"index":6210},{"krate":0,"index":6206},{"krate":0,"index":6207},{"krate":0,"index":5452},{"krate":0,"index":5454},{"krate":0,"index":5455},{"krate":0,"index":5457}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"! Oneshot error types","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8401044,"byte_end":8401067,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6189},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8401209,"byte_end":8401218,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8401092,"byte_end":8401157,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6202},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8401440,"byte_end":8401445,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6201},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8401373,"byte_end":8401431,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6204},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8401534,"byte_end":8401540,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6201},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8401456,"byte_end":8401525,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":6201},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8401350,"byte_end":8401362,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The send half of the channel has not yet sent a value.\n    Empty,\n\n    /// The send half of the channel was dropped without sending a value.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":6202},{"krate":0,"index":6204}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8401240,"byte_end":8401300,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":5465},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403537,"byte_end":8403544,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8402722,"byte_end":8402801,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8402802,"byte_end":8402812,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8402813,"byte_end":8402816,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8402817,"byte_end":8402893,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8402894,"byte_end":8402972,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8402973,"byte_end":8403019,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403020,"byte_end":8403023,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403024,"byte_end":8403070,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403071,"byte_end":8403074,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403075,"byte_end":8403089,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403090,"byte_end":8403093,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403094,"byte_end":8403101,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403102,"byte_end":8403131,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403132,"byte_end":8403135,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403136,"byte_end":8403154,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403155,"byte_end":8403176,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403177,"byte_end":8403219,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403220,"byte_end":8403223,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403224,"byte_end":8403257,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403258,"byte_end":8403298,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403299,"byte_end":8403348,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403349,"byte_end":8403362,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403363,"byte_end":8403374,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403375,"byte_end":8403378,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403379,"byte_end":8403403,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403404,"byte_end":8403451,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403452,"byte_end":8403505,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403506,"byte_end":8403515,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403516,"byte_end":8403521,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403522,"byte_end":8403529,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5469},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405580,"byte_end":8405584,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404009,"byte_end":8404084,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404089,"byte_end":8404105,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404110,"byte_end":8404113,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404118,"byte_end":8404197,"line_start":147,"line_end":147,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404202,"byte_end":8404277,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404282,"byte_end":8404358,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404363,"byte_end":8404435,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404440,"byte_end":8404453,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404458,"byte_end":8404461,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404466,"byte_end":8404542,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404547,"byte_end":8404623,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404628,"byte_end":8404700,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404705,"byte_end":8404778,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404783,"byte_end":8404857,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404862,"byte_end":8404934,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404939,"byte_end":8404976,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404981,"byte_end":8404984,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8404989,"byte_end":8405003,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405008,"byte_end":8405011,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405016,"byte_end":8405048,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405053,"byte_end":8405056,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405061,"byte_end":8405068,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405073,"byte_end":8405102,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405107,"byte_end":8405110,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405115,"byte_end":8405133,"line_start":168,"line_end":168,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405138,"byte_end":8405159,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405164,"byte_end":8405206,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405211,"byte_end":8405214,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405219,"byte_end":8405252,"line_start":172,"line_end":172,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405257,"byte_end":8405297,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405302,"byte_end":8405351,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405356,"byte_end":8405369,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405374,"byte_end":8405385,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405390,"byte_end":8405393,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405398,"byte_end":8405422,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405427,"byte_end":8405474,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405479,"byte_end":8405532,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405537,"byte_end":8405546,"line_start":181,"line_end":181,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405551,"byte_end":8405556,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405561,"byte_end":8405568,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5472},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8405985,"byte_end":8405996,"line_start":201,"line_end":201,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5474},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409238,"byte_end":8409244,"line_start":316,"line_end":316,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407353,"byte_end":8407411,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407416,"byte_end":8407419,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407424,"byte_end":8407498,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407503,"byte_end":8407537,"line_start":252,"line_end":252,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407542,"byte_end":8407545,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407550,"byte_end":8407615,"line_start":254,"line_end":254,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407620,"byte_end":8407692,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407697,"byte_end":8407700,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407705,"byte_end":8407717,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407722,"byte_end":8407725,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407730,"byte_end":8407778,"line_start":259,"line_end":259,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407783,"byte_end":8407786,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407791,"byte_end":8407817,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407822,"byte_end":8407852,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407857,"byte_end":8407860,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407865,"byte_end":8407879,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407884,"byte_end":8407887,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407892,"byte_end":8407907,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407912,"byte_end":8407915,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407920,"byte_end":8407927,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407932,"byte_end":8407961,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407966,"byte_end":8407969,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407974,"byte_end":8407992,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8407997,"byte_end":8408018,"line_start":272,"line_end":272,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408023,"byte_end":8408075,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408080,"byte_end":8408083,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408088,"byte_end":8408121,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408126,"byte_end":8408147,"line_start":276,"line_end":276,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408152,"byte_end":8408163,"line_start":277,"line_end":277,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408168,"byte_end":8408171,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408176,"byte_end":8408202,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408207,"byte_end":8408248,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408253,"byte_end":8408258,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408263,"byte_end":8408270,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408275,"byte_end":8408278,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408283,"byte_end":8408305,"line_start":284,"line_end":284,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408310,"byte_end":8408313,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408318,"byte_end":8408325,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408330,"byte_end":8408359,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408364,"byte_end":8408402,"line_start":288,"line_end":288,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408407,"byte_end":8408410,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ use futures::{select, FutureExt};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408415,"byte_end":8408452,"line_start":290,"line_end":290,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408457,"byte_end":8408460,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408465,"byte_end":8408499,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408504,"byte_end":8408555,"line_start":293,"line_end":293,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408560,"byte_end":8408585,"line_start":294,"line_end":294,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408590,"byte_end":8408595,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408600,"byte_end":8408603,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408608,"byte_end":8408626,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408631,"byte_end":8408652,"line_start":298,"line_end":298,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408657,"byte_end":8408703,"line_start":299,"line_end":299,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408708,"byte_end":8408711,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408716,"byte_end":8408749,"line_start":301,"line_end":301,"column_start":5,"column_end":38}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408754,"byte_end":8408775,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/             _ = tx.closed().fuse() => {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408780,"byte_end":8408823,"line_start":303,"line_end":303,"column_start":5,"column_end":48}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408828,"byte_end":8408903,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408908,"byte_end":8408925,"line_start":305,"line_end":305,"column_start":5,"column_end":22}},{"value":"/             value = compute().fuse() => {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408930,"byte_end":8408975,"line_start":306,"line_end":306,"column_start":5,"column_end":50}},{"value":"/                 tx.send(value).unwrap()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8408980,"byte_end":8409023,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409028,"byte_end":8409045,"line_start":308,"line_end":308,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409050,"byte_end":8409063,"line_start":309,"line_end":309,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409068,"byte_end":8409079,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409084,"byte_end":8409087,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409092,"byte_end":8409128,"line_start":312,"line_end":312,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409133,"byte_end":8409198,"line_start":313,"line_end":313,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409203,"byte_end":8409208,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409213,"byte_end":8409220,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5479},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410114,"byte_end":8410123,"line_start":349,"line_end":349,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409355,"byte_end":8409429,"line_start":322,"line_end":322,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409434,"byte_end":8409437,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409442,"byte_end":8409516,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409521,"byte_end":8409555,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409560,"byte_end":8409563,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409568,"byte_end":8409643,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409648,"byte_end":8409651,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409656,"byte_end":8409682,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409687,"byte_end":8409717,"line_start":330,"line_end":330,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409722,"byte_end":8409725,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409730,"byte_end":8409744,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409749,"byte_end":8409752,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409757,"byte_end":8409764,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409769,"byte_end":8409798,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409803,"byte_end":8409806,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409811,"byte_end":8409829,"line_start":337,"line_end":337,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409834,"byte_end":8409855,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409860,"byte_end":8409902,"line_start":339,"line_end":339,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409907,"byte_end":8409910,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409915,"byte_end":8409948,"line_start":341,"line_end":341,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409953,"byte_end":8409956,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409961,"byte_end":8409978,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409983,"byte_end":8409986,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8409991,"byte_end":8410023,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410028,"byte_end":8410080,"line_start":346,"line_end":346,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410085,"byte_end":8410090,"line_start":347,"line_end":347,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410095,"byte_end":8410102,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5485},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412101,"byte_end":8412106,"line_start":422,"line_end":422,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410463,"byte_end":8410530,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410535,"byte_end":8410538,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410543,"byte_end":8410617,"line_start":368,"line_end":368,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410622,"byte_end":8410690,"line_start":369,"line_end":369,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410695,"byte_end":8410761,"line_start":370,"line_end":370,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410766,"byte_end":8410780,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410785,"byte_end":8410788,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410793,"byte_end":8410869,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410874,"byte_end":8410937,"line_start":374,"line_end":374,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410942,"byte_end":8410945,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410950,"byte_end":8410972,"line_start":376,"line_end":376,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410977,"byte_end":8411013,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411018,"byte_end":8411021,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411026,"byte_end":8411040,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411045,"byte_end":8411048,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411053,"byte_end":8411088,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411093,"byte_end":8411096,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411101,"byte_end":8411108,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411113,"byte_end":8411142,"line_start":384,"line_end":384,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411147,"byte_end":8411197,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411202,"byte_end":8411205,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411210,"byte_end":8411228,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411233,"byte_end":8411254,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411259,"byte_end":8411305,"line_start":389,"line_end":389,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411310,"byte_end":8411313,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411318,"byte_end":8411351,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411356,"byte_end":8411359,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411364,"byte_end":8411383,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411388,"byte_end":8411391,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411396,"byte_end":8411428,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411433,"byte_end":8411485,"line_start":396,"line_end":396,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411490,"byte_end":8411493,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411498,"byte_end":8411527,"line_start":398,"line_end":398,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411532,"byte_end":8411575,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411580,"byte_end":8411612,"line_start":400,"line_end":400,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411617,"byte_end":8411626,"line_start":401,"line_end":401,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411631,"byte_end":8411636,"line_start":402,"line_end":402,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411641,"byte_end":8411648,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411653,"byte_end":8411656,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411661,"byte_end":8411712,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411717,"byte_end":8411720,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411725,"byte_end":8411732,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411737,"byte_end":8411766,"line_start":408,"line_end":408,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411771,"byte_end":8411774,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411779,"byte_end":8411797,"line_start":410,"line_end":410,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411802,"byte_end":8411823,"line_start":411,"line_end":411,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411828,"byte_end":8411874,"line_start":412,"line_end":412,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411879,"byte_end":8411882,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411887,"byte_end":8411936,"line_start":414,"line_end":414,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411941,"byte_end":8411944,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411949,"byte_end":8411968,"line_start":416,"line_end":416,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411973,"byte_end":8411976,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8411981,"byte_end":8412022,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412027,"byte_end":8412067,"line_start":419,"line_end":419,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412072,"byte_end":8412077,"line_start":420,"line_end":420,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412082,"byte_end":8412089,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5486},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8414089,"byte_end":8414097,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412204,"byte_end":8412236,"line_start":427,"line_end":427,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412241,"byte_end":8412244,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412249,"byte_end":8412322,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412327,"byte_end":8412393,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412398,"byte_end":8412422,"line_start":431,"line_end":431,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412427,"byte_end":8412430,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412435,"byte_end":8412501,"line_start":433,"line_end":433,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412506,"byte_end":8412528,"line_start":434,"line_end":434,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412533,"byte_end":8412536,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412541,"byte_end":8412553,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412558,"byte_end":8412561,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412566,"byte_end":8412617,"line_start":438,"line_end":438,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412622,"byte_end":8412685,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412690,"byte_end":8412765,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412770,"byte_end":8412784,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412789,"byte_end":8412792,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412797,"byte_end":8412811,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412816,"byte_end":8412819,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412824,"byte_end":8412874,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412879,"byte_end":8412882,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412887,"byte_end":8412894,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412899,"byte_end":8412928,"line_start":448,"line_end":448,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412933,"byte_end":8412983,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412988,"byte_end":8412991,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8412996,"byte_end":8413014,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413019,"byte_end":8413040,"line_start":452,"line_end":452,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413045,"byte_end":8413091,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413096,"byte_end":8413099,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413104,"byte_end":8413133,"line_start":455,"line_end":455,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413138,"byte_end":8413183,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413188,"byte_end":8413230,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413235,"byte_end":8413267,"line_start":458,"line_end":458,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413272,"byte_end":8413281,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413286,"byte_end":8413289,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413294,"byte_end":8413317,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413322,"byte_end":8413356,"line_start":462,"line_end":462,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413361,"byte_end":8413364,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413369,"byte_end":8413398,"line_start":464,"line_end":464,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413403,"byte_end":8413455,"line_start":465,"line_end":465,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413460,"byte_end":8413492,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413497,"byte_end":8413506,"line_start":467,"line_end":467,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413511,"byte_end":8413516,"line_start":468,"line_end":468,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413521,"byte_end":8413528,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413533,"byte_end":8413536,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413541,"byte_end":8413602,"line_start":471,"line_end":471,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413607,"byte_end":8413610,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413615,"byte_end":8413622,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413627,"byte_end":8413656,"line_start":474,"line_end":474,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413661,"byte_end":8413711,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413716,"byte_end":8413719,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413724,"byte_end":8413742,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413747,"byte_end":8413768,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413773,"byte_end":8413825,"line_start":479,"line_end":479,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413830,"byte_end":8413833,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413838,"byte_end":8413855,"line_start":481,"line_end":481,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413860,"byte_end":8413863,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413868,"byte_end":8413897,"line_start":483,"line_end":483,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413902,"byte_end":8413956,"line_start":484,"line_end":484,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8413961,"byte_end":8414004,"line_start":485,"line_end":485,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8414009,"byte_end":8414041,"line_start":486,"line_end":486,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8414046,"byte_end":8414055,"line_start":487,"line_end":487,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8414060,"byte_end":8414065,"line_start":488,"line_end":488,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8414070,"byte_end":8414077,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6281},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482588,"byte_end":8482597,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":6282}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit aquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit aquisition.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8481937,"byte_end":8482002,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482003,"byte_end":8482006,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482007,"byte_end":8482082,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482083,"byte_end":8482159,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482160,"byte_end":8482240,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482241,"byte_end":8482250,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482251,"byte_end":8482254,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482255,"byte_end":8482328,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482329,"byte_end":8482408,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482409,"byte_end":8482487,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482488,"byte_end":8482559,"line_start":14,"line_end":14,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6285},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482846,"byte_end":8482861,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":6287},{"krate":0,"index":6288}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482662,"byte_end":8482694,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482695,"byte_end":8482698,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482699,"byte_end":8482750,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482751,"byte_end":8482754,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482755,"byte_end":8482805,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482806,"byte_end":8482817,"line_start":26,"line_end":26,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6292},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8483122,"byte_end":8483142,"line_start":40,"line_end":40,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":6293},{"krate":0,"index":6294}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482913,"byte_end":8482952,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482953,"byte_end":8482956,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8482957,"byte_end":8483014,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8483015,"byte_end":8483018,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8483019,"byte_end":8483081,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8483082,"byte_end":8483093,"line_start":38,"line_end":38,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6297},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8483438,"byte_end":8483453,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"TryAcquireError","qualname":"::sync::semaphore::TryAcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8483191,"byte_end":8483255,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8483256,"byte_end":8483259,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ A `try_acquire` operation can only fail if the semaphore has no available","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8483260,"byte_end":8483337,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ permits.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8483338,"byte_end":8483350,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8483351,"byte_end":8483354,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: Semaphore::try_acquire","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8483355,"byte_end":8483409,"line_start":50,"line_end":50,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5783},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8484007,"byte_end":8484010,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8483932,"byte_end":8483995,"line_start":70,"line_end":70,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5784},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8484186,"byte_end":8484203,"line_start":78,"line_end":78,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8484122,"byte_end":8484174,"line_start":77,"line_end":77,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5785},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8484450,"byte_end":8484461,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8484273,"byte_end":8484315,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8484320,"byte_end":8484323,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8484328,"byte_end":8484438,"line_start":84,"line_end":84,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":5786},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8484581,"byte_end":8484588,"line_start":90,"line_end":90,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8484524,"byte_end":8484563,"line_start":89,"line_end":89,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5789},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8484824,"byte_end":8484835,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8484763,"byte_end":8484812,"line_start":98,"line_end":98,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5790},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8485296,"byte_end":8485309,"line_start":114,"line_end":114,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8485118,"byte_end":8485157,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8485162,"byte_end":8485165,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8485170,"byte_end":8485238,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8485243,"byte_end":8485246,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8485251,"byte_end":8485278,"line_start":113,"line_end":113,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5793},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8485689,"byte_end":8485706,"line_start":127,"line_end":127,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8485507,"byte_end":8485556,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8485561,"byte_end":8485564,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8485569,"byte_end":8485637,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8485642,"byte_end":8485645,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8485650,"byte_end":8485677,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5796},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8486221,"byte_end":8486227,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8486046,"byte_end":8486116,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8486121,"byte_end":8486190,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8486195,"byte_end":8486209,"line_start":141,"line_end":141,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":5798},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8486482,"byte_end":8486488,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8486307,"byte_end":8486377,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8486382,"byte_end":8486451,"line_start":149,"line_end":149,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8486456,"byte_end":8486470,"line_start":150,"line_end":150,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":6302},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489511,"byte_end":8489517,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":6304},{"krate":0,"index":6305}],"decl_id":null,"docs":" An asynchronous reader-writer lock","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8486981,"byte_end":8487019,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8487020,"byte_end":8487023,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8487024,"byte_end":8487101,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8487102,"byte_end":8487181,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8487182,"byte_end":8487261,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8487262,"byte_end":8487320,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8487321,"byte_end":8487324,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8487325,"byte_end":8487403,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8487404,"byte_end":8487482,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8487483,"byte_end":8487561,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8487562,"byte_end":8487627,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8487628,"byte_end":8487631,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8487632,"byte_end":8487696,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8487697,"byte_end":8487769,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8487770,"byte_end":8487850,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8487851,"byte_end":8487931,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8487932,"byte_end":8488012,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488013,"byte_end":8488082,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488083,"byte_end":8488153,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488154,"byte_end":8488192,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488193,"byte_end":8488196,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488197,"byte_end":8488274,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488275,"byte_end":8488360,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488361,"byte_end":8488441,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488442,"byte_end":8488489,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488490,"byte_end":8488562,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488563,"byte_end":8488566,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488567,"byte_end":8488581,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488582,"byte_end":8488585,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488586,"byte_end":8488593,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488594,"byte_end":8488622,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488623,"byte_end":8488626,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488627,"byte_end":8488645,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488646,"byte_end":8488667,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488668,"byte_end":8488702,"line_start":45,"line_end":45,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488703,"byte_end":8488706,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488707,"byte_end":8488755,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488756,"byte_end":8488765,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488766,"byte_end":8488805,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488806,"byte_end":8488845,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488846,"byte_end":8488877,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488878,"byte_end":8488909,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488910,"byte_end":8488959,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488960,"byte_end":8488963,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8488964,"byte_end":8489015,"line_start":55,"line_end":55,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489016,"byte_end":8489025,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489026,"byte_end":8489069,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489070,"byte_end":8489090,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489091,"byte_end":8489121,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489122,"byte_end":8489161,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489162,"byte_end":8489167,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489168,"byte_end":8489175,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489176,"byte_end":8489179,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489180,"byte_end":8489214,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489215,"byte_end":8489244,"line_start":65,"line_end":65,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489245,"byte_end":8489292,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489293,"byte_end":8489342,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489343,"byte_end":8489380,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489381,"byte_end":8489482,"line_start":69,"line_end":69,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":6309},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489879,"byte_end":8489894,"line_start":87,"line_end":87,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":6312},{"krate":0,"index":6313}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489651,"byte_end":8489723,"line_start":79,"line_end":79,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489724,"byte_end":8489736,"line_start":80,"line_end":80,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489737,"byte_end":8489740,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489741,"byte_end":8489796,"line_start":82,"line_end":82,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489797,"byte_end":8489812,"line_start":83,"line_end":83,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489813,"byte_end":8489816,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489817,"byte_end":8489850,"line_start":85,"line_end":85,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6318},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8490245,"byte_end":8490261,"line_start":101,"line_end":101,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":6321},{"krate":0,"index":6322}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8489976,"byte_end":8490052,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8490053,"byte_end":8490065,"line_start":93,"line_end":93,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8490066,"byte_end":8490069,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8490070,"byte_end":8490127,"line_start":95,"line_end":95,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8490128,"byte_end":8490146,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8490147,"byte_end":8490150,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8490151,"byte_end":8490186,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8490187,"byte_end":8490216,"line_start":99,"line_end":99,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5834},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492326,"byte_end":8492329,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492116,"byte_end":8492179,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492184,"byte_end":8492187,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492192,"byte_end":8492206,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492211,"byte_end":8492214,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492219,"byte_end":8492226,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492231,"byte_end":8492259,"line_start":167,"line_end":167,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492264,"byte_end":8492267,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492272,"byte_end":8492302,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492307,"byte_end":8492314,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5835},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493544,"byte_end":8493548,"line_start":212,"line_end":212,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with shared read access, causing the current task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492506,"byte_end":8492577,"line_start":181,"line_end":181,"column_start":5,"column_end":76}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492582,"byte_end":8492628,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492633,"byte_end":8492636,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no more writers which","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492641,"byte_end":8492710,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/ hold the lock. There may be other readers currently inside the lock when","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492715,"byte_end":8492791,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/ this method returns.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492796,"byte_end":8492820,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492825,"byte_end":8492828,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492833,"byte_end":8492847,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492852,"byte_end":8492855,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492860,"byte_end":8492867,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492872,"byte_end":8492895,"line_start":191,"line_end":191,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492900,"byte_end":8492928,"line_start":192,"line_end":192,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492933,"byte_end":8492936,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492941,"byte_end":8492959,"line_start":194,"line_end":194,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492964,"byte_end":8492985,"line_start":195,"line_end":195,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492990,"byte_end":8493034,"line_start":196,"line_end":196,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493039,"byte_end":8493073,"line_start":197,"line_end":197,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493078,"byte_end":8493081,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493086,"byte_end":8493120,"line_start":199,"line_end":199,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493125,"byte_end":8493151,"line_start":200,"line_end":200,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493156,"byte_end":8493159,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493164,"byte_end":8493197,"line_start":202,"line_end":202,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493202,"byte_end":8493272,"line_start":203,"line_end":203,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493277,"byte_end":8493317,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493322,"byte_end":8493352,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has paniced\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493357,"byte_end":8493413,"line_start":206,"line_end":206,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493418,"byte_end":8493421,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493426,"byte_end":8493484,"line_start":208,"line_end":208,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493489,"byte_end":8493505,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493510,"byte_end":8493514,"line_start":210,"line_end":210,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493519,"byte_end":8493526,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5839},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494579,"byte_end":8494584,"line_start":243,"line_end":243,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with exclusive write access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with exclusive write access, causing the current task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8493938,"byte_end":8494013,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494018,"byte_end":8494064,"line_start":222,"line_end":222,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494069,"byte_end":8494072,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function will not return while other writers or other readers","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494077,"byte_end":8494147,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ currently have access to the lock.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494152,"byte_end":8494190,"line_start":225,"line_end":225,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494195,"byte_end":8494198,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this rwlock","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494203,"byte_end":8494276,"line_start":227,"line_end":227,"column_start":5,"column_end":78}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494281,"byte_end":8494298,"line_start":228,"line_end":228,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494303,"byte_end":8494306,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494311,"byte_end":8494325,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494330,"byte_end":8494333,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494338,"byte_end":8494345,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494350,"byte_end":8494378,"line_start":233,"line_end":233,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494383,"byte_end":8494386,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494391,"byte_end":8494409,"line_start":235,"line_end":235,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494414,"byte_end":8494435,"line_start":236,"line_end":236,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494440,"byte_end":8494472,"line_start":237,"line_end":237,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494477,"byte_end":8494480,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494485,"byte_end":8494522,"line_start":239,"line_end":239,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494527,"byte_end":8494540,"line_start":240,"line_end":240,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494545,"byte_end":8494549,"line_start":241,"line_end":241,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8494554,"byte_end":8494561,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5843},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8495099,"byte_end":8495109,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8495034,"byte_end":8495087,"line_start":255,"line_end":255,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":5911},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":5912},{"krate":0,"index":5913},{"krate":0,"index":5914},{"krate":0,"index":5915},{"krate":0,"index":5916},{"krate":0,"index":5917},{"krate":0,"index":5918},{"krate":0,"index":12736},{"krate":0,"index":5919},{"krate":0,"index":12738},{"krate":0,"index":5920},{"krate":0,"index":5921},{"krate":0,"index":5922},{"krate":0,"index":5923},{"krate":0,"index":5924},{"krate":0,"index":5925},{"krate":0,"index":5926},{"krate":0,"index":5927},{"krate":0,"index":12750},{"krate":0,"index":5928},{"krate":0,"index":12752},{"krate":0,"index":5929},{"krate":0,"index":5930},{"krate":0,"index":5931},{"krate":0,"index":6336},{"krate":0,"index":6340},{"krate":0,"index":6343},{"krate":0,"index":6346},{"krate":0,"index":6349},{"krate":0,"index":6353},{"krate":0,"index":5932},{"krate":0,"index":6363},{"krate":0,"index":6369},{"krate":0,"index":5939},{"krate":0,"index":6372},{"krate":0,"index":6377},{"krate":0,"index":6375},{"krate":0,"index":6379},{"krate":0,"index":6382},{"krate":0,"index":5940},{"krate":0,"index":5941},{"krate":0,"index":5945},{"krate":0,"index":5950},{"krate":0,"index":5957},{"krate":0,"index":5962},{"krate":0,"index":5965},{"krate":0,"index":5968},{"krate":0,"index":5976},{"krate":0,"index":5978},{"krate":0,"index":5981},{"krate":0,"index":5985},{"krate":0,"index":5988},{"krate":0,"index":5990},{"krate":0,"index":5992},{"krate":0,"index":5993},{"krate":0,"index":5996}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"! A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8508624,"byte_end":8508703,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"! value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8508704,"byte_end":8508714,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8508715,"byte_end":8508718,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! This channel is useful for watching for changes to a value from multiple","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8508719,"byte_end":8508795,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"! points in the code base, for example, changes to configuration values.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8508796,"byte_end":8508870,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8508871,"byte_end":8508874,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8508875,"byte_end":8508886,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8508887,"byte_end":8508890,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8508891,"byte_end":8508958,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"! the producer and sender halves of the channel. The channel is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8508959,"byte_end":8509024,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"! created with an initial value. [`Receiver::recv`] will always","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509025,"byte_end":8509090,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"! be ready upon creation and will yield either this initial value or","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509091,"byte_end":8509161,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"! the latest value that has been sent by `Sender`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509162,"byte_end":8509214,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509215,"byte_end":8509218,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! Calls to [`Receiver::recv`] will always yield the latest value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509219,"byte_end":8509286,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509287,"byte_end":8509290,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509291,"byte_end":8509305,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509306,"byte_end":8509309,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509310,"byte_end":8509317,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509318,"byte_end":8509345,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509346,"byte_end":8509349,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509350,"byte_end":8509414,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"!     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509415,"byte_end":8509466,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509467,"byte_end":8509470,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509471,"byte_end":8509504,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"!         while let Some(value) = rx.recv().await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509505,"byte_end":8509558,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"!             println!(\"received = {:?}\", value);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509559,"byte_end":8509610,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"!         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509611,"byte_end":8509624,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509625,"byte_end":8509636,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509637,"byte_end":8509640,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"!     tx.broadcast(\"world\")?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509641,"byte_end":8509672,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"! # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509673,"byte_end":8509685,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509686,"byte_end":8509693,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509694,"byte_end":8509701,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509702,"byte_end":8509705,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! # Closing","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509706,"byte_end":8509719,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509720,"byte_end":8509723,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! [`Sender::closed`] allows the producer to detect when all [`Receiver`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509724,"byte_end":8509798,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"! handles have been dropped. This indicates that there is no further interest","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509799,"byte_end":8509878,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"! in the values being produced and work can be stopped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509879,"byte_end":8509936,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509937,"byte_end":8509940,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! # Thread safety","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509941,"byte_end":8509960,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509961,"byte_end":8509964,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8509965,"byte_end":8510045,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"! threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8510046,"byte_end":8510125,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"! handles may be moved to separate threads and also used concurrently.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8510126,"byte_end":8510198,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8510199,"byte_end":8510202,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8510203,"byte_end":8510245,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"! [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8510246,"byte_end":8510292,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"! [`Receiver::recv`]: crate::sync::watch::Receiver::recv","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8510293,"byte_end":8510351,"line_start":50,"line_end":50,"column_start":1,"column_end":59}},{"value":"! [`channel`]: crate::sync::watch::channel","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8510352,"byte_end":8510396,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"! [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8510397,"byte_end":8510455,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6336},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8510943,"byte_end":8510951,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6338},{"krate":0,"index":6339}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8510777,"byte_end":8510843,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8510844,"byte_end":8510847,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8510848,"byte_end":8510914,"line_start":67,"line_end":67,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6343},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8511258,"byte_end":8511264,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6345}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8511093,"byte_end":8511158,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8511159,"byte_end":8511162,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8511163,"byte_end":8511229,"line_start":79,"line_end":79,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6349},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8511585,"byte_end":8511588,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":6352}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8511302,"byte_end":8511344,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8511345,"byte_end":8511348,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8511349,"byte_end":8511425,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8511426,"byte_end":8511505,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8511506,"byte_end":8511556,"line_start":89,"line_end":89,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":5932},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8511644,"byte_end":8511649,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":5933},{"krate":0,"index":6357},{"krate":0,"index":6360},{"krate":0,"index":5934},{"krate":0,"index":5937}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"! Watch error types","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8511656,"byte_end":8511677,"line_start":96,"line_end":96,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":6357},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8511785,"byte_end":8511794,"line_start":102,"line_end":102,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":6359}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8511702,"byte_end":8511748,"line_start":100,"line_end":100,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":5941},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513573,"byte_end":8513580,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T: Clone>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8512805,"byte_end":8512881,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8512882,"byte_end":8512885,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8512886,"byte_end":8512968,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8512969,"byte_end":8513045,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513046,"byte_end":8513082,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513083,"byte_end":8513086,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513087,"byte_end":8513101,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513102,"byte_end":8513105,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513106,"byte_end":8513113,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513114,"byte_end":8513141,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513142,"byte_end":8513145,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513146,"byte_end":8513210,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513211,"byte_end":8513262,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513263,"byte_end":8513266,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513267,"byte_end":8513300,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513301,"byte_end":8513354,"line_start":165,"line_end":165,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513355,"byte_end":8513406,"line_start":166,"line_end":166,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513407,"byte_end":8513420,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513421,"byte_end":8513432,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513433,"byte_end":8513436,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513437,"byte_end":8513468,"line_start":170,"line_end":170,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513469,"byte_end":8513481,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513482,"byte_end":8513489,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513490,"byte_end":8513497,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513498,"byte_end":8513501,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513502,"byte_end":8513531,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8513532,"byte_end":8513565,"line_start":176,"line_end":176,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5947},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514749,"byte_end":8514755,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514287,"byte_end":8514342,"line_start":205,"line_end":205,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514347,"byte_end":8514350,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514355,"byte_end":8514431,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514436,"byte_end":8514512,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514517,"byte_end":8514548,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514553,"byte_end":8514556,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514561,"byte_end":8514575,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514580,"byte_end":8514583,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514588,"byte_end":8514595,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514600,"byte_end":8514627,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514632,"byte_end":8514635,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514640,"byte_end":8514682,"line_start":216,"line_end":216,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514687,"byte_end":8514725,"line_start":217,"line_end":217,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514730,"byte_end":8514737,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5948},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514915,"byte_end":8514928,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"poll_recv_ref","qualname":"<Receiver<T>>::poll_recv_ref","value":"pub fn poll_recv_ref<'a>(&'a mut Self, &mut Context) -> Poll<Option<Ref>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5952},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516649,"byte_end":8516653,"line_start":282,"line_end":282,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the latest value sent via the channel.","sig":null,"attributes":[{"value":"/ Attempts to clone the latest value sent via the channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8515567,"byte_end":8515627,"line_start":249,"line_end":249,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8515632,"byte_end":8515635,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If this is the first time the function is called on a `Receiver`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8515640,"byte_end":8515708,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ instance, then the function completes immediately with the **current**","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8515713,"byte_end":8515787,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ value held by the channel. On the next call, the function waits until","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8515792,"byte_end":8515865,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ a new value is sent in the channel.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8515870,"byte_end":8515909,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8515914,"byte_end":8515917,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the `Sender` half is dropped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8515922,"byte_end":8515977,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8515982,"byte_end":8515985,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8515990,"byte_end":8516004,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516009,"byte_end":8516012,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516017,"byte_end":8516024,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516029,"byte_end":8516056,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516061,"byte_end":8516064,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516069,"byte_end":8516087,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516092,"byte_end":8516113,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516118,"byte_end":8516169,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516174,"byte_end":8516177,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516182,"byte_end":8516223,"line_start":267,"line_end":267,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"hello\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516228,"byte_end":8516259,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516264,"byte_end":8516267,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516272,"byte_end":8516305,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/         tx.broadcast(\"goodbye\").unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516310,"byte_end":8516355,"line_start":271,"line_end":271,"column_start":5,"column_end":50}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516360,"byte_end":8516371,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516376,"byte_end":8516379,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     // Waits for the new task to spawn and send the value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516384,"byte_end":8516446,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516451,"byte_end":8516492,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"goodbye\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516497,"byte_end":8516530,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516535,"byte_end":8516538,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516543,"byte_end":8516575,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/     assert!(v.is_none());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516580,"byte_end":8516609,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516614,"byte_end":8516619,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516624,"byte_end":8516631,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5970},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8517719,"byte_end":8517728,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Sender<T>>::broadcast","value":"pub fn broadcast(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Broadcasts a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Broadcasts a new value via the channel, notifying all receivers.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8517639,"byte_end":8517707,"line_start":321,"line_end":321,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5971},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8518559,"byte_end":8518565,"line_start":348,"line_end":348,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8518348,"byte_end":8518394,"line_start":344,"line_end":344,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8518399,"byte_end":8518402,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8518407,"byte_end":8518481,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8518486,"byte_end":8518541,"line_start":347,"line_end":347,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":6384},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":6386},{"krate":0,"index":6387},{"krate":0,"index":6388},{"krate":0,"index":6389},{"krate":0,"index":6393},{"krate":0,"index":6394},{"krate":0,"index":6400},{"krate":0,"index":6411},{"krate":0,"index":6489},{"krate":0,"index":6490},{"krate":0,"index":6491},{"krate":0,"index":6492},{"krate":0,"index":6553}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21559,"byte_end":21586,"line_start":247,"line_end":247,"column_start":13,"column_end":40}},{"value":"! Asynchronous green-threads.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8520311,"byte_end":8520342,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8520343,"byte_end":8520346,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! ## What are Tasks?","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8520347,"byte_end":8520369,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8520370,"byte_end":8520373,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8520374,"byte_end":8520455,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"! to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8520456,"byte_end":8520536,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8520537,"byte_end":8520617,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"! [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8520618,"byte_end":8520692,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"! coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8520693,"byte_end":8520768,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"! something similar.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8520769,"byte_end":8520791,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8520792,"byte_end":8520795,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Key points about tasks include:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8520796,"byte_end":8520831,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8520832,"byte_end":8520835,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8520836,"byte_end":8520910,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"!   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8520911,"byte_end":8520990,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"!   between tasks does not require a context switch and has fairly low","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8520991,"byte_end":8521063,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"!   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8521064,"byte_end":8521139,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"!   quite cheap, especially compared to OS threads.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8521140,"byte_end":8521193,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8521194,"byte_end":8521197,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8521198,"byte_end":8521275,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"!   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8521276,"byte_end":8521349,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"!   operating system allows each thread to run for a period of time, and then","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8521350,"byte_end":8521429,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"!   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8521430,"byte_end":8521508,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"!   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8521509,"byte_end":8521581,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"!   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8521582,"byte_end":8521657,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"!   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8521658,"byte_end":8521732,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"!   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8521733,"byte_end":8521808,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"!   executing the next task.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8521809,"byte_end":8521839,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8521840,"byte_end":8521843,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8521844,"byte_end":8521922,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"!   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8521923,"byte_end":8521998,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"!   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8521999,"byte_end":8522076,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"!   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522077,"byte_end":8522156,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"!   should generally not perform system calls or other operations that could","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522157,"byte_end":8522235,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"!   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522236,"byte_end":8522311,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"!   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522312,"byte_end":8522387,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"!   running blocking operations in an asynchronous context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522388,"byte_end":8522449,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522450,"byte_end":8522453,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! [rt]: crate::runtime","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522454,"byte_end":8522478,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"! [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522479,"byte_end":8522543,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"! [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522544,"byte_end":8522604,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"! [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522605,"byte_end":8522694,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"! [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522695,"byte_end":8522783,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522784,"byte_end":8522787,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ## Working with Tasks","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522788,"byte_end":8522813,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522814,"byte_end":8522817,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! This module provides the following APIs for working with tasks:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522818,"byte_end":8522885,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522886,"byte_end":8522889,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! ### Spawning","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522890,"byte_end":8522906,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522907,"byte_end":8522910,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522911,"byte_end":8522990,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"! function can be thought of as an async equivalent to the standard library's","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8522991,"byte_end":8523070,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"! [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523071,"byte_end":8523150,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"! [future], and creates a new task to run that work concurrently:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523151,"byte_end":8523218,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523219,"byte_end":8523222,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523223,"byte_end":8523230,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523231,"byte_end":8523251,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523252,"byte_end":8523255,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! # async fn doc() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523256,"byte_end":8523278,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"! task::spawn(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523279,"byte_end":8523302,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"!     // perform some work here...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523303,"byte_end":8523339,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"! });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523340,"byte_end":8523347,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523348,"byte_end":8523355,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523356,"byte_end":8523363,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523364,"byte_end":8523367,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523368,"byte_end":8523447,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"! A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523448,"byte_end":8523526,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"! the spawned task. For example:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523527,"byte_end":8523561,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523562,"byte_end":8523565,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523566,"byte_end":8523573,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523574,"byte_end":8523594,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523595,"byte_end":8523598,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523599,"byte_end":8523679,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"! let join = task::spawn(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523680,"byte_end":8523714,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"!     // ...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523715,"byte_end":8523729,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"!     \"hello world!\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523730,"byte_end":8523752,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"! });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523753,"byte_end":8523760,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523761,"byte_end":8523764,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! // ...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523765,"byte_end":8523775,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523776,"byte_end":8523779,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! // Await the result of the spawned task.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523780,"byte_end":8523824,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"! let result = join.await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523825,"byte_end":8523854,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"hello world!\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523855,"byte_end":8523894,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"! # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523895,"byte_end":8523907,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523908,"byte_end":8523915,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523916,"byte_end":8523923,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523924,"byte_end":8523927,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8523928,"byte_end":8524008,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"! task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524009,"byte_end":8524085,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"! example:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524086,"byte_end":8524098,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524099,"byte_end":8524102,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524103,"byte_end":8524110,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524111,"byte_end":8524131,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524132,"byte_end":8524135,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524136,"byte_end":8524174,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"! let join = task::spawn(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524175,"byte_end":8524209,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"!     panic!(\"something bad happened!\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524210,"byte_end":8524251,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"! });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524252,"byte_end":8524259,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524260,"byte_end":8524263,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! // The returned result indicates that the task failed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524264,"byte_end":8524322,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"! assert!(join.await.is_err());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524323,"byte_end":8524356,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"! # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524357,"byte_end":8524364,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524365,"byte_end":8524372,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524373,"byte_end":8524376,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524377,"byte_end":8524450,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"! feature flag is enabled.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524451,"byte_end":8524479,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524480,"byte_end":8524483,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! [`task::spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524484,"byte_end":8524525,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"! [future]: std::future::Future","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524526,"byte_end":8524559,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"! [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524560,"byte_end":8524606,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524607,"byte_end":8524650,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"! [thread_join]: std::thread::JoinHandle","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524651,"byte_end":8524693,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"! [`JoinError`]: crate::task::JoinError","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524694,"byte_end":8524735,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524736,"byte_end":8524739,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ### Blocking and Yielding","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524740,"byte_end":8524769,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524770,"byte_end":8524773,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524774,"byte_end":8524854,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"! operations that can block. A blocking operation performed in a task running","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524855,"byte_end":8524934,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"! on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8524935,"byte_end":8525014,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"! preventing other tasks from running.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525015,"byte_end":8525055,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525056,"byte_end":8525059,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525060,"byte_end":8525134,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"! asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525135,"byte_end":8525215,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525216,"byte_end":8525219,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! #### spawn_blocking","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525220,"byte_end":8525243,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525244,"byte_end":8525247,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525248,"byte_end":8525328,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"! discussed in the previous section, but rather than spawning an","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525329,"byte_end":8525395,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"! _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525396,"byte_end":8525463,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"! _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525464,"byte_end":8525538,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"! example:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525539,"byte_end":8525551,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525552,"byte_end":8525555,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525556,"byte_end":8525563,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525564,"byte_end":8525584,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525585,"byte_end":8525588,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525589,"byte_end":8525612,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"! task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525613,"byte_end":8525642,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525643,"byte_end":8525705,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"! });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525706,"byte_end":8525713,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525714,"byte_end":8525721,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525722,"byte_end":8525729,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525730,"byte_end":8525733,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525734,"byte_end":8525808,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"! which we can use to await the result of the blocking operation:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525809,"byte_end":8525876,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525877,"byte_end":8525880,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525881,"byte_end":8525892,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"! # use tokio::task;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525893,"byte_end":8525915,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"! # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525916,"byte_end":8525980,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"! let join = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8525981,"byte_end":8526021,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526022,"byte_end":8526084,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526085,"byte_end":8526113,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526114,"byte_end":8526121,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526122,"byte_end":8526125,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! let result = join.await?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526126,"byte_end":8526155,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526156,"byte_end":8526201,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"! # Ok(())","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526202,"byte_end":8526214,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526215,"byte_end":8526222,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526223,"byte_end":8526230,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526231,"byte_end":8526234,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"! #### block_in_place","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526235,"byte_end":8526258,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526259,"byte_end":8526262,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"! When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526263,"byte_end":8526343,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"! function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526344,"byte_end":8526418,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"! allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526419,"byte_end":8526495,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"! `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526496,"byte_end":8526570,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"! _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526571,"byte_end":8526650,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"! that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526651,"byte_end":8526733,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"! context switches.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526734,"byte_end":8526755,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526756,"byte_end":8526759,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! For example:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526760,"byte_end":8526776,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526777,"byte_end":8526780,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526781,"byte_end":8526788,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526789,"byte_end":8526809,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526810,"byte_end":8526813,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526814,"byte_end":8526837,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"! let result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526838,"byte_end":8526880,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526881,"byte_end":8526943,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526944,"byte_end":8526972,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526973,"byte_end":8526980,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526981,"byte_end":8526984,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8526985,"byte_end":8527030,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"! # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527031,"byte_end":8527038,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527039,"byte_end":8527046,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527047,"byte_end":8527050,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"! #### yield_now","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527051,"byte_end":8527069,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527070,"byte_end":8527073,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"! In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527074,"byte_end":8527148,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"! that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527149,"byte_end":8527227,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"! and `await`ing this function will cause the current task to yield to the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527228,"byte_end":8527304,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"! Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527305,"byte_end":8527362,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"! scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527363,"byte_end":8527441,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"! to execute. For example:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527442,"byte_end":8527470,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527471,"byte_end":8527474,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527475,"byte_end":8527486,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"! use tokio::task;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527487,"byte_end":8527507,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527508,"byte_end":8527511,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527512,"byte_end":8527550,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"! async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527551,"byte_end":8527562,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"!     task::spawn(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527563,"byte_end":8527590,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"!         // ...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527591,"byte_end":8527609,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"!         println!(\"spawned task done!\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527610,"byte_end":8527652,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"!     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527653,"byte_end":8527664,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527665,"byte_end":8527668,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"!     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527669,"byte_end":8527736,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"!     task::yield_now().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527737,"byte_end":8527769,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"!     println!(\"main task done!\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527770,"byte_end":8527806,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527807,"byte_end":8527812,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"! # .await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527813,"byte_end":8527826,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"! # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527827,"byte_end":8527834,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527835,"byte_end":8527842,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527843,"byte_end":8527846,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"! [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527847,"byte_end":8527904,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"! [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527905,"byte_end":8527962,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"! [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8527963,"byte_end":8528022,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"! [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8528023,"byte_end":8528072,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"! [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\mod.rs","byte_start":8528073,"byte_end":8528122,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":6401},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\spawn.rs","byte_start":8532205,"byte_end":8532210,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":6403},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\yield_now.rs","byte_start":8533283,"byte_end":8533292,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\yield_now.rs","byte_start":8533202,"byte_end":8533265,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6554},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8537690,"byte_end":8537698,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":6555},{"krate":0,"index":6556},{"krate":0,"index":6557}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":22242,"byte_end":22269,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":6563},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8539710,"byte_end":8539721,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":22242,"byte_end":22269,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6444},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8540618,"byte_end":8540621,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8540573,"byte_end":8540606,"line_start":222,"line_end":222,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6445},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542326,"byte_end":8542337,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541163,"byte_end":8541213,"line_start":240,"line_end":240,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541218,"byte_end":8541221,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541226,"byte_end":8541286,"line_start":242,"line_end":242,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541291,"byte_end":8541294,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541299,"byte_end":8541371,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541376,"byte_end":8541446,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541451,"byte_end":8541462,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541467,"byte_end":8541487,"line_start":247,"line_end":247,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541492,"byte_end":8541495,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541500,"byte_end":8541518,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541523,"byte_end":8541544,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541549,"byte_end":8541591,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541596,"byte_end":8541599,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541604,"byte_end":8541676,"line_start":253,"line_end":253,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541681,"byte_end":8541734,"line_start":254,"line_end":254,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541739,"byte_end":8541772,"line_start":255,"line_end":255,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541777,"byte_end":8541794,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541799,"byte_end":8541810,"line_start":257,"line_end":257,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541815,"byte_end":8541818,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541823,"byte_end":8541857,"line_start":259,"line_end":259,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541862,"byte_end":8541898,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541903,"byte_end":8541921,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541926,"byte_end":8541943,"line_start":262,"line_end":262,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541948,"byte_end":8541951,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8541956,"byte_end":8542027,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542032,"byte_end":8542082,"line_start":265,"line_end":265,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542087,"byte_end":8542120,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542125,"byte_end":8542142,"line_start":267,"line_end":267,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542147,"byte_end":8542158,"line_start":268,"line_end":268,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542163,"byte_end":8542166,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542171,"byte_end":8542207,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542212,"byte_end":8542230,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542235,"byte_end":8542252,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542257,"byte_end":8542262,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542267,"byte_end":8542274,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542279,"byte_end":8542314,"line_start":275,"line_end":275,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6447},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545072,"byte_end":8545080,"line_start":349,"line_end":349,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &mut crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542680,"byte_end":8542754,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542759,"byte_end":8542818,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542823,"byte_end":8542826,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542831,"byte_end":8542898,"line_start":290,"line_end":290,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542903,"byte_end":8542976,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8542981,"byte_end":8543057,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543062,"byte_end":8543142,"line_start":293,"line_end":293,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543147,"byte_end":8543166,"line_start":294,"line_end":294,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543171,"byte_end":8543174,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543179,"byte_end":8543245,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543250,"byte_end":8543253,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543258,"byte_end":8543270,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543275,"byte_end":8543278,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543283,"byte_end":8543355,"line_start":300,"line_end":300,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543360,"byte_end":8543433,"line_start":301,"line_end":301,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543438,"byte_end":8543441,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543446,"byte_end":8543457,"line_start":303,"line_end":303,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543462,"byte_end":8543465,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543470,"byte_end":8543544,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543549,"byte_end":8543624,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543629,"byte_end":8543704,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543709,"byte_end":8543786,"line_start":308,"line_end":308,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543791,"byte_end":8543794,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543799,"byte_end":8543832,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543837,"byte_end":8543856,"line_start":311,"line_end":311,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543861,"byte_end":8543893,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543898,"byte_end":8543918,"line_start":313,"line_end":313,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543923,"byte_end":8543926,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543931,"byte_end":8543972,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8543977,"byte_end":8544015,"line_start":316,"line_end":316,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544020,"byte_end":8544055,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544060,"byte_end":8544104,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544109,"byte_end":8544168,"line_start":319,"line_end":319,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544173,"byte_end":8544195,"line_start":320,"line_end":320,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544200,"byte_end":8544215,"line_start":321,"line_end":321,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544220,"byte_end":8544238,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544243,"byte_end":8544254,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544259,"byte_end":8544287,"line_start":324,"line_end":324,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544292,"byte_end":8544298,"line_start":325,"line_end":325,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544303,"byte_end":8544310,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544315,"byte_end":8544349,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544354,"byte_end":8544361,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544366,"byte_end":8544398,"line_start":329,"line_end":329,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544403,"byte_end":8544423,"line_start":330,"line_end":330,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544428,"byte_end":8544431,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544436,"byte_end":8544477,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544482,"byte_end":8544520,"line_start":333,"line_end":333,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544525,"byte_end":8544560,"line_start":334,"line_end":334,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544565,"byte_end":8544609,"line_start":335,"line_end":335,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544614,"byte_end":8544673,"line_start":336,"line_end":336,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544678,"byte_end":8544700,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544705,"byte_end":8544726,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544731,"byte_end":8544749,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544754,"byte_end":8544765,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544770,"byte_end":8544798,"line_start":341,"line_end":341,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544803,"byte_end":8544809,"line_start":342,"line_end":342,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544814,"byte_end":8544821,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544826,"byte_end":8544829,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544834,"byte_end":8544869,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544874,"byte_end":8544941,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8544946,"byte_end":8545001,"line_start":347,"line_end":347,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545006,"byte_end":8545060,"line_start":348,"line_end":348,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6449},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8546331,"byte_end":8546340,"line_start":384,"line_end":384,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<'_, F>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545239,"byte_end":8545309,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545314,"byte_end":8545317,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545322,"byte_end":8545392,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545397,"byte_end":8545473,"line_start":359,"line_end":359,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545478,"byte_end":8545546,"line_start":360,"line_end":360,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545551,"byte_end":8545631,"line_start":361,"line_end":361,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545636,"byte_end":8545708,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545713,"byte_end":8545788,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545793,"byte_end":8545849,"line_start":364,"line_end":364,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545854,"byte_end":8545857,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545862,"byte_end":8545876,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545881,"byte_end":8545884,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545889,"byte_end":8545900,"line_start":368,"line_end":368,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545905,"byte_end":8545925,"line_start":369,"line_end":369,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545930,"byte_end":8545933,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545938,"byte_end":8545956,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545961,"byte_end":8545982,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8545987,"byte_end":8546034,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8546039,"byte_end":8546081,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8546086,"byte_end":8546108,"line_start":375,"line_end":375,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8546113,"byte_end":8546143,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8546148,"byte_end":8546166,"line_start":377,"line_end":377,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8546171,"byte_end":8546188,"line_start":378,"line_end":378,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8546193,"byte_end":8546198,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8546203,"byte_end":8546210,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8546215,"byte_end":8546218,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8546223,"byte_end":8546258,"line_start":382,"line_end":382,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8546263,"byte_end":8546313,"line_start":383,"line_end":383,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6506},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555257,"byte_end":8555265,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":6508}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554424,"byte_end":8554454,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554455,"byte_end":8554458,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554459,"byte_end":8554513,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554514,"byte_end":8554517,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554518,"byte_end":8554584,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554585,"byte_end":8554652,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554653,"byte_end":8554710,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554711,"byte_end":8554780,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554781,"byte_end":8554784,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554785,"byte_end":8554799,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554800,"byte_end":8554803,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554804,"byte_end":8554811,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554812,"byte_end":8554834,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554835,"byte_end":8554859,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554860,"byte_end":8554887,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554888,"byte_end":8554893,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554894,"byte_end":8554897,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554898,"byte_end":8554930,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554931,"byte_end":8554967,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554968,"byte_end":8554981,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554982,"byte_end":8554985,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8554986,"byte_end":8555018,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555019,"byte_end":8555055,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555056,"byte_end":8555059,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555060,"byte_end":8555096,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555097,"byte_end":8555137,"line_start":87,"line_end":87,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555138,"byte_end":8555155,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555156,"byte_end":8555169,"line_start":89,"line_end":89,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555170,"byte_end":8555177,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555178,"byte_end":8555185,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555186,"byte_end":8555245,"line_start":92,"line_end":92,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6508},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555307,"byte_end":8555312,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":6506},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6511},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555840,"byte_end":8555845,"line_start":116,"line_end":116,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555390,"byte_end":8555454,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555459,"byte_end":8555462,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555467,"byte_end":8555528,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555533,"byte_end":8555536,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555541,"byte_end":8555557,"line_start":103,"line_end":103,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555562,"byte_end":8555565,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555570,"byte_end":8555577,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555582,"byte_end":8555604,"line_start":106,"line_end":106,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555609,"byte_end":8555633,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555638,"byte_end":8555665,"line_start":108,"line_end":108,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555670,"byte_end":8555675,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555680,"byte_end":8555683,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555688,"byte_end":8555720,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555725,"byte_end":8555780,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555785,"byte_end":8555798,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555803,"byte_end":8555810,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555815,"byte_end":8555822,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6515},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8556319,"byte_end":8556323,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8556070,"byte_end":8556136,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8556141,"byte_end":8556144,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8556149,"byte_end":8556161,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8556166,"byte_end":8556169,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8556174,"byte_end":8556235,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8556240,"byte_end":8556307,"line_start":133,"line_end":133,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6518},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8556811,"byte_end":8556819,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8556564,"byte_end":8556630,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8556635,"byte_end":8556638,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8556643,"byte_end":8556709,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8556714,"byte_end":8556779,"line_start":147,"line_end":147,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8556784,"byte_end":8556799,"line_start":148,"line_end":148,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6524},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8557279,"byte_end":8557282,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8557174,"byte_end":8557216,"line_start":164,"line_end":164,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8557221,"byte_end":8557267,"line_start":165,"line_end":165,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6566},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8558771,"byte_end":8558782,"line_start":224,"line_end":224,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":6567}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8558646,"byte_end":8558721,"line_start":222,"line_end":222,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":6578},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","parent":null,"children":[{"krate":0,"index":6579},{"krate":0,"index":6580},{"krate":0,"index":6581},{"krate":0,"index":6657},{"krate":0,"index":6658},{"krate":0,"index":6678},{"krate":0,"index":6679},{"krate":0,"index":6680},{"krate":0,"index":6681},{"krate":0,"index":6682},{"krate":0,"index":6859},{"krate":0,"index":6872},{"krate":0,"index":6873},{"krate":0,"index":6909},{"krate":0,"index":6910},{"krate":0,"index":6933},{"krate":0,"index":6934},{"krate":0,"index":6935},{"krate":0,"index":6936},{"krate":0,"index":6937},{"krate":0,"index":6971},{"krate":0,"index":6972},{"krate":0,"index":6973},{"krate":0,"index":6974},{"krate":0,"index":6975},{"krate":0,"index":7211},{"krate":0,"index":7235},{"krate":0,"index":7236},{"krate":0,"index":7237},{"krate":0,"index":6976},{"krate":0,"index":7040},{"krate":0,"index":7041},{"krate":0,"index":7046}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\cfg.rs","byte_start":23098,"byte_end":23122,"line_start":324,"line_end":324,"column_start":13,"column_end":37}},{"value":"! Utilities for tracking time.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559155,"byte_end":8559187,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559188,"byte_end":8559191,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides a number of types for executing code after a set period","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559192,"byte_end":8559272,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! of time.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559273,"byte_end":8559285,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559286,"byte_end":8559289,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559290,"byte_end":8559371,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"!   in time.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559372,"byte_end":8559386,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559387,"byte_end":8559390,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559391,"byte_end":8559461,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"!   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559462,"byte_end":8559542,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"!   elapses.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559543,"byte_end":8559557,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559558,"byte_end":8559561,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559562,"byte_end":8559641,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"!   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559642,"byte_end":8559714,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"!   complete in time, then it is canceled and an error is returned.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559715,"byte_end":8559784,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559785,"byte_end":8559788,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559789,"byte_end":8559866,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"!   has expired.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559867,"byte_end":8559885,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559886,"byte_end":8559889,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! These types are sufficient for handling a large number of scenarios","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559890,"byte_end":8559961,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"! involving time.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559962,"byte_end":8559981,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559982,"byte_end":8559985,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! These types must be used from within the context of the `Runtime`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8559986,"byte_end":8560056,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560057,"byte_end":8560060,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560061,"byte_end":8560075,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560076,"byte_end":8560079,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560080,"byte_end":8560126,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560127,"byte_end":8560130,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560131,"byte_end":8560138,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"! use tokio::time::delay_for;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560139,"byte_end":8560170,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560171,"byte_end":8560174,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560175,"byte_end":8560203,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560204,"byte_end":8560207,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560208,"byte_end":8560211,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560212,"byte_end":8560230,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560231,"byte_end":8560252,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"!     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560253,"byte_end":8560305,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"!     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560306,"byte_end":8560346,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560347,"byte_end":8560352,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560353,"byte_end":8560360,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560361,"byte_end":8560364,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560365,"byte_end":8560444,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"! `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560445,"byte_end":8560523,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"! prelude.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560524,"byte_end":8560536,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560537,"byte_end":8560540,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560541,"byte_end":8560548,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"! use tokio::time::{timeout, Duration};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560549,"byte_end":8560590,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560591,"byte_end":8560594,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! async fn long_future() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560595,"byte_end":8560623,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"!     // do work here","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560624,"byte_end":8560647,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560648,"byte_end":8560653,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560654,"byte_end":8560657,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! # async fn dox() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560658,"byte_end":8560680,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"! let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560681,"byte_end":8560748,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560749,"byte_end":8560752,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! if res.is_err() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560753,"byte_end":8560774,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"!     println!(\"operation timed out\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560775,"byte_end":8560815,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560816,"byte_end":8560821,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560822,"byte_end":8560829,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560830,"byte_end":8560837,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560838,"byte_end":8560841,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560842,"byte_end":8560918,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560919,"byte_end":8560922,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! The difference between [`interval`] and [`delay_for`] is that an","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560923,"byte_end":8560991,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"! [`interval`] measures the time since the last tick, which means that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8560992,"byte_end":8561064,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"! `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561065,"byte_end":8561140,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"! for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561141,"byte_end":8561219,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561220,"byte_end":8561223,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561224,"byte_end":8561302,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"! would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561303,"byte_end":8561373,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"! seconds.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561374,"byte_end":8561386,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561387,"byte_end":8561390,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561391,"byte_end":8561398,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"! use tokio::time;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561399,"byte_end":8561419,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561420,"byte_end":8561423,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561424,"byte_end":8561465,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"!     println!(\"hello\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561466,"byte_end":8561492,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"!     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561493,"byte_end":8561552,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561553,"byte_end":8561558,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561559,"byte_end":8561562,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561563,"byte_end":8561581,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561582,"byte_end":8561603,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"!     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561604,"byte_end":8561676,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"!     for _i in 0..5 {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561677,"byte_end":8561701,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"!         interval.tick().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561702,"byte_end":8561736,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"!         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561737,"byte_end":8561782,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"!     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561783,"byte_end":8561792,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561793,"byte_end":8561798,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561799,"byte_end":8561806,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561807,"byte_end":8561810,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! [`delay_for`]: crate::time::delay_for()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561811,"byte_end":8561854,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"! [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8561855,"byte_end":8561896,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":6581},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","parent":null,"children":[{"krate":0,"index":6582},{"krate":0,"index":6583},{"krate":0,"index":6584},{"krate":0,"index":6585},{"krate":0,"index":6586},{"krate":0,"index":6587},{"krate":0,"index":6588},{"krate":0,"index":6589},{"krate":0,"index":6590},{"krate":0,"index":6591},{"krate":0,"index":6592},{"krate":0,"index":6593},{"krate":0,"index":6594},{"krate":0,"index":12868},{"krate":0,"index":6595},{"krate":0,"index":6596},{"krate":0,"index":6597},{"krate":0,"index":6598},{"krate":0,"index":7063},{"krate":0,"index":7071},{"krate":0,"index":7074},{"krate":0,"index":7079},{"krate":0,"index":7082},{"krate":0,"index":7086},{"krate":0,"index":7084},{"krate":0,"index":7088},{"krate":0,"index":7092},{"krate":0,"index":7095},{"krate":0,"index":7102},{"krate":0,"index":6599},{"krate":0,"index":6600},{"krate":0,"index":6627},{"krate":0,"index":6629},{"krate":0,"index":6632},{"krate":0,"index":6636},{"krate":0,"index":6646},{"krate":0,"index":6649},{"krate":0,"index":6651}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"! A queue of delayed elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568047,"byte_end":8568079,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568080,"byte_end":8568083,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! See [`DelayQueue`] for more details.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568084,"byte_end":8568124,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568125,"byte_end":8568128,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568129,"byte_end":8568166,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":7063},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8572425,"byte_end":8572435,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":7065},{"krate":0,"index":7066},{"krate":0,"index":7067},{"krate":0,"index":7068},{"krate":0,"index":7069},{"krate":0,"index":7070}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568407,"byte_end":8568439,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568440,"byte_end":8568443,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568444,"byte_end":8568521,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568522,"byte_end":8568562,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568563,"byte_end":8568566,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568567,"byte_end":8568578,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568579,"byte_end":8568582,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568583,"byte_end":8568650,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568651,"byte_end":8568731,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568732,"byte_end":8568810,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568811,"byte_end":8568847,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568848,"byte_end":8568851,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568852,"byte_end":8568922,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll`] is called. If an entry has reached its","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8568923,"byte_end":8569001,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569002,"byte_end":8569075,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569076,"byte_end":8569145,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569146,"byte_end":8569149,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569150,"byte_end":8569179,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569180,"byte_end":8569183,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`Stream::poll`]. If no delays have","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569184,"byte_end":8569262,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569263,"byte_end":8569343,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569344,"byte_end":8569420,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569421,"byte_end":8569433,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569434,"byte_end":8569437,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569438,"byte_end":8569517,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569518,"byte_end":8569595,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569596,"byte_end":8569672,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569673,"byte_end":8569706,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569707,"byte_end":8569710,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569711,"byte_end":8569789,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569790,"byte_end":8569866,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569867,"byte_end":8569945,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569946,"byte_end":8569985,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569986,"byte_end":8569989,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8569990,"byte_end":8570010,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570011,"byte_end":8570014,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of the same timer wheel used internally by","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570015,"byte_end":8570113,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ Tokio's standalone timer utilities such as [`delay_for`]. Because of this, it offers the same","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570114,"byte_end":8570211,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ performance and scalability benefits.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570212,"byte_end":8570253,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570254,"byte_end":8570257,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570258,"byte_end":8570358,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570359,"byte_end":8570424,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570425,"byte_end":8570428,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570429,"byte_end":8570511,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570512,"byte_end":8570539,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570540,"byte_end":8570543,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570544,"byte_end":8570555,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570556,"byte_end":8570559,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570560,"byte_end":8570607,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570608,"byte_end":8570611,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570612,"byte_end":8570630,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570631,"byte_end":8570685,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570686,"byte_end":8570689,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570690,"byte_end":8570713,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570714,"byte_end":8570748,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570749,"byte_end":8570784,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570785,"byte_end":8570813,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570814,"byte_end":8570843,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570844,"byte_end":8570870,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570871,"byte_end":8570874,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570875,"byte_end":8570893,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570894,"byte_end":8570956,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8570957,"byte_end":8570999,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571000,"byte_end":8571005,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571006,"byte_end":8571009,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571010,"byte_end":8571039,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571040,"byte_end":8571043,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571044,"byte_end":8571060,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571061,"byte_end":8571120,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571121,"byte_end":8571161,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571162,"byte_end":8571230,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571231,"byte_end":8571234,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571235,"byte_end":8571288,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571289,"byte_end":8571298,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571299,"byte_end":8571302,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571303,"byte_end":8571360,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571361,"byte_end":8571394,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571395,"byte_end":8571432,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571433,"byte_end":8571442,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571443,"byte_end":8571446,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571447,"byte_end":8571493,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571494,"byte_end":8571562,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571563,"byte_end":8571615,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571616,"byte_end":8571629,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571630,"byte_end":8571639,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571640,"byte_end":8571643,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571644,"byte_end":8571727,"line_start":103,"line_end":103,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571728,"byte_end":8571805,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571806,"byte_end":8571839,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571840,"byte_end":8571893,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571894,"byte_end":8571907,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571908,"byte_end":8571911,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571912,"byte_end":8571943,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571944,"byte_end":8571953,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571954,"byte_end":8571959,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571960,"byte_end":8571967,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571968,"byte_end":8571971,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8571972,"byte_end":8572007,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8572008,"byte_end":8572049,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8572050,"byte_end":8572073,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8572074,"byte_end":8572150,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8572151,"byte_end":8572182,"line_start":118,"line_end":118,"column_start":1,"column_end":32}},{"value":"/ [`Stream::poll`]: method@Self::poll","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8572183,"byte_end":8572222,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8572223,"byte_end":8572260,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ [`delay_for`]: fn@super::delay_for","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8572261,"byte_end":8572299,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/ [`slab`]: slab","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8572300,"byte_end":8572318,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8572319,"byte_end":8572358,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8572359,"byte_end":8572396,"line_start":124,"line_end":124,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":7074},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8573126,"byte_end":8573133,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":7076},{"krate":0,"index":7077},{"krate":0,"index":7078}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8572932,"byte_end":8572990,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8572991,"byte_end":8572994,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8572995,"byte_end":8573043,"line_start":149,"line_end":149,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8573044,"byte_end":8573047,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll`]: method@DelayQueue::poll","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8573048,"byte_end":8573097,"line_start":151,"line_end":151,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7082},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8573601,"byte_end":8573604,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":7083}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8573301,"byte_end":8573347,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8573348,"byte_end":8573351,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8573352,"byte_end":8573433,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8573434,"byte_end":8573469,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8573470,"byte_end":8573473,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8573474,"byte_end":8573511,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8573512,"byte_end":8573565,"line_start":170,"line_end":170,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6602},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574582,"byte_end":8574585,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"pub fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574282,"byte_end":8574320,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574325,"byte_end":8574328,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574333,"byte_end":8574406,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574411,"byte_end":8574414,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574419,"byte_end":8574433,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574438,"byte_end":8574441,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574446,"byte_end":8574457,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574462,"byte_end":8574496,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574501,"byte_end":8574558,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574563,"byte_end":8574570,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6603},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575503,"byte_end":8575516,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574655,"byte_end":8574722,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574727,"byte_end":8574730,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574735,"byte_end":8574806,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574811,"byte_end":8574880,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574885,"byte_end":8574897,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574902,"byte_end":8574905,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574910,"byte_end":8574924,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574929,"byte_end":8574932,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574937,"byte_end":8574948,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574953,"byte_end":8574987,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574992,"byte_end":8575022,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575027,"byte_end":8575030,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575035,"byte_end":8575055,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575060,"byte_end":8575083,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575088,"byte_end":8575148,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575153,"byte_end":8575156,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575161,"byte_end":8575224,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575229,"byte_end":8575253,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575258,"byte_end":8575316,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575321,"byte_end":8575330,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575335,"byte_end":8575338,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575343,"byte_end":8575406,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575411,"byte_end":8575467,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575472,"byte_end":8575479,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575484,"byte_end":8575491,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6604},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577552,"byte_end":8577561,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"pub fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575815,"byte_end":8575888,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575893,"byte_end":8575902,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575907,"byte_end":8575910,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575915,"byte_end":8575989,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8575994,"byte_end":8576014,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576019,"byte_end":8576022,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576027,"byte_end":8576102,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576107,"byte_end":8576177,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576182,"byte_end":8576246,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576251,"byte_end":8576254,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576259,"byte_end":8576334,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576339,"byte_end":8576414,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576419,"byte_end":8576489,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576494,"byte_end":8576567,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576572,"byte_end":8576648,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576653,"byte_end":8576687,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576692,"byte_end":8576695,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576700,"byte_end":8576752,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576757,"byte_end":8576760,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576765,"byte_end":8576777,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576782,"byte_end":8576785,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576790,"byte_end":8576850,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576855,"byte_end":8576858,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576863,"byte_end":8576877,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576882,"byte_end":8576885,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576890,"byte_end":8576905,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576910,"byte_end":8576913,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576918,"byte_end":8576929,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576934,"byte_end":8576987,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8576992,"byte_end":8576995,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577000,"byte_end":8577020,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577025,"byte_end":8577048,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577053,"byte_end":8577101,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577106,"byte_end":8577146,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577151,"byte_end":8577211,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577216,"byte_end":8577219,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577224,"byte_end":8577251,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577256,"byte_end":8577300,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577305,"byte_end":8577348,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577353,"byte_end":8577360,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577365,"byte_end":8577372,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577377,"byte_end":8577380,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577385,"byte_end":8577416,"line_start":298,"line_end":298,"column_start":5,"column_end":36}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577421,"byte_end":8577456,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577461,"byte_end":8577494,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577499,"byte_end":8577522,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8577527,"byte_end":8577540,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6605},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8578921,"byte_end":8578933,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"pub fn poll_expired(&mut Self, &mut task::Context)\n-> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8578713,"byte_end":8578788,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8578793,"byte_end":8578869,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8578874,"byte_end":8578909,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6608},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8581305,"byte_end":8581311,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"pub fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8579550,"byte_end":8579627,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8579632,"byte_end":8579644,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8579649,"byte_end":8579652,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8579657,"byte_end":8579726,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8579731,"byte_end":8579759,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8579764,"byte_end":8579767,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8579772,"byte_end":8579847,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8579852,"byte_end":8579922,"line_start":370,"line_end":370,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8579927,"byte_end":8579991,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8579996,"byte_end":8579999,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580004,"byte_end":8580079,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580084,"byte_end":8580159,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580164,"byte_end":8580234,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580239,"byte_end":8580312,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580317,"byte_end":8580393,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580398,"byte_end":8580432,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580437,"byte_end":8580440,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580445,"byte_end":8580497,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580502,"byte_end":8580505,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580510,"byte_end":8580522,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580527,"byte_end":8580530,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580535,"byte_end":8580610,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580615,"byte_end":8580628,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580633,"byte_end":8580636,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580641,"byte_end":8580655,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580660,"byte_end":8580663,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580668,"byte_end":8580683,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580688,"byte_end":8580691,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580696,"byte_end":8580707,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580712,"byte_end":8580744,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580749,"byte_end":8580777,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580782,"byte_end":8580785,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580790,"byte_end":8580810,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580815,"byte_end":8580838,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580843,"byte_end":8580891,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580896,"byte_end":8580964,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580969,"byte_end":8580972,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8580977,"byte_end":8581004,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8581009,"byte_end":8581053,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8581058,"byte_end":8581101,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8581106,"byte_end":8581113,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8581118,"byte_end":8581125,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8581130,"byte_end":8581133,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8581138,"byte_end":8581169,"line_start":406,"line_end":406,"column_start":5,"column_end":36}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8581174,"byte_end":8581209,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8581214,"byte_end":8581247,"line_start":408,"line_end":408,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8581252,"byte_end":8581275,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8581280,"byte_end":8581293,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6613},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582856,"byte_end":8582862,"line_start":458,"line_end":458,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"pub fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582002,"byte_end":8582060,"line_start":430,"line_end":430,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582065,"byte_end":8582068,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582073,"byte_end":8582146,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582151,"byte_end":8582224,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582229,"byte_end":8582246,"line_start":434,"line_end":434,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582251,"byte_end":8582254,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582259,"byte_end":8582271,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582276,"byte_end":8582279,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582284,"byte_end":8582347,"line_start":438,"line_end":438,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582352,"byte_end":8582355,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582360,"byte_end":8582374,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582379,"byte_end":8582382,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582387,"byte_end":8582402,"line_start":442,"line_end":442,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582407,"byte_end":8582410,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582415,"byte_end":8582426,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582431,"byte_end":8582463,"line_start":445,"line_end":445,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582468,"byte_end":8582496,"line_start":446,"line_end":446,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582501,"byte_end":8582504,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582509,"byte_end":8582529,"line_start":448,"line_end":448,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582534,"byte_end":8582557,"line_start":449,"line_end":449,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582562,"byte_end":8582610,"line_start":450,"line_end":450,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582615,"byte_end":8582683,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582688,"byte_end":8582691,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582696,"byte_end":8582723,"line_start":453,"line_end":453,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582728,"byte_end":8582772,"line_start":454,"line_end":454,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582777,"byte_end":8582820,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582825,"byte_end":8582832,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8582837,"byte_end":8582844,"line_start":457,"line_end":457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6615},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8584514,"byte_end":8584522,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"pub fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583400,"byte_end":8583473,"line_start":477,"line_end":477,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583478,"byte_end":8583481,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583486,"byte_end":8583561,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583566,"byte_end":8583583,"line_start":480,"line_end":480,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583588,"byte_end":8583591,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583596,"byte_end":8583671,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583676,"byte_end":8583752,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583757,"byte_end":8583772,"line_start":484,"line_end":484,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583777,"byte_end":8583780,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583785,"byte_end":8583797,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583802,"byte_end":8583805,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583810,"byte_end":8583884,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583889,"byte_end":8583920,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583925,"byte_end":8583928,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583933,"byte_end":8583947,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583952,"byte_end":8583955,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583960,"byte_end":8583975,"line_start":493,"line_end":493,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583980,"byte_end":8583983,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8583988,"byte_end":8583999,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8584004,"byte_end":8584057,"line_start":496,"line_end":496,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8584062,"byte_end":8584065,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8584070,"byte_end":8584090,"line_start":498,"line_end":498,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8584095,"byte_end":8584118,"line_start":499,"line_end":499,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8584123,"byte_end":8584171,"line_start":500,"line_end":500,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8584176,"byte_end":8584244,"line_start":501,"line_end":501,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8584249,"byte_end":8584252,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8584257,"byte_end":8584314,"line_start":503,"line_end":503,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8584319,"byte_end":8584322,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8584327,"byte_end":8584404,"line_start":505,"line_end":505,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8584409,"byte_end":8584412,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8584417,"byte_end":8584478,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8584483,"byte_end":8584490,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8584495,"byte_end":8584502,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6618},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586415,"byte_end":8586420,"line_start":567,"line_end":567,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"pub fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585265,"byte_end":8585333,"line_start":532,"line_end":532,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585338,"byte_end":8585352,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585357,"byte_end":8585360,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585365,"byte_end":8585440,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585445,"byte_end":8585465,"line_start":536,"line_end":536,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585470,"byte_end":8585473,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585478,"byte_end":8585548,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585553,"byte_end":8585623,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585628,"byte_end":8585656,"line_start":540,"line_end":540,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585661,"byte_end":8585664,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585669,"byte_end":8585681,"line_start":542,"line_end":542,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585686,"byte_end":8585689,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585694,"byte_end":8585769,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585774,"byte_end":8585829,"line_start":545,"line_end":545,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585834,"byte_end":8585837,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585842,"byte_end":8585856,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585861,"byte_end":8585864,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585869,"byte_end":8585884,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585889,"byte_end":8585892,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585897,"byte_end":8585908,"line_start":551,"line_end":551,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585913,"byte_end":8585945,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585950,"byte_end":8585978,"line_start":553,"line_end":553,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585983,"byte_end":8585986,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8585991,"byte_end":8586011,"line_start":555,"line_end":555,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586016,"byte_end":8586039,"line_start":556,"line_end":556,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586044,"byte_end":8586092,"line_start":557,"line_end":557,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586097,"byte_end":8586165,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586170,"byte_end":8586173,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586178,"byte_end":8586235,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586240,"byte_end":8586243,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586248,"byte_end":8586305,"line_start":562,"line_end":562,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586310,"byte_end":8586313,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586318,"byte_end":8586379,"line_start":564,"line_end":564,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586384,"byte_end":8586391,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586396,"byte_end":8586403,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6619},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587262,"byte_end":8587267,"line_start":598,"line_end":598,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586529,"byte_end":8586570,"line_start":571,"line_end":571,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586575,"byte_end":8586578,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll`] will return `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586583,"byte_end":8586649,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586654,"byte_end":8586657,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586662,"byte_end":8586728,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586733,"byte_end":8586736,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586741,"byte_end":8586772,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586777,"byte_end":8586780,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586785,"byte_end":8586799,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586804,"byte_end":8586807,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586812,"byte_end":8586823,"line_start":581,"line_end":581,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586828,"byte_end":8586860,"line_start":582,"line_end":582,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586865,"byte_end":8586893,"line_start":583,"line_end":583,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586898,"byte_end":8586901,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586906,"byte_end":8586926,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586931,"byte_end":8586954,"line_start":586,"line_end":586,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8586959,"byte_end":8587007,"line_start":587,"line_end":587,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587012,"byte_end":8587015,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587020,"byte_end":8587078,"line_start":589,"line_end":589,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587083,"byte_end":8587086,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587091,"byte_end":8587132,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587137,"byte_end":8587140,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587145,"byte_end":8587173,"line_start":593,"line_end":593,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587178,"byte_end":8587181,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587186,"byte_end":8587226,"line_start":595,"line_end":595,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587231,"byte_end":8587238,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587243,"byte_end":8587250,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6620},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587739,"byte_end":8587747,"line_start":615,"line_end":615,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587422,"byte_end":8587497,"line_start":605,"line_end":605,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587502,"byte_end":8587505,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587510,"byte_end":8587524,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587529,"byte_end":8587532,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587537,"byte_end":8587548,"line_start":609,"line_end":609,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587553,"byte_end":8587585,"line_start":610,"line_end":610,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587590,"byte_end":8587593,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587598,"byte_end":8587667,"line_start":612,"line_end":612,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587672,"byte_end":8587715,"line_start":613,"line_end":613,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587720,"byte_end":8587727,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6621},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588315,"byte_end":8588318,"line_start":635,"line_end":635,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587806,"byte_end":8587864,"line_start":619,"line_end":619,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587869,"byte_end":8587872,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587877,"byte_end":8587891,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587896,"byte_end":8587899,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587904,"byte_end":8587915,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587920,"byte_end":8587952,"line_start":624,"line_end":624,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587957,"byte_end":8587985,"line_start":625,"line_end":625,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587990,"byte_end":8587993,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8587998,"byte_end":8588018,"line_start":627,"line_end":627,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588023,"byte_end":8588046,"line_start":628,"line_end":628,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588051,"byte_end":8588128,"line_start":629,"line_end":629,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588133,"byte_end":8588174,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588179,"byte_end":8588233,"line_start":631,"line_end":631,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588238,"byte_end":8588279,"line_start":632,"line_end":632,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588284,"byte_end":8588291,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588296,"byte_end":8588303,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6622},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589527,"byte_end":8589534,"line_start":672,"line_end":672,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588372,"byte_end":8588443,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588448,"byte_end":8588471,"line_start":640,"line_end":640,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588476,"byte_end":8588479,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588484,"byte_end":8588559,"line_start":642,"line_end":642,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588564,"byte_end":8588640,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588645,"byte_end":8588721,"line_start":644,"line_end":644,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588726,"byte_end":8588802,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588807,"byte_end":8588830,"line_start":646,"line_end":646,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588835,"byte_end":8588838,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588843,"byte_end":8588915,"line_start":648,"line_end":648,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588920,"byte_end":8588953,"line_start":649,"line_end":649,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588958,"byte_end":8588961,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588966,"byte_end":8588978,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588983,"byte_end":8588986,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8588991,"byte_end":8589063,"line_start":653,"line_end":653,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589068,"byte_end":8589090,"line_start":654,"line_end":654,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589095,"byte_end":8589098,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589103,"byte_end":8589117,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589122,"byte_end":8589125,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589130,"byte_end":8589137,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589142,"byte_end":8589174,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589179,"byte_end":8589207,"line_start":660,"line_end":660,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589212,"byte_end":8589215,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589220,"byte_end":8589240,"line_start":662,"line_end":662,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589245,"byte_end":8589268,"line_start":663,"line_end":663,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589273,"byte_end":8589321,"line_start":664,"line_end":664,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589326,"byte_end":8589329,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589334,"byte_end":8589395,"line_start":666,"line_end":666,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589400,"byte_end":8589432,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589437,"byte_end":8589440,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589445,"byte_end":8589491,"line_start":669,"line_end":669,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589496,"byte_end":8589503,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589508,"byte_end":8589515,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6623},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8590250,"byte_end":8590258,"line_start":696,"line_end":696,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589617,"byte_end":8589671,"line_start":676,"line_end":676,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589676,"byte_end":8589679,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589684,"byte_end":8589758,"line_start":678,"line_end":678,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589763,"byte_end":8589819,"line_start":679,"line_end":679,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589824,"byte_end":8589827,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589832,"byte_end":8589846,"line_start":681,"line_end":681,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589851,"byte_end":8589854,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589859,"byte_end":8589866,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589871,"byte_end":8589903,"line_start":684,"line_end":684,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589908,"byte_end":8589936,"line_start":685,"line_end":685,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589941,"byte_end":8589944,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589949,"byte_end":8589969,"line_start":687,"line_end":687,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8589974,"byte_end":8589997,"line_start":688,"line_end":688,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8590002,"byte_end":8590050,"line_start":689,"line_end":689,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8590055,"byte_end":8590095,"line_start":690,"line_end":690,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8590100,"byte_end":8590103,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8590108,"byte_end":8590168,"line_start":692,"line_end":692,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8590173,"byte_end":8590214,"line_start":693,"line_end":693,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8590219,"byte_end":8590226,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8590231,"byte_end":8590238,"line_start":695,"line_end":695,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6653},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8594921,"byte_end":8594928,"line_start":869,"line_end":869,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8594866,"byte_end":8594909,"line_start":868,"line_end":868,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6654},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8595037,"byte_end":8595044,"line_start":874,"line_end":874,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8594974,"byte_end":8595025,"line_start":873,"line_end":873,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6655},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8595162,"byte_end":8595172,"line_start":879,"line_end":879,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8595102,"byte_end":8595150,"line_start":878,"line_end":878,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6656},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8595283,"byte_end":8595291,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8595215,"byte_end":8595271,"line_start":883,"line_end":883,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":6668},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8595869,"byte_end":8595880,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"pub fn delay_until(Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8595495,"byte_end":8595533,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8595534,"byte_end":8595537,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8595538,"byte_end":8595613,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8595614,"byte_end":8595691,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8595692,"byte_end":8595727,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8595728,"byte_end":8595731,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8595732,"byte_end":8595750,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8595751,"byte_end":8595754,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8595755,"byte_end":8595831,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8595832,"byte_end":8595861,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":6669},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596946,"byte_end":8596955,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"pub fn delay_for(Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596019,"byte_end":8596058,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596059,"byte_end":8596062,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596063,"byte_end":8596138,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596139,"byte_end":8596174,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596175,"byte_end":8596178,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596179,"byte_end":8596254,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596255,"byte_end":8596332,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596333,"byte_end":8596368,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596369,"byte_end":8596372,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596373,"byte_end":8596436,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596437,"byte_end":8596440,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596441,"byte_end":8596459,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596460,"byte_end":8596463,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596464,"byte_end":8596540,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596541,"byte_end":8596570,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596571,"byte_end":8596574,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596575,"byte_end":8596589,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596590,"byte_end":8596593,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596594,"byte_end":8596641,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596642,"byte_end":8596645,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596646,"byte_end":8596653,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596654,"byte_end":8596697,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596698,"byte_end":8596701,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596702,"byte_end":8596720,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596721,"byte_end":8596742,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596743,"byte_end":8596795,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596796,"byte_end":8596836,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596837,"byte_end":8596842,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596843,"byte_end":8596850,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596851,"byte_end":8596854,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8596855,"byte_end":8596896,"line_start":53,"line_end":53,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":7105},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8597215,"byte_end":8597220,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":7106}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8597033,"byte_end":8597088,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8597089,"byte_end":8597118,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8597136,"byte_end":8597203,"line_start":62,"line_end":62,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6672},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8597660,"byte_end":8597668,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8597590,"byte_end":8597648,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6673},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8597872,"byte_end":8597882,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8597737,"byte_end":8597782,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8597787,"byte_end":8597790,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8597795,"byte_end":8597860,"line_start":83,"line_end":83,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6674},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8598271,"byte_end":8598276,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"pub fn reset(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8597950,"byte_end":8598000,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8598005,"byte_end":8598008,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8598013,"byte_end":8598087,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8598092,"byte_end":8598159,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8598164,"byte_end":8598167,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8598172,"byte_end":8598240,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8598245,"byte_end":8598259,"line_start":94,"line_end":94,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":7162},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631746,"byte_end":8631751,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8630633,"byte_end":8630684,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8630685,"byte_end":8630688,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8630689,"byte_end":8630750,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8630751,"byte_end":8630754,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8630755,"byte_end":8630829,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8630830,"byte_end":8630909,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8630910,"byte_end":8630985,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8630986,"byte_end":8631061,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631062,"byte_end":8631090,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631091,"byte_end":8631094,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631095,"byte_end":8631172,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631173,"byte_end":8631251,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631252,"byte_end":8631328,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631329,"byte_end":8631409,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631410,"byte_end":8631487,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631488,"byte_end":8631569,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631570,"byte_end":8631652,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631653,"byte_end":8631656,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631657,"byte_end":8631717,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6864},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631902,"byte_end":8631910,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631839,"byte_end":8631890,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6865},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8632042,"byte_end":8632053,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631959,"byte_end":8632030,"line_start":39,"line_end":39,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6866},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8632241,"byte_end":8632252,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8632175,"byte_end":8632229,"line_start":47,"line_end":47,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6867},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8632389,"byte_end":8632403,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8632303,"byte_end":8632377,"line_start":52,"line_end":52,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":7174},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633243,"byte_end":8633250,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":7175}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633047,"byte_end":8633107,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633108,"byte_end":8633170,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6878},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633497,"byte_end":8633500,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633304,"byte_end":8633350,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633355,"byte_end":8633358,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633363,"byte_end":8633377,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633382,"byte_end":8633385,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633390,"byte_end":8633397,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633402,"byte_end":8633431,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633436,"byte_end":8633439,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633444,"byte_end":8633473,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633478,"byte_end":8633485,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6879},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633626,"byte_end":8633634,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633550,"byte_end":8633614,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6880},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633770,"byte_end":8633778,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633708,"byte_end":8633758,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6881},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634022,"byte_end":8634036,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633837,"byte_end":8633909,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633914,"byte_end":8633917,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633922,"byte_end":8633934,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633939,"byte_end":8633942,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633947,"byte_end":8634010,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6882},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634727,"byte_end":8634749,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634132,"byte_end":8634207,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634212,"byte_end":8634260,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634265,"byte_end":8634268,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634273,"byte_end":8634287,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634292,"byte_end":8634295,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634300,"byte_end":8634307,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634312,"byte_end":8634364,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634369,"byte_end":8634372,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634377,"byte_end":8634395,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634400,"byte_end":8634421,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634426,"byte_end":8634459,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634464,"byte_end":8634509,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634514,"byte_end":8634551,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634556,"byte_end":8634618,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634623,"byte_end":8634693,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634698,"byte_end":8634703,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634708,"byte_end":8634715,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6883},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635472,"byte_end":8635497,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634861,"byte_end":8634936,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8634941,"byte_end":8635000,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635005,"byte_end":8635008,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635013,"byte_end":8635027,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635032,"byte_end":8635035,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635040,"byte_end":8635047,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635052,"byte_end":8635104,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635109,"byte_end":8635112,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635117,"byte_end":8635135,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635140,"byte_end":8635161,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635166,"byte_end":8635199,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635204,"byte_end":8635249,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635254,"byte_end":8635291,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635296,"byte_end":8635361,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635366,"byte_end":8635438,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635443,"byte_end":8635448,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635453,"byte_end":8635460,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6884},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636268,"byte_end":8636275,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635604,"byte_end":8635674,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635679,"byte_end":8635682,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635687,"byte_end":8635699,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635704,"byte_end":8635707,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635712,"byte_end":8635780,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635785,"byte_end":8635851,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635856,"byte_end":8635883,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635888,"byte_end":8635891,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635896,"byte_end":8635910,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635915,"byte_end":8635918,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635923,"byte_end":8635930,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635935,"byte_end":8635987,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8635992,"byte_end":8635995,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636000,"byte_end":8636018,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636023,"byte_end":8636044,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636049,"byte_end":8636086,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636091,"byte_end":8636139,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636144,"byte_end":8636180,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636185,"byte_end":8636234,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636239,"byte_end":8636244,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636249,"byte_end":8636256,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6885},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636556,"byte_end":8636567,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636339,"byte_end":8636414,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636419,"byte_end":8636490,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636495,"byte_end":8636544,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6886},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636906,"byte_end":8636917,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636689,"byte_end":8636764,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636769,"byte_end":8636840,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8636845,"byte_end":8636894,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":6922},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640381,"byte_end":8640389,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8638639,"byte_end":8638716,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8638717,"byte_end":8638748,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8638749,"byte_end":8638752,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8638753,"byte_end":8638833,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8638834,"byte_end":8638873,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8638874,"byte_end":8638877,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8638878,"byte_end":8638951,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8638952,"byte_end":8638955,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8638956,"byte_end":8638968,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8638969,"byte_end":8638972,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8638973,"byte_end":8639018,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639019,"byte_end":8639022,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639023,"byte_end":8639037,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639038,"byte_end":8639041,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639042,"byte_end":8639049,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639050,"byte_end":8639088,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639089,"byte_end":8639092,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639093,"byte_end":8639111,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639112,"byte_end":8639133,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639134,"byte_end":8639203,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639204,"byte_end":8639207,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639208,"byte_end":8639238,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639239,"byte_end":8639269,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639270,"byte_end":8639300,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639301,"byte_end":8639304,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639305,"byte_end":8639348,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639349,"byte_end":8639354,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639355,"byte_end":8639362,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639363,"byte_end":8639366,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639367,"byte_end":8639441,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639442,"byte_end":8639445,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`delay_for`] is that an `interval`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639446,"byte_end":8639523,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639524,"byte_end":8639599,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639600,"byte_end":8639676,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639677,"byte_end":8639738,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639739,"byte_end":8639742,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639743,"byte_end":8639821,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639822,"byte_end":8639892,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639893,"byte_end":8639905,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639906,"byte_end":8639909,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639910,"byte_end":8639917,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639918,"byte_end":8639938,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639939,"byte_end":8639942,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639943,"byte_end":8639984,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8639985,"byte_end":8640011,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640012,"byte_end":8640071,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640072,"byte_end":8640077,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640078,"byte_end":8640081,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640082,"byte_end":8640100,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640101,"byte_end":8640122,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640123,"byte_end":8640195,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640196,"byte_end":8640220,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640221,"byte_end":8640255,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640256,"byte_end":8640301,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640302,"byte_end":8640311,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640312,"byte_end":8640317,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640318,"byte_end":8640325,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640326,"byte_end":8640329,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640330,"byte_end":8640373,"line_start":66,"line_end":66,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":6923},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8641275,"byte_end":8641286,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `at`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640539,"byte_end":8640612,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `at`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640613,"byte_end":8640647,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640648,"byte_end":8640651,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640652,"byte_end":8640732,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640733,"byte_end":8640772,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640773,"byte_end":8640776,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640777,"byte_end":8640789,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640790,"byte_end":8640793,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640794,"byte_end":8640839,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640840,"byte_end":8640843,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640844,"byte_end":8640858,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640859,"byte_end":8640862,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640863,"byte_end":8640870,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640871,"byte_end":8640925,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640926,"byte_end":8640929,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640930,"byte_end":8640948,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640949,"byte_end":8640970,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8640971,"byte_end":8641034,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8641035,"byte_end":8641108,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8641109,"byte_end":8641112,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8641113,"byte_end":8641143,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8641144,"byte_end":8641174,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8641175,"byte_end":8641205,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8641206,"byte_end":8641209,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8641210,"byte_end":8641253,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8641254,"byte_end":8641259,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8641260,"byte_end":8641267,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7197},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8641592,"byte_end":8641600,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":7198},{"krate":0,"index":7199}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).\n","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8641484,"byte_end":8641563,"line_start":109,"line_end":109,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":6925},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8641845,"byte_end":8641854,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6926},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642946,"byte_end":8642950,"line_start":158,"line_end":158,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642341,"byte_end":8642410,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642415,"byte_end":8642418,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642423,"byte_end":8642437,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642442,"byte_end":8642445,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642450,"byte_end":8642457,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642462,"byte_end":8642482,"line_start":142,"line_end":142,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642487,"byte_end":8642490,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642495,"byte_end":8642523,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642528,"byte_end":8642531,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642536,"byte_end":8642554,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642559,"byte_end":8642580,"line_start":147,"line_end":147,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642585,"byte_end":8642654,"line_start":148,"line_end":148,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642659,"byte_end":8642662,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642667,"byte_end":8642697,"line_start":150,"line_end":150,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642702,"byte_end":8642732,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642737,"byte_end":8642767,"line_start":152,"line_end":152,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642772,"byte_end":8642775,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642780,"byte_end":8642823,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642828,"byte_end":8642833,"line_start":155,"line_end":155,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642838,"byte_end":8642845,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8642850,"byte_end":8642890,"line_start":157,"line_end":157,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":6950},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644632,"byte_end":8644639,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8643617,"byte_end":8643694,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8643695,"byte_end":8643698,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8643699,"byte_end":8643778,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8643779,"byte_end":8643851,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8643852,"byte_end":8643865,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8643866,"byte_end":8643869,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8643870,"byte_end":8643887,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8643888,"byte_end":8643891,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8643892,"byte_end":8643970,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8643971,"byte_end":8644001,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644002,"byte_end":8644005,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644006,"byte_end":8644086,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644087,"byte_end":8644114,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644115,"byte_end":8644118,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644119,"byte_end":8644133,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644134,"byte_end":8644137,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644138,"byte_end":8644198,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644199,"byte_end":8644202,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644203,"byte_end":8644214,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644215,"byte_end":8644244,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644245,"byte_end":8644274,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644275,"byte_end":8644278,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644279,"byte_end":8644307,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644308,"byte_end":8644311,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644312,"byte_end":8644334,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644335,"byte_end":8644373,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644374,"byte_end":8644401,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644402,"byte_end":8644405,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644406,"byte_end":8644479,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644480,"byte_end":8644546,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644547,"byte_end":8644602,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644603,"byte_end":8644608,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644609,"byte_end":8644616,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644617,"byte_end":8644624,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6952},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645861,"byte_end":8645871,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644830,"byte_end":8644902,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644903,"byte_end":8644906,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644907,"byte_end":8644984,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8644985,"byte_end":8645040,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645041,"byte_end":8645044,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645045,"byte_end":8645062,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645063,"byte_end":8645066,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645067,"byte_end":8645145,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645146,"byte_end":8645176,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645177,"byte_end":8645180,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645181,"byte_end":8645261,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645262,"byte_end":8645289,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645290,"byte_end":8645293,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645294,"byte_end":8645308,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645309,"byte_end":8645312,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645313,"byte_end":8645373,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645374,"byte_end":8645377,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645378,"byte_end":8645389,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645390,"byte_end":8645433,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645434,"byte_end":8645463,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645464,"byte_end":8645467,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645468,"byte_end":8645496,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645497,"byte_end":8645500,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645501,"byte_end":8645523,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645524,"byte_end":8645562,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645563,"byte_end":8645590,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645591,"byte_end":8645594,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645595,"byte_end":8645673,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645674,"byte_end":8645688,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645689,"byte_end":8645775,"line_start":86,"line_end":86,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645776,"byte_end":8645831,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645832,"byte_end":8645837,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645838,"byte_end":8645845,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8645846,"byte_end":8645853,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7606},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8646246,"byte_end":8646253,"line_start":107,"line_end":107,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7608},{"krate":0,"index":7609}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":7558384,"byte_end":7558393,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7202},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8646410,"byte_end":8646417,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8646338,"byte_end":8646370,"line_start":115,"line_end":115,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":6959},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8646768,"byte_end":8646775,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8646695,"byte_end":8646756,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6960},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8646903,"byte_end":8646910,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8646822,"byte_end":8646891,"line_start":137,"line_end":137,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6961},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8647039,"byte_end":8647049,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8646969,"byte_end":8647027,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":7224},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8665182,"byte_end":8665190,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"pub fn throttle<T>(Duration, T) -> Throttle<T> where T: Stream","parent":null,"children":[],"decl_id":null,"docs":" Slows down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slows down a stream by enforcing a delay between items.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8664608,"byte_end":8664667,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8664668,"byte_end":8664737,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8664738,"byte_end":8664741,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8664742,"byte_end":8664755,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8664756,"byte_end":8664759,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8664760,"byte_end":8664790,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8664791,"byte_end":8664809,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8664810,"byte_end":8664838,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8664839,"byte_end":8664872,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8664873,"byte_end":8664903,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8664904,"byte_end":8664907,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8664908,"byte_end":8664930,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8664931,"byte_end":8665022,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8665023,"byte_end":8665026,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8665027,"byte_end":8665037,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8665038,"byte_end":8665100,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8665101,"byte_end":8665152,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8665153,"byte_end":8665158,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8665159,"byte_end":8665166,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8665167,"byte_end":8665174,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7560},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8665685,"byte_end":8665693,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":7562},{"krate":0,"index":7563},{"krate":0,"index":7564},{"krate":0,"index":7565}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.7\\src\\lib.rs","byte_start":7558384,"byte_end":7558393,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7228},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666160,"byte_end":8666167,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666053,"byte_end":8666126,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666131,"byte_end":8666148,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":7229},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666476,"byte_end":8666483,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666215,"byte_end":8666293,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666298,"byte_end":8666318,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666323,"byte_end":8666326,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666331,"byte_end":8666411,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666416,"byte_end":8666464,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":7230},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666778,"byte_end":8666788,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666543,"byte_end":8666605,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666610,"byte_end":8666613,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666618,"byte_end":8666695,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666700,"byte_end":8666766,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":7008},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\stack.rs","byte_start":8663741,"byte_end":8663746,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":7007},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\stack.rs","byte_start":8663691,"byte_end":8663731,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":7009},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\stack.rs","byte_start":8663804,"byte_end":8663812,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":7007},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\stack.rs","byte_start":8663777,"byte_end":8663794,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":7010},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\stack.rs","byte_start":8663901,"byte_end":8663906,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":7007},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\stack.rs","byte_start":8663819,"byte_end":8663891,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181032,"byte_end":181038,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":768},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":180941,"byte_end":180970,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":180975,"byte_end":180978,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":180983,"byte_end":181022,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181068,"byte_end":181074,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":768},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181045,"byte_end":181058,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\scoped_tls.rs","byte_start":29721,"byte_end":29730,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\scoped_tls.rs","byte_start":29746,"byte_end":29755,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\scoped_tls.rs","byte_start":30105,"byte_end":30110,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31866,"byte_end":31875,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32038,"byte_end":32047,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":33234,"byte_end":33243,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":33997,"byte_end":34003,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":34217,"byte_end":34223,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":34365,"byte_end":34371,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34902,"byte_end":34907,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34934,"byte_end":34939,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\try_join.rs","byte_start":36136,"byte_end":36144,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49833,"byte_end":49836,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49996,"byte_end":49999,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":50628,"byte_end":50634,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":56598,"byte_end":56601,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":56744,"byte_end":56747,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":57543,"byte_end":57549,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59975,"byte_end":59978,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":60121,"byte_end":60124,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":60578,"byte_end":60584,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":68489,"byte_end":68492,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":68640,"byte_end":68643,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":69212,"byte_end":69215,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":69723,"byte_end":69729,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":70242,"byte_end":70248,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":70764,"byte_end":70770,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":71281,"byte_end":71287,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\scheduled_io.rs","byte_start":7748191,"byte_end":7748202,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\scheduled_io.rs","byte_start":7748961,"byte_end":7748972,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\scheduled_io.rs","byte_start":7749179,"byte_end":7749190,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\scheduled_io.rs","byte_start":7751812,"byte_end":7751823,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":7737560,"byte_end":7737566,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":7740427,"byte_end":7740433,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":7740801,"byte_end":7740807,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":7740943,"byte_end":7740949,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":7742092,"byte_end":7742098,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":7742176,"byte_end":7742182,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":7742317,"byte_end":7742322,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":7743866,"byte_end":7743875,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7758381,"byte_end":7758392,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7766183,"byte_end":7766194,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7766687,"byte_end":7766698,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7767779,"byte_end":7767790,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7767963,"byte_end":7767974,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770122,"byte_end":7770134,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1141},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7781004,"byte_end":7781016,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7781041,"byte_end":7781053,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7781072,"byte_end":7781084,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7782866,"byte_end":7782874,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7783791,"byte_end":7783800,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7784050,"byte_end":7784058,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7784613,"byte_end":7784622,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7785571,"byte_end":7785576,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7785969,"byte_end":7785974,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7786227,"byte_end":7786232,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7786355,"byte_end":7786363,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7786400,"byte_end":7786409,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7786446,"byte_end":7786454,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7786491,"byte_end":7786500,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7786543,"byte_end":7786551,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7786719,"byte_end":7786728,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\seek.rs","byte_start":7787418,"byte_end":7787422,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_buf_read_ext.rs","byte_start":7799372,"byte_end":7799373,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7838658,"byte_end":7838659,"line_start":1112,"line_end":1112,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7840417,"byte_end":7840418,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7875695,"byte_end":7875696,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7877112,"byte_end":7877121,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7879300,"byte_end":7879309,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7880285,"byte_end":7880294,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1469},{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7881125,"byte_end":7881134,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7881850,"byte_end":7881859,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7883366,"byte_end":7883375,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7885212,"byte_end":7885221,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7885363,"byte_end":7885372,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7886084,"byte_end":7886093,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7886623,"byte_end":7886632,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7887111,"byte_end":7887120,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1522},{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7889074,"byte_end":7889083,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7891361,"byte_end":7891370,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7892260,"byte_end":7892269,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1559}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7892751,"byte_end":7892760,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1562},{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7893047,"byte_end":7893056,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7894225,"byte_end":7894230,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7895370,"byte_end":7895375,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7895654,"byte_end":7895659,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1596},{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7896482,"byte_end":7896487,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1601},{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\copy.rs","byte_start":7899530,"byte_end":7899534,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1616},{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\empty.rs","byte_start":7902644,"byte_end":7902649,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1632},{"krate":0,"index":1633}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\empty.rs","byte_start":7902978,"byte_end":7902983,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\empty.rs","byte_start":7903216,"byte_end":7903221,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\flush.rs","byte_start":7904042,"byte_end":7904047,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1654},{"krate":0,"index":1655}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905227,"byte_end":7905232,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1670},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7906484,"byte_end":7906489,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7907236,"byte_end":7907241,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read.rs","byte_start":7908639,"byte_end":7908643,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1700},{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_buf.rs","byte_start":7909704,"byte_end":7909711,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1718},{"krate":0,"index":1719}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_exact.rs","byte_start":7911076,"byte_end":7911085,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_line.rs","byte_start":7918620,"byte_end":7918628,"line_start":85,"line_end":85,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1769},{"krate":0,"index":1770}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_end.rs","byte_start":7919854,"byte_end":7919859,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_end.rs","byte_start":7921535,"byte_end":7921544,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1793},{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_string.rs","byte_start":7923608,"byte_end":7923620,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1813},{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_until.rs","byte_start":7926272,"byte_end":7926281,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1831},{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\repeat.rs","byte_start":7928115,"byte_end":7928121,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1841},{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\shutdown.rs","byte_start":7929243,"byte_end":7929251,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1858},{"krate":0,"index":1859}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\sink.rs","byte_start":7931084,"byte_end":7931088,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\sink.rs","byte_start":7931598,"byte_end":7931602,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7932567,"byte_end":7932572,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7933311,"byte_end":7933316,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7934095,"byte_end":7934100,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1901},{"krate":0,"index":1902}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947639,"byte_end":7947651,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2390},{"krate":0,"index":2391}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7948156,"byte_end":7948168,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2398}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7949707,"byte_end":7949719,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2402},{"krate":0,"index":2403}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7935268,"byte_end":7935272,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936900,"byte_end":7936904,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1929},{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7937561,"byte_end":7937565,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1933},{"krate":0,"index":1934}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write.rs","byte_start":7939122,"byte_end":7939127,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1949},{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_all.rs","byte_start":7939920,"byte_end":7939928,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1965},{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_buf.rs","byte_start":7941436,"byte_end":7941444,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1983},{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":74388,"byte_end":74398,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":74438,"byte_end":74448,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":74729,"byte_end":74741,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":74781,"byte_end":74793,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":75053,"byte_end":75065,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":75105,"byte_end":75117,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7953640,"byte_end":7953651,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2599},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2616}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7964355,"byte_end":7964366,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2618},{"krate":0,"index":2619}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7964681,"byte_end":7964692,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2621},{"krate":0,"index":2622}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7965132,"byte_end":7965143,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2624},{"krate":0,"index":2625}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7965469,"byte_end":7965480,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2627}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":7966539,"byte_end":7966547,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2640},{"krate":0,"index":2641}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":7967185,"byte_end":7967193,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2643},{"krate":0,"index":2644}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969343,"byte_end":7969351,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2662},{"krate":0,"index":2663}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971806,"byte_end":7971814,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2668},{"krate":0,"index":2669}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7972134,"byte_end":7972143,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2674},{"krate":0,"index":2675}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7972956,"byte_end":7972964,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2677}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7973058,"byte_end":7973067,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2679}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976130,"byte_end":7976142,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2704}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976345,"byte_end":7976357,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976367,"byte_end":7976380,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7979214,"byte_end":7979227,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2714},{"krate":0,"index":2715}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7979532,"byte_end":7979546,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2717},{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7980098,"byte_end":7980112,"line_start":220,"line_end":220,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7980272,"byte_end":7980286,"line_start":228,"line_end":228,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2725},{"krate":0,"index":2726}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7981107,"byte_end":7981120,"line_start":257,"line_end":257,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2728}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7981216,"byte_end":7981230,"line_start":263,"line_end":263,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2730}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7983365,"byte_end":7983374,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2769},{"krate":0,"index":2774},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2786},{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2795},{"krate":0,"index":2796},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2809}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8008180,"byte_end":8008189,"line_start":834,"line_end":834,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2817},{"krate":0,"index":2818}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8008625,"byte_end":8008634,"line_start":848,"line_end":848,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2820},{"krate":0,"index":2821}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8008987,"byte_end":8008996,"line_start":862,"line_end":862,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8009310,"byte_end":8009319,"line_start":876,"line_end":876,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2830}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8010063,"byte_end":8010072,"line_start":905,"line_end":905,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2832}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8011301,"byte_end":8011310,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2897},{"krate":0,"index":2902},{"krate":0,"index":2903},{"krate":0,"index":2904},{"krate":0,"index":2905},{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":2912},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2932},{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8024866,"byte_end":8024875,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2948},{"krate":0,"index":2949}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8025311,"byte_end":8025320,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2951},{"krate":0,"index":2952}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8025640,"byte_end":8025649,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2954}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027958,"byte_end":8027970,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2967}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8028173,"byte_end":8028185,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8028712,"byte_end":8028720,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2976}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030352,"byte_end":8030360,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2986}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8031680,"byte_end":8031688,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2991}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8031779,"byte_end":8031787,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2993}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_ptr.rs","byte_start":84289,"byte_end":84298,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_ptr.rs","byte_start":84472,"byte_end":84481,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_ptr.rs","byte_start":84630,"byte_end":84639,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":84983,"byte_end":84992,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":85017,"byte_end":85026,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":85036,"byte_end":85045,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":85531,"byte_end":85540,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":85825,"byte_end":85834,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86175,"byte_end":86184,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86209,"byte_end":86218,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86228,"byte_end":86237,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86416,"byte_end":86425,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86710,"byte_end":86719,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":88834,"byte_end":88842,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":88867,"byte_end":88875,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":88885,"byte_end":88893,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":89068,"byte_end":89076,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":89360,"byte_end":89368,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":89708,"byte_end":89719,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":89744,"byte_end":89755,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":89765,"byte_end":89776,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":90459,"byte_end":90470,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":90760,"byte_end":90771,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":90935,"byte_end":90946,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\unsafe_cell.rs","byte_start":91134,"byte_end":91144,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\either.rs","byte_start":8032000,"byte_end":8032006,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3046}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\either.rs","byte_start":8032812,"byte_end":8032818,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3050}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\either.rs","byte_start":8033032,"byte_end":8033038,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3054}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":96248,"byte_end":96258,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":96523,"byte_end":96533,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":96992,"byte_end":96997,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":101722,"byte_end":101732,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":101841,"byte_end":101853,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":102240,"byte_end":102256,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3087}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":103103,"byte_end":103119,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3098}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":103660,"byte_end":103672,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3101}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":103884,"byte_end":103889,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3103},{"krate":0,"index":3104}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":95350,"byte_end":95353,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":95442,"byte_end":95445,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\context.rs","byte_start":126539,"byte_end":126548,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":8035164,"byte_end":8035178,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":3179}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":8038717,"byte_end":8038722,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3197}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":8039409,"byte_end":8039423,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":8040310,"byte_end":8040324,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3205}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":8040490,"byte_end":8040497,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3207},{"krate":0,"index":3209}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":8040955,"byte_end":8040962,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3211}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":8041130,"byte_end":8041133,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3213},{"krate":0,"index":3215},{"krate":0,"index":3218}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":8042231,"byte_end":8042237,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3221},{"krate":0,"index":3222}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":8049920,"byte_end":8049926,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":8049951,"byte_end":8049957,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":8050316,"byte_end":8050320,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3278}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":8051098,"byte_end":8051102,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3282},{"krate":0,"index":3284},{"krate":0,"index":3286},{"krate":0,"index":3288},{"krate":0,"index":3290},{"krate":0,"index":3292},{"krate":0,"index":3295},{"krate":0,"index":3297},{"krate":0,"index":3299}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8057484,"byte_end":8057493,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3321},{"krate":0,"index":3322},{"krate":0,"index":3323}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8060572,"byte_end":8060581,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3325}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8060824,"byte_end":8060833,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8061110,"byte_end":8061119,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8061153,"byte_end":8061158,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\harness.rs","byte_start":8061836,"byte_end":8061843,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3361}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\harness.rs","byte_start":8062320,"byte_end":8062327,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3365},{"krate":0,"index":3376},{"krate":0,"index":3380},{"krate":0,"index":3383},{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3397}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\harness.rs","byte_start":8064498,"byte_end":8064503,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3375}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":8076807,"byte_end":8076817,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":8076854,"byte_end":8076864,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":8076880,"byte_end":8076890,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3414}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":8077066,"byte_end":8077076,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":8077103,"byte_end":8077113,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3419},{"krate":0,"index":3420}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":8078339,"byte_end":8078349,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3423}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":8078615,"byte_end":8078625,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3426}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\raw.rs","byte_start":8079872,"byte_end":8079879,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3452},{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3461}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\raw.rs","byte_start":8081410,"byte_end":8081417,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3463}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\raw.rs","byte_start":8081507,"byte_end":8081514,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\state.rs","byte_start":8084196,"byte_end":8084201,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3509},{"krate":0,"index":3511},{"krate":0,"index":3513},{"krate":0,"index":3515},{"krate":0,"index":3516},{"krate":0,"index":3518},{"krate":0,"index":3522},{"krate":0,"index":3524},{"krate":0,"index":3526},{"krate":0,"index":3528},{"krate":0,"index":3531},{"krate":0,"index":3532}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\state.rs","byte_start":8093057,"byte_end":8093065,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3535},{"krate":0,"index":3536},{"krate":0,"index":3537},{"krate":0,"index":3538},{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3547},{"krate":0,"index":3548},{"krate":0,"index":3549},{"krate":0,"index":3550},{"krate":0,"index":3551},{"krate":0,"index":3552},{"krate":0,"index":3553}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\state.rs","byte_start":8094942,"byte_end":8094947,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3555}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\state.rs","byte_start":8095106,"byte_end":8095114,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3557}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\waker.rs","byte_start":8096932,"byte_end":8096940,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3583},{"krate":0,"index":3584}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8043250,"byte_end":8043254,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8043285,"byte_end":8043289,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8043426,"byte_end":8043434,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8043475,"byte_end":8043483,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8045407,"byte_end":8045411,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3635},{"krate":0,"index":3636}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8046303,"byte_end":8046307,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3639}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8046476,"byte_end":8046484,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3642},{"krate":0,"index":3643}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8046770,"byte_end":8046774,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3646}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8047014,"byte_end":8047018,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3649}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8047170,"byte_end":8047178,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3652}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8047394,"byte_end":8047398,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3657},{"krate":0,"index":3658},{"krate":0,"index":3659}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\mod.rs","byte_start":127778,"byte_end":127790,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3690},{"krate":0,"index":3691}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":129965,"byte_end":129972,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":137892,"byte_end":137899,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3708}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":138448,"byte_end":138455,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3710}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":138975,"byte_end":138982,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3712},{"krate":0,"index":3713}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":142878,"byte_end":142885,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":142964,"byte_end":142971,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":143766,"byte_end":143778,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":146656,"byte_end":146677,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3737}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":147507,"byte_end":147512,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3740}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":149620,"byte_end":149625,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":149755,"byte_end":149760,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150818,"byte_end":150824,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153920,"byte_end":153926,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3761},{"krate":0,"index":3763}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":163286,"byte_end":163301,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":163449,"byte_end":163464,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":163622,"byte_end":163637,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\shell.rs","byte_start":165926,"byte_end":165931,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\shell.rs","byte_start":166537,"byte_end":166543,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\spawner.rs","byte_start":167159,"byte_end":167166,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3790}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115508,"byte_end":115515,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":171769,"byte_end":171775,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":173316,"byte_end":173326,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":174173,"byte_end":174189,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3827}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":174321,"byte_end":174337,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3829}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":176077,"byte_end":176083,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3834},{"krate":0,"index":3835}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":8102538,"byte_end":8102541,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3864},{"krate":0,"index":3865}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":8103263,"byte_end":8103271,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3872}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":8103361,"byte_end":8103369,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3875},{"krate":0,"index":3877},{"krate":0,"index":3878}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":8105522,"byte_end":8105529,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3885},{"krate":0,"index":3886}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":8105637,"byte_end":8105644,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3890}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8128415,"byte_end":8128424,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3916}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8128590,"byte_end":8128599,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3918},{"krate":0,"index":3919}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8129072,"byte_end":8129083,"line_start":57,"line_end":57,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3923}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8130036,"byte_end":8130041,"line_start":86,"line_end":86,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3926},{"krate":0,"index":3927}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8131960,"byte_end":8131969,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3938},{"krate":0,"index":3943}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133773,"byte_end":8133782,"line_start":212,"line_end":212,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3976},{"krate":0,"index":3977}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":8162046,"byte_end":8162055,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3990}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":8162201,"byte_end":8162210,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":8162249,"byte_end":8162258,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3997},{"krate":0,"index":3998}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":8163209,"byte_end":8163218,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4011}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":8163364,"byte_end":8163373,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":8163412,"byte_end":8163421,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4018},{"krate":0,"index":4019}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\chain.rs","byte_start":8164344,"byte_end":8164349,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4033}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\chain.rs","byte_start":8164529,"byte_end":8164534,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4037},{"krate":0,"index":4038},{"krate":0,"index":4040}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8166112,"byte_end":8166119,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4061}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8166403,"byte_end":8166410,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4065},{"krate":0,"index":4066}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8167386,"byte_end":8167392,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8167447,"byte_end":8167453,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4078},{"krate":0,"index":4079},{"krate":0,"index":4080},{"krate":0,"index":4081}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8167842,"byte_end":8167845,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8167891,"byte_end":8167894,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4086},{"krate":0,"index":4087},{"krate":0,"index":4088},{"krate":0,"index":4089}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8168277,"byte_end":8168280,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8168328,"byte_end":8168331,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4094},{"krate":0,"index":4095},{"krate":0,"index":4096},{"krate":0,"index":4097}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8168846,"byte_end":8168852,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8168941,"byte_end":8168947,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4106},{"krate":0,"index":4107},{"krate":0,"index":4108},{"krate":0,"index":4109}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8170025,"byte_end":8170030,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8170078,"byte_end":8170083,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4114},{"krate":0,"index":4115},{"krate":0,"index":4116},{"krate":0,"index":4117}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8170483,"byte_end":8170491,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8170539,"byte_end":8170547,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4122},{"krate":0,"index":4123},{"krate":0,"index":4124},{"krate":0,"index":4125}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8171818,"byte_end":8171823,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8171854,"byte_end":8171859,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8171890,"byte_end":8171895,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172438,"byte_end":8172443,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4152},{"krate":0,"index":4153},{"krate":0,"index":4154}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter.rs","byte_start":8173057,"byte_end":8173063,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4169}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter.rs","byte_start":8173281,"byte_end":8173287,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4173}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter.rs","byte_start":8173406,"byte_end":8173412,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4177},{"krate":0,"index":4178},{"krate":0,"index":4179}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter_map.rs","byte_start":8174498,"byte_end":8174507,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4192}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter_map.rs","byte_start":8174728,"byte_end":8174737,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4196}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter_map.rs","byte_start":8174859,"byte_end":8174868,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4201},{"krate":0,"index":4202},{"krate":0,"index":4203}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fold.rs","byte_start":8175940,"byte_end":8175950,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4217}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fold.rs","byte_start":8176146,"byte_end":8176156,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4222},{"krate":0,"index":4223}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fuse.rs","byte_start":8177055,"byte_end":8177059,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4234}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fuse.rs","byte_start":8177219,"byte_end":8177223,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4237},{"krate":0,"index":4238},{"krate":0,"index":4239}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178166,"byte_end":8178170,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178832,"byte_end":8178836,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4253},{"krate":0,"index":4254},{"krate":0,"index":4255}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\map.rs","byte_start":8179582,"byte_end":8179585,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4270}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\map.rs","byte_start":8179774,"byte_end":8179777,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4274}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\map.rs","byte_start":8179898,"byte_end":8179901,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4279},{"krate":0,"index":4280},{"krate":0,"index":4283}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\merge.rs","byte_start":8180746,"byte_end":8180751,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4297}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\merge.rs","byte_start":8181005,"byte_end":8181010,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4301},{"krate":0,"index":4302},{"krate":0,"index":4303}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":8182522,"byte_end":8182526,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":8182560,"byte_end":8182564,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4321}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":8182705,"byte_end":8182709,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4324},{"krate":0,"index":4325}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183205,"byte_end":8183209,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183836,"byte_end":8183840,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4343},{"krate":0,"index":4344},{"krate":0,"index":4345}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184387,"byte_end":8184394,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184425,"byte_end":8184432,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184463,"byte_end":8184470,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8185163,"byte_end":8185170,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4366},{"krate":0,"index":4367},{"krate":0,"index":4368}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190835,"byte_end":8190844,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4383},{"krate":0,"index":4384},{"krate":0,"index":4385},{"krate":0,"index":4388},{"krate":0,"index":4391},{"krate":0,"index":4394},{"krate":0,"index":4395},{"krate":0,"index":4396},{"krate":0,"index":4397},{"krate":0,"index":4398},{"krate":0,"index":4399},{"krate":0,"index":4401}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197845,"byte_end":8197854,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4406}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8199393,"byte_end":8199402,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4411},{"krate":0,"index":4412},{"krate":0,"index":4413}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip.rs","byte_start":8200618,"byte_end":8200622,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4425}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip.rs","byte_start":8200832,"byte_end":8200836,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4428}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip.rs","byte_start":8200969,"byte_end":8200973,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4431},{"krate":0,"index":4432},{"krate":0,"index":4433}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip_while.rs","byte_start":8202199,"byte_end":8202208,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4447}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip_while.rs","byte_start":8202429,"byte_end":8202438,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4451}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip_while.rs","byte_start":8202623,"byte_end":8202632,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4457}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":8203981,"byte_end":8203988,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":8204022,"byte_end":8204029,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4473}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":8204236,"byte_end":8204243,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":4478},{"krate":0,"index":4479}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take.rs","byte_start":8204853,"byte_end":8204857,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4492}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take.rs","byte_start":8205067,"byte_end":8205071,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4495}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take.rs","byte_start":8205204,"byte_end":8205208,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4498},{"krate":0,"index":4499},{"krate":0,"index":4501}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take_while.rs","byte_start":8206727,"byte_end":8206736,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4514}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take_while.rs","byte_start":8206996,"byte_end":8207005,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4518}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take_while.rs","byte_start":8207198,"byte_end":8207207,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4522},{"krate":0,"index":4523},{"krate":0,"index":4526}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\timeout.rs","byte_start":8238432,"byte_end":8238439,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4659}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\timeout.rs","byte_start":8238794,"byte_end":8238801,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4662},{"krate":0,"index":4663},{"krate":0,"index":4664}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8161276,"byte_end":8161278,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8257269,"byte_end":8257276,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4672},{"krate":0,"index":4673}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8260556,"byte_end":8260573,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4677}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8271140,"byte_end":8271146,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4749}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8271273,"byte_end":8271279,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4753}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8271440,"byte_end":8271444,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8271514,"byte_end":8271518,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274292,"byte_end":8274298,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274335,"byte_end":8274341,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274379,"byte_end":8274387,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274424,"byte_end":8274432,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274448,"byte_end":8274454,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4773},{"krate":0,"index":4775},{"krate":0,"index":4776},{"krate":0,"index":4777}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8280090,"byte_end":8280094,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4781}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8280486,"byte_end":8280492,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4784}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8280672,"byte_end":8280678,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4787}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8280832,"byte_end":8280840,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4790}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8285705,"byte_end":8285713,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4794},{"krate":0,"index":4795},{"krate":0,"index":4809}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8288466,"byte_end":8288471,"line_start":856,"line_end":856,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4807}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291885,"byte_end":8291893,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4814},{"krate":0,"index":4815}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8292343,"byte_end":8292351,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4819}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8293535,"byte_end":8293539,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4825},{"krate":0,"index":4826}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8294381,"byte_end":8294385,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4830},{"krate":0,"index":4831}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8295115,"byte_end":8295123,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6054}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8296435,"byte_end":8296439,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6059},{"krate":0,"index":6060}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8297163,"byte_end":8297167,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4835}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8297965,"byte_end":8297971,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4839},{"krate":0,"index":4840},{"krate":0,"index":4841},{"krate":0,"index":4842},{"krate":0,"index":4843}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8298386,"byte_end":8298392,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4846}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8298536,"byte_end":8298544,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4849}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8298679,"byte_end":8298688,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4853}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8298861,"byte_end":8298870,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4858}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8299161,"byte_end":8299170,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4861}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8299443,"byte_end":8299452,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8299479,"byte_end":8299491,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4864}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8299833,"byte_end":8299845,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\block.rs","byte_start":8306154,"byte_end":8306159,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4915},{"krate":0,"index":4916},{"krate":0,"index":4917},{"krate":0,"index":4918},{"krate":0,"index":4920},{"krate":0,"index":4922},{"krate":0,"index":4923},{"krate":0,"index":4924},{"krate":0,"index":4926},{"krate":0,"index":4927},{"krate":0,"index":4928},{"krate":0,"index":4930},{"krate":0,"index":4931},{"krate":0,"index":4932}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\block.rs","byte_start":8316141,"byte_end":8316147,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4937}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\block.rs","byte_start":8316629,"byte_end":8316635,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4940},{"krate":0,"index":4941}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8317273,"byte_end":8317279,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4959}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8317411,"byte_end":8317417,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4962}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8317824,"byte_end":8317832,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4968}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319604,"byte_end":8319612,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4974},{"krate":0,"index":4975},{"krate":0,"index":4980},{"krate":0,"index":4981},{"krate":0,"index":4982}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322040,"byte_end":8322048,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322108,"byte_end":8322116,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6067},{"krate":0,"index":6068}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322304,"byte_end":8322310,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4987},{"krate":0,"index":4988},{"krate":0,"index":4993},{"krate":0,"index":4994},{"krate":0,"index":4999},{"krate":0,"index":5001}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8333700,"byte_end":8333702,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5036}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8334103,"byte_end":8334105,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5044}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8334412,"byte_end":8334421,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5047}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8334683,"byte_end":8334695,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5050}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8336390,"byte_end":8336394,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5072}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8337027,"byte_end":8337035,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5079}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8337301,"byte_end":8337305,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8337354,"byte_end":8337358,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8337837,"byte_end":8337839,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5092},{"krate":0,"index":5093},{"krate":0,"index":5094},{"krate":0,"index":5095}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8338537,"byte_end":8338539,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5098}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8338687,"byte_end":8338689,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5101}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8338867,"byte_end":8338869,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5105}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8339269,"byte_end":8339271,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5109}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8339680,"byte_end":8339682,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5113},{"krate":0,"index":5114},{"krate":0,"index":5116},{"krate":0,"index":5120}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8342802,"byte_end":8342804,"line_start":344,"line_end":344,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5126}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8343240,"byte_end":8343244,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5132}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8343708,"byte_end":8343712,"line_start":387,"line_end":387,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5136}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8344261,"byte_end":8344273,"line_start":404,"line_end":404,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5141}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8345873,"byte_end":8345884,"line_start":475,"line_end":475,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5160},{"krate":0,"index":5161},{"krate":0,"index":5162},{"krate":0,"index":5163},{"krate":0,"index":5164},{"krate":0,"index":5165},{"krate":0,"index":5167},{"krate":0,"index":5168},{"krate":0,"index":5169}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\list.rs","byte_start":8348601,"byte_end":8348603,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5199},{"krate":0,"index":5200},{"krate":0,"index":5201},{"krate":0,"index":5203}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\list.rs","byte_start":8354307,"byte_end":8354309,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5206}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\list.rs","byte_start":8354586,"byte_end":8354588,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5209},{"krate":0,"index":5210},{"krate":0,"index":5211},{"krate":0,"index":5212}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\list.rs","byte_start":8357987,"byte_end":8357989,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5215}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8358663,"byte_end":8358678,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5231}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8358819,"byte_end":8358834,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5234}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359292,"byte_end":8359309,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5240}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360287,"byte_end":8360304,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5246},{"krate":0,"index":5247},{"krate":0,"index":5248},{"krate":0,"index":5253},{"krate":0,"index":5254}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362776,"byte_end":8362793,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5257},{"krate":0,"index":5258}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362959,"byte_end":8362974,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5261},{"krate":0,"index":5262}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364084,"byte_end":8364093,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5272}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364253,"byte_end":8364262,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364748,"byte_end":8364760,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364793,"byte_end":8364805,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5279}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365145,"byte_end":8365157,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5282}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365386,"byte_end":8365395,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5284}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365525,"byte_end":8365534,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8366020,"byte_end":8366032,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5287}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8366338,"byte_end":8366350,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8366507,"byte_end":8366518,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5290}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8366617,"byte_end":8366628,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5292}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8366758,"byte_end":8366769,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8367273,"byte_end":8367289,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8367326,"byte_end":8367342,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6124}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373658,"byte_end":8373663,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373717,"byte_end":8373722,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373776,"byte_end":8373786,"line_start":160,"line_end":160,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373851,"byte_end":8373866,"line_start":161,"line_end":161,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8374153,"byte_end":8374165,"line_start":171,"line_end":171,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5320}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8374302,"byte_end":8374314,"line_start":177,"line_end":177,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375122,"byte_end":8375127,"line_start":203,"line_end":203,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5324},{"krate":0,"index":5325},{"krate":0,"index":5328},{"krate":0,"index":5331},{"krate":0,"index":5335},{"krate":0,"index":5336},{"krate":0,"index":5337}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379700,"byte_end":8379705,"line_start":361,"line_end":361,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5340}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379789,"byte_end":8379794,"line_start":367,"line_end":367,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5343}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379943,"byte_end":8379953,"line_start":378,"line_end":378,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5346}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8380054,"byte_end":8380064,"line_start":384,"line_end":384,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5349},{"krate":0,"index":5350}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8380211,"byte_end":8380221,"line_start":391,"line_end":391,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5353}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8380378,"byte_end":8380388,"line_start":397,"line_end":397,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5356}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8380554,"byte_end":8380564,"line_start":403,"line_end":403,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5359}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8380742,"byte_end":8380757,"line_start":411,"line_end":411,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5362}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8380854,"byte_end":8380869,"line_start":417,"line_end":417,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5365},{"krate":0,"index":5366}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8381012,"byte_end":8381027,"line_start":424,"line_end":424,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5369}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8381180,"byte_end":8381195,"line_start":430,"line_end":430,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5372}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8381357,"byte_end":8381372,"line_start":436,"line_end":436,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5375}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8385336,"byte_end":8385344,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8385377,"byte_end":8385385,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8385648,"byte_end":8385654,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5405},{"krate":0,"index":5406},{"krate":0,"index":5409}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8389662,"byte_end":8389668,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5411}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8391406,"byte_end":8391414,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5414}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8391924,"byte_end":8391932,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5416},{"krate":0,"index":5417}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8396762,"byte_end":8396770,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5420}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8399728,"byte_end":8399734,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5423},{"krate":0,"index":5424},{"krate":0,"index":5425},{"krate":0,"index":5426},{"krate":0,"index":5427}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8401610,"byte_end":8401619,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5453}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8401781,"byte_end":8401790,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8401859,"byte_end":8401871,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5456}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8402170,"byte_end":8402182,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403993,"byte_end":8403999,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5469},{"krate":0,"index":5472},{"krate":0,"index":5474},{"krate":0,"index":5479}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410300,"byte_end":8410306,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5482}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410445,"byte_end":8410453,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5485},{"krate":0,"index":5486}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8414844,"byte_end":8414852,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5489}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8414999,"byte_end":8415007,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5492},{"krate":0,"index":5493}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8415470,"byte_end":8415475,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5496},{"krate":0,"index":5497},{"krate":0,"index":5499},{"krate":0,"index":5500},{"krate":0,"index":5502},{"krate":0,"index":5506},{"krate":0,"index":5510},{"krate":0,"index":5512},{"krate":0,"index":5514},{"krate":0,"index":5516}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8419847,"byte_end":8419852,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8419889,"byte_end":8419894,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8419919,"byte_end":8419924,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5524}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8420293,"byte_end":8420298,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5528}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8420693,"byte_end":8420698,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5535},{"krate":0,"index":5536},{"krate":0,"index":5537},{"krate":0,"index":5538},{"krate":0,"index":5539},{"krate":0,"index":5540},{"krate":0,"index":5541},{"krate":0,"index":5542},{"krate":0,"index":5543},{"krate":0,"index":5544},{"krate":0,"index":5545},{"krate":0,"index":5546},{"krate":0,"index":5547}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8422411,"byte_end":8422416,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5549}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8425894,"byte_end":8425903,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5590},{"krate":0,"index":5591},{"krate":0,"index":5592},{"krate":0,"index":5593},{"krate":0,"index":5594},{"krate":0,"index":5595},{"krate":0,"index":5596},{"krate":0,"index":5598},{"krate":0,"index":5599},{"krate":0,"index":5600},{"krate":0,"index":5604}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8435824,"byte_end":8435833,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5608}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8436034,"byte_end":8436040,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5610},{"krate":0,"index":5611}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8436906,"byte_end":8436913,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5613},{"krate":0,"index":5614}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8437591,"byte_end":8437598,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5617},{"krate":0,"index":5618}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8438397,"byte_end":8438404,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5622}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8440046,"byte_end":8440053,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8440100,"byte_end":8440112,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5625}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8440205,"byte_end":8440217,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5627}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8440361,"byte_end":8440373,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8440420,"byte_end":8440435,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5630},{"krate":0,"index":5631}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8441057,"byte_end":8441072,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5633}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8441358,"byte_end":8441373,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8441466,"byte_end":8441472,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5636},{"krate":0,"index":5637},{"krate":0,"index":5638},{"krate":0,"index":5639},{"krate":0,"index":5640}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8446741,"byte_end":8446750,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5682},{"krate":0,"index":5683},{"krate":0,"index":5684},{"krate":0,"index":5687},{"krate":0,"index":5689},{"krate":0,"index":5693},{"krate":0,"index":5694},{"krate":0,"index":5695},{"krate":0,"index":5696},{"krate":0,"index":5701},{"krate":0,"index":5702},{"krate":0,"index":5703},{"krate":0,"index":5704}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8462944,"byte_end":8462953,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5706}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8463032,"byte_end":8463041,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5708}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8463419,"byte_end":8463428,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8463453,"byte_end":8463462,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8463500,"byte_end":8463506,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5713},{"krate":0,"index":5715},{"krate":0,"index":5716},{"krate":0,"index":5720},{"krate":0,"index":5722},{"krate":0,"index":5723}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8469912,"byte_end":8469918,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5726}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8469991,"byte_end":8469997,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5728}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8470419,"byte_end":8470431,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5730}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8470611,"byte_end":8470623,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5733}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8470767,"byte_end":8470779,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8470826,"byte_end":8470841,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5736},{"krate":0,"index":5737}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8471371,"byte_end":8471386,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5739}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8471672,"byte_end":8471687,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8471725,"byte_end":8471731,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5742},{"krate":0,"index":5743},{"krate":0,"index":5744},{"krate":0,"index":5745},{"krate":0,"index":5746},{"krate":0,"index":5747},{"krate":0,"index":5748},{"krate":0,"index":5749},{"krate":0,"index":5750}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8477144,"byte_end":8477152,"line_start":1034,"line_end":1034,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5752},{"krate":0,"index":5753},{"krate":0,"index":5754},{"krate":0,"index":5755},{"krate":0,"index":5756},{"krate":0,"index":5757},{"krate":0,"index":5758},{"krate":0,"index":5759},{"krate":0,"index":5760},{"krate":0,"index":5761},{"krate":0,"index":5762},{"krate":0,"index":5763},{"krate":0,"index":5764},{"krate":0,"index":5765},{"krate":0,"index":5766},{"krate":0,"index":5767}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8480815,"byte_end":8480823,"line_start":1172,"line_end":1172,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5769}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8481176,"byte_end":8481187,"line_start":1188,"line_end":1188,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5771},{"krate":0,"index":5772},{"krate":0,"index":5773},{"krate":0,"index":5774},{"krate":0,"index":5775},{"krate":0,"index":5776},{"krate":0,"index":5777},{"krate":0,"index":5778}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8483916,"byte_end":8483925,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5783},{"krate":0,"index":5784},{"krate":0,"index":5785},{"krate":0,"index":5786},{"krate":0,"index":5789},{"krate":0,"index":5790},{"krate":0,"index":5793}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8486020,"byte_end":8486035,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5796}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8486280,"byte_end":8486300,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5798}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8486554,"byte_end":8486569,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5801}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8486677,"byte_end":8486697,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5803}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8490518,"byte_end":8490533,"line_start":113,"line_end":113,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5818}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8490800,"byte_end":8490815,"line_start":123,"line_end":123,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5823}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8491819,"byte_end":8491825,"line_start":156,"line_end":156,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8491879,"byte_end":8491885,"line_start":157,"line_end":157,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8491946,"byte_end":8491961,"line_start":158,"line_end":158,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492026,"byte_end":8492042,"line_start":159,"line_end":159,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492100,"byte_end":8492106,"line_start":161,"line_end":161,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5834},{"krate":0,"index":5835},{"krate":0,"index":5839},{"krate":0,"index":5843}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8495223,"byte_end":8495238,"line_start":264,"line_end":264,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5846},{"krate":0,"index":5847}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8495377,"byte_end":8495393,"line_start":272,"line_end":272,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5850},{"krate":0,"index":5851}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8495535,"byte_end":8495551,"line_start":280,"line_end":280,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5854}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8495673,"byte_end":8495679,"line_start":286,"line_end":286,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5857}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8495763,"byte_end":8495769,"line_start":292,"line_end":292,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5860}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":8502044,"byte_end":8502055,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5884},{"krate":0,"index":5885},{"krate":0,"index":5886},{"krate":0,"index":5887},{"krate":0,"index":5891},{"krate":0,"index":5892}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":8507982,"byte_end":8507993,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5895}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":8508079,"byte_end":8508090,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5897}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":8508223,"byte_end":8508234,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":8508259,"byte_end":8508270,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":8508366,"byte_end":8508371,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5904},{"krate":0,"index":5905}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8511912,"byte_end":8511921,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5936}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8512101,"byte_end":8512110,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514269,"byte_end":8514277,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5947},{"krate":0,"index":5948}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8515549,"byte_end":8515557,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5952}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516923,"byte_end":8516931,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5959},{"krate":0,"index":5960}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8517190,"byte_end":8517198,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5964}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8517501,"byte_end":8517509,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5967}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8517623,"byte_end":8517629,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5970},{"krate":0,"index":5971},{"krate":0,"index":5975}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8519164,"byte_end":8519170,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5980}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8519409,"byte_end":8519412,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5983},{"krate":0,"index":5984}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8519553,"byte_end":8519559,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5987}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8519661,"byte_end":8519668,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5989}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8519891,"byte_end":8519898,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5991}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8520015,"byte_end":8520022,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8520052,"byte_end":8520059,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5994}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8520206,"byte_end":8520213,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5997},{"krate":0,"index":5998}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\yield_now.rs","byte_start":8533418,"byte_end":8533426,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6409},{"krate":0,"index":6410}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8540558,"byte_end":8540566,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6444},{"krate":0,"index":6445},{"krate":0,"index":6447},{"krate":0,"index":6449},{"krate":0,"index":6453},{"krate":0,"index":6455},{"krate":0,"index":6458}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8548408,"byte_end":8548416,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6462}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8548555,"byte_end":8548563,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6464},{"krate":0,"index":6465}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8549528,"byte_end":8549536,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6468}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8549617,"byte_end":8549625,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6470}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8550492,"byte_end":8550500,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6474},{"krate":0,"index":6475}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8551385,"byte_end":8551391,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6479},{"krate":0,"index":6481}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8551954,"byte_end":8551957,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6483},{"krate":0,"index":6485},{"krate":0,"index":6488}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555372,"byte_end":8555380,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6511},{"krate":0,"index":6515},{"krate":0,"index":6518}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8557156,"byte_end":8557164,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6524}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8557372,"byte_end":8557380,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6528}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8557701,"byte_end":8557716,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6532},{"krate":0,"index":6533}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8558017,"byte_end":8558022,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6542}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8558640,"byte_end":8558641,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8558826,"byte_end":8558837,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6549}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8558981,"byte_end":8558992,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6551}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8559139,"byte_end":8559150,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\clock.rs","byte_start":8563735,"byte_end":8563740,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7054},{"krate":0,"index":7055},{"krate":0,"index":7056},{"krate":0,"index":7057}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574262,"byte_end":8574272,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6602},{"krate":0,"index":6603},{"krate":0,"index":6604},{"krate":0,"index":6605},{"krate":0,"index":6608},{"krate":0,"index":6609},{"krate":0,"index":6613},{"krate":0,"index":6615},{"krate":0,"index":6616},{"krate":0,"index":6618},{"krate":0,"index":6619},{"krate":0,"index":6620},{"krate":0,"index":6621},{"krate":0,"index":6622},{"krate":0,"index":6623},{"krate":0,"index":6624},{"krate":0,"index":6626}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8591915,"byte_end":8591925,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8591953,"byte_end":8591963,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6631}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8592100,"byte_end":8592110,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6634},{"krate":0,"index":6635}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8592492,"byte_end":8592497,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6638},{"krate":0,"index":6639},{"krate":0,"index":6640},{"krate":0,"index":6641},{"krate":0,"index":6642},{"krate":0,"index":6643},{"krate":0,"index":6644},{"krate":0,"index":6645}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8594624,"byte_end":8594629,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6648}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8594759,"byte_end":8594762,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":6650}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8594849,"byte_end":8594856,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6653},{"krate":0,"index":6654},{"krate":0,"index":6655},{"krate":0,"index":6656}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8597394,"byte_end":8597399,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6671},{"krate":0,"index":6672},{"krate":0,"index":6673},{"krate":0,"index":6674}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8598377,"byte_end":8598382,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6676},{"krate":0,"index":6677}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\atomic_stack.rs","byte_start":8611706,"byte_end":8611717,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6692},{"krate":0,"index":6693},{"krate":0,"index":6694},{"krate":0,"index":6695}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\atomic_stack.rs","byte_start":8613695,"byte_end":8613713,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6697},{"krate":0,"index":6698}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\atomic_stack.rs","byte_start":8614285,"byte_end":8614303,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6700}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\entry.rs","byte_start":8618276,"byte_end":8618281,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6726},{"krate":0,"index":6727},{"krate":0,"index":6728},{"krate":0,"index":6729},{"krate":0,"index":6730},{"krate":0,"index":6731},{"krate":0,"index":6732},{"krate":0,"index":6733},{"krate":0,"index":6734},{"krate":0,"index":6735},{"krate":0,"index":6736},{"krate":0,"index":6737},{"krate":0,"index":6738},{"krate":0,"index":6739}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\entry.rs","byte_start":8624509,"byte_end":8624514,"line_start":329,"line_end":329,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6742}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\entry.rs","byte_start":8624722,"byte_end":8624727,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\entry.rs","byte_start":8624752,"byte_end":8624757,"line_start":341,"line_end":341,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\handle.rs","byte_start":8625134,"byte_end":8625140,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6754},{"krate":0,"index":6755},{"krate":0,"index":6756}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\handle.rs","byte_start":8625785,"byte_end":8625791,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6758}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\registration.rs","byte_start":8626236,"byte_end":8626248,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6773},{"krate":0,"index":6774},{"krate":0,"index":6775},{"krate":0,"index":6776},{"krate":0,"index":6777}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\registration.rs","byte_start":8627158,"byte_end":8627170,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6780}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\stack.rs","byte_start":8627454,"byte_end":8627459,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6788}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\stack.rs","byte_start":8627550,"byte_end":8627555,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6790},{"krate":0,"index":6791},{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":6794},{"krate":0,"index":6795},{"krate":0,"index":6796},{"krate":0,"index":6797}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":8603272,"byte_end":8603278,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6831},{"krate":0,"index":6832},{"krate":0,"index":6833},{"krate":0,"index":6834},{"krate":0,"index":6835},{"krate":0,"index":6836},{"krate":0,"index":6837}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":8606927,"byte_end":8606933,"line_start":234,"line_end":234,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6841},{"krate":0,"index":6842},{"krate":0,"index":6843},{"krate":0,"index":6844},{"krate":0,"index":6845}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":8608922,"byte_end":8608928,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6848}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":8609405,"byte_end":8609410,"line_start":327,"line_end":327,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6851},{"krate":0,"index":6852},{"krate":0,"index":6853},{"krate":0,"index":6854},{"krate":0,"index":6855},{"krate":0,"index":6856}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":8611027,"byte_end":8611032,"line_start":389,"line_end":389,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6858}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631827,"byte_end":8631832,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6864},{"krate":0,"index":6865},{"krate":0,"index":6866},{"krate":0,"index":6867}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8632547,"byte_end":8632552,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8632579,"byte_end":8632584,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6870}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633290,"byte_end":8633297,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6878},{"krate":0,"index":6879},{"krate":0,"index":6880},{"krate":0,"index":6881},{"krate":0,"index":6882},{"krate":0,"index":6883},{"krate":0,"index":6884},{"krate":0,"index":6885},{"krate":0,"index":6886}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8637071,"byte_end":8637078,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6888}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8637207,"byte_end":8637214,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6890}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8637329,"byte_end":8637336,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6892},{"krate":0,"index":6893}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8637501,"byte_end":8637508,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6895}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8637613,"byte_end":8637620,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6897},{"krate":0,"index":6898}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8637761,"byte_end":8637768,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6900},{"krate":0,"index":6901}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8637929,"byte_end":8637936,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6903}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8638043,"byte_end":8638050,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6905}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8641786,"byte_end":8641794,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6925},{"krate":0,"index":6926}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8643089,"byte_end":8643097,"line_start":164,"line_end":164,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6931},{"krate":0,"index":6932}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8646429,"byte_end":8646436,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6955}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8646565,"byte_end":8646572,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6958},{"krate":0,"index":6959},{"krate":0,"index":6960},{"krate":0,"index":6961}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8647110,"byte_end":8647117,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6964},{"krate":0,"index":6965}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8647695,"byte_end":8647702,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6967}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8647846,"byte_end":8647853,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8647890,"byte_end":8647895,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6970}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666035,"byte_end":8666043,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7228},{"krate":0,"index":7229},{"krate":0,"index":7230}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666858,"byte_end":8666866,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7233},{"krate":0,"index":7234}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\level.rs","byte_start":8657799,"byte_end":8657804,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6989},{"krate":0,"index":6991},{"krate":0,"index":6992},{"krate":0,"index":6993},{"krate":0,"index":6994},{"krate":0,"index":6995}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\level.rs","byte_start":8662556,"byte_end":8662561,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6998}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\mod.rs","byte_start":8649620,"byte_end":8649625,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7023},{"krate":0,"index":7024},{"krate":0,"index":7025},{"krate":0,"index":7026},{"krate":0,"index":7027},{"krate":0,"index":7029},{"krate":0,"index":7031},{"krate":0,"index":7032},{"krate":0,"index":7033},{"krate":0,"index":7034},{"krate":0,"index":7035},{"krate":0,"index":7036}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\mod.rs","byte_start":8655333,"byte_end":8655337,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7039}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\bit.rs","byte_start":8667699,"byte_end":8667703,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7269},{"krate":0,"index":7270},{"krate":0,"index":7271},{"krate":0,"index":7272},{"krate":0,"index":7273},{"krate":0,"index":7274},{"krate":0,"index":7275}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\bit.rs","byte_start":8669177,"byte_end":8669181,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7277}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\addr.rs","byte_start":8676400,"byte_end":8676407,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7296},{"krate":0,"index":7297},{"krate":0,"index":7298},{"krate":0,"index":7299},{"krate":0,"index":7300},{"krate":0,"index":7301},{"krate":0,"index":7302},{"krate":0,"index":7303}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\generation.rs","byte_start":8679436,"byte_end":8679446,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7315},{"krate":0,"index":7316},{"krate":0,"index":7317},{"krate":0,"index":7318},{"krate":0,"index":7319}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\page.rs","byte_start":8680585,"byte_end":8680590,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7340},{"krate":0,"index":7341},{"krate":0,"index":7343}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\page.rs","byte_start":8680932,"byte_end":8680938,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7347},{"krate":0,"index":7348},{"krate":0,"index":7350},{"krate":0,"index":7353},{"krate":0,"index":7356},{"krate":0,"index":7359}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\page.rs","byte_start":8684890,"byte_end":8684895,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7364}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\page.rs","byte_start":8685201,"byte_end":8685207,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7368}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\shard.rs","byte_start":8687350,"byte_end":8687355,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7382},{"krate":0,"index":7385},{"krate":0,"index":7386},{"krate":0,"index":7387},{"krate":0,"index":7388},{"krate":0,"index":7389}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\shard.rs","byte_start":8689034,"byte_end":8689039,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7392}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\slot.rs","byte_start":8689416,"byte_end":8689420,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7405},{"krate":0,"index":7406},{"krate":0,"index":7407},{"krate":0,"index":7408},{"krate":0,"index":7409},{"krate":0,"index":7411}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\stack.rs","byte_start":8690391,"byte_end":8690404,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7423},{"krate":0,"index":7424},{"krate":0,"index":7425}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\stack.rs","byte_start":8691232,"byte_end":8691245,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7428}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\mod.rs","byte_start":8670779,"byte_end":8670783,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\mod.rs","byte_start":8670820,"byte_end":8670824,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\mod.rs","byte_start":8670847,"byte_end":8670851,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7445},{"krate":0,"index":7446},{"krate":0,"index":7447},{"krate":0,"index":7448}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\mod.rs","byte_start":8672366,"byte_end":8672370,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7451}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":180390,"byte_end":180400,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":180459,"byte_end":180469,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181758,"byte_end":181766,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181803,"byte_end":181811,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181865,"byte_end":181875,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":184879,"byte_end":184889,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":185134,"byte_end":185144,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7500}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":186227,"byte_end":186235,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":186434,"byte_end":186442,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\rand.rs","byte_start":196514,"byte_end":196522,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\wake.rs","byte_start":198384,"byte_end":198392,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\intrusive_double_linked_list.rs","byte_start":202358,"byte_end":202366,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\intrusive_double_linked_list.rs","byte_start":202616,"byte_end":202624,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\intrusive_double_linked_list.rs","byte_start":202729,"byte_end":202737,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Inherent","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\intrusive_double_linked_list.rs","byte_start":203046,"byte_end":203056,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14158,"byte_end":14164,"line_start":347,"line_end":347,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\mod.rs","byte_start":16275,"byte_end":16282,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":79}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14219,"byte_end":14225,"line_start":354,"line_end":354,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":83}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14236,"byte_end":14238,"line_start":356,"line_end":356,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":177}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14248,"byte_end":14251,"line_start":357,"line_end":357,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":308}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72787,"byte_end":72790,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2581}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\mod.rs","byte_start":72894,"byte_end":72897,"line_start":40,"line_end":40,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2876}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14283,"byte_end":14290,"line_start":362,"line_end":362,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":556}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14340,"byte_end":14347,"line_start":368,"line_end":368,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":562}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14398,"byte_end":14404,"line_start":373,"line_end":373,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":3836}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\mod.rs","byte_start":8099722,"byte_end":8099729,"line_start":60,"line_end":60,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3896}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14435,"byte_end":14441,"line_start":377,"line_end":377,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":3978}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14470,"byte_end":14474,"line_start":381,"line_end":381,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4667}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8255014,"byte_end":8255023,"line_start":435,"line_end":435,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":4681}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8255181,"byte_end":8255185,"line_start":442,"line_end":442,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4868}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\mod.rs","byte_start":8303571,"byte_end":8303576,"line_start":79,"line_end":79,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5267}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8255332,"byte_end":8255339,"line_start":450,"line_end":450,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":5431}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mod.rs","byte_start":8255653,"byte_end":8255658,"line_start":463,"line_end":463,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":5911}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14538,"byte_end":14542,"line_start":388,"line_end":388,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6384}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\lib.rs","byte_start":14596,"byte_end":14600,"line_start":393,"line_end":393,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6578}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\mod.rs","byte_start":8562024,"byte_end":8562035,"line_start":99,"line_end":99,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":6581}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\scoped_tls.rs","byte_start":29721,"byte_end":29730,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":57},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\scoped_tls.rs","byte_start":29746,"byte_end":29755,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\macros\\scoped_tls.rs","byte_start":30105,"byte_end":30110,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":68},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":31866,"byte_end":31875,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":874},"to":{"krate":2,"index":1968}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":32038,"byte_end":32047,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\maybe_done.rs","byte_start":33234,"byte_end":33243,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":874},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":33997,"byte_end":34003,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":1968}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":34217,"byte_end":34223,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\poll_fn.rs","byte_start":34365,"byte_end":34371,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34902,"byte_end":34907,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":1968}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\ready.rs","byte_start":34934,"byte_end":34939,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\future\\try_join.rs","byte_start":36136,"byte_end":36144,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":894},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":47374,"byte_end":47383,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49833,"byte_end":49836,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":49996,"byte_end":49999,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":30107},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_buf_read.rs","byte_start":50628,"byte_end":50634,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":6551},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":56598,"byte_end":56601,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":56744,"byte_end":56747,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":30107},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_read.rs","byte_start":57543,"byte_end":57549,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":6551},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":59975,"byte_end":59978,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":246}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":60121,"byte_end":60124,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":30107},"to":{"krate":0,"index":246}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_seek.rs","byte_start":60578,"byte_end":60584,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":6551},"to":{"krate":0,"index":246}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":68489,"byte_end":68492,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":68640,"byte_end":68643,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":30107},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":69212,"byte_end":69215,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":4232},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":69723,"byte_end":69729,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":6551},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":70242,"byte_end":70248,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":6551},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":70764,"byte_end":70770,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":6551},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\async_write.rs","byte_start":71281,"byte_end":71287,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":6551},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\scheduled_io.rs","byte_start":7748191,"byte_end":7748202,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1152},"to":{"krate":0,"index":7307}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\scheduled_io.rs","byte_start":7748961,"byte_end":7748972,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1152},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\scheduled_io.rs","byte_start":7749179,"byte_end":7749190,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\scheduled_io.rs","byte_start":7751812,"byte_end":7751823,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1152},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":7737560,"byte_end":7737566,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":7740427,"byte_end":7740433,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1020},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":7740801,"byte_end":7740807,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":7740943,"byte_end":7740949,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":7742092,"byte_end":7742098,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1158},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":7742176,"byte_end":7742182,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":7742317,"byte_end":7742322,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\driver\\mod.rs","byte_start":7743866,"byte_end":7743875,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7758381,"byte_end":7758392,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7766183,"byte_end":7766194,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1178},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7766687,"byte_end":7766698,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1178},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7767779,"byte_end":7767790,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1178},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\poll_evented.rs","byte_start":7767963,"byte_end":7767974,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1178},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7770122,"byte_end":7770134,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7781004,"byte_end":7781016,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1182},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7781041,"byte_end":7781053,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1182},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\registration.rs","byte_start":7781072,"byte_end":7781084,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1182},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7782866,"byte_end":7782874,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7783791,"byte_end":7783800,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7784050,"byte_end":7784058,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1301},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7784613,"byte_end":7784622,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1304},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7785571,"byte_end":7785576,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7785969,"byte_end":7785974,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7786227,"byte_end":7786232,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1210},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7786355,"byte_end":7786363,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7786400,"byte_end":7786409,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1304},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7786446,"byte_end":7786454,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7786491,"byte_end":7786500,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1304},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7786543,"byte_end":7786551,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\split.rs","byte_start":7786719,"byte_end":7786728,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1304},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\seek.rs","byte_start":7787418,"byte_end":7787422,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_buf_read_ext.rs","byte_start":7790339,"byte_end":7790351,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":1999}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_buf_read_ext.rs","byte_start":7799372,"byte_end":7799373,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1333},"to":{"krate":0,"index":1999}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7801400,"byte_end":7801409,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":2007}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_read_ext.rs","byte_start":7838658,"byte_end":7838659,"line_start":1112,"line_end":1112,"column_start":46,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1380},"to":{"krate":0,"index":2007}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7839538,"byte_end":7839547,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":246},"to":{"krate":0,"index":1388}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_seek_ext.rs","byte_start":7840417,"byte_end":7840418,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1391},"to":{"krate":0,"index":1388}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7842475,"byte_end":7842485,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":271},"to":{"krate":0,"index":2059}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\async_write_ext.rs","byte_start":7875695,"byte_end":7875696,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1432},"to":{"krate":0,"index":2059}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7877112,"byte_end":7877121,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":10215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7879300,"byte_end":7879309,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":10215},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7880285,"byte_end":7880294,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":10215},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7881125,"byte_end":7881134,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":10215},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_reader.rs","byte_start":7881850,"byte_end":7881859,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":10215},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7883366,"byte_end":7883375,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":10201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7885212,"byte_end":7885221,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":10201},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7885363,"byte_end":7885372,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":10201},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7886084,"byte_end":7886093,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":10201},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7886623,"byte_end":7886632,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":10201},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_stream.rs","byte_start":7887111,"byte_end":7887120,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":10201},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7889074,"byte_end":7889083,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":10138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7891361,"byte_end":7891370,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":10138},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7892260,"byte_end":7892269,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":10138},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7892751,"byte_end":7892760,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":10138},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\buf_writer.rs","byte_start":7893047,"byte_end":7893056,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":10138},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7894225,"byte_end":7894230,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":10089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7895370,"byte_end":7895375,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":10089},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7895654,"byte_end":7895659,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":10089},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\chain.rs","byte_start":7896482,"byte_end":7896487,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":10089},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\copy.rs","byte_start":7899530,"byte_end":7899534,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2109},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\empty.rs","byte_start":7902644,"byte_end":7902649,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2125},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\empty.rs","byte_start":7902978,"byte_end":7902983,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2125},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\empty.rs","byte_start":7903216,"byte_end":7903221,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2125},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\flush.rs","byte_start":7904042,"byte_end":7904047,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2128},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7905227,"byte_end":7905232,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":10066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7906484,"byte_end":7906489,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":10066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\lines.rs","byte_start":7907236,"byte_end":7907241,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":10066},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read.rs","byte_start":7908639,"byte_end":7908643,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2136},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_buf.rs","byte_start":7909704,"byte_end":7909711,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2145},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_exact.rs","byte_start":7911076,"byte_end":7911085,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2156},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_line.rs","byte_start":7918620,"byte_end":7918628,"line_start":85,"line_end":85,"column_start":51,"column_end":59},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2310},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_end.rs","byte_start":7919854,"byte_end":7919859,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1783},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_end.rs","byte_start":7921535,"byte_end":7921544,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2321},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_to_string.rs","byte_start":7923608,"byte_end":7923620,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2331},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\read_until.rs","byte_start":7926272,"byte_end":7926281,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2342},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\repeat.rs","byte_start":7928115,"byte_end":7928121,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2354},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\shutdown.rs","byte_start":7929243,"byte_end":7929251,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2358},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\sink.rs","byte_start":7931084,"byte_end":7931088,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2366},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\sink.rs","byte_start":7931598,"byte_end":7931602,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2366},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7932567,"byte_end":7932572,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":9232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7933311,"byte_end":7933316,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":9232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\split.rs","byte_start":7934095,"byte_end":7934100,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":9232},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7947639,"byte_end":7947651,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":9186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7948156,"byte_end":7948168,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":9186},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\stream_reader.rs","byte_start":7949707,"byte_end":7949719,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":9186},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7935268,"byte_end":7935272,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":9141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7936900,"byte_end":7936904,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":9141},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\take.rs","byte_start":7937561,"byte_end":7937565,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":9141},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write.rs","byte_start":7939122,"byte_end":7939127,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2407},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_all.rs","byte_start":7939920,"byte_end":7939928,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2416},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\io\\util\\write_buf.rs","byte_start":7941436,"byte_end":7941444,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2425},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":73921,"byte_end":73938,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":368},"to":{"krate":0,"index":319}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":74388,"byte_end":74398,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":1,"index":6705},"to":{"krate":0,"index":319}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":74438,"byte_end":74448,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":120}},"from":{"krate":1,"index":6705},"to":{"krate":0,"index":368}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":74729,"byte_end":74741,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":121}},"from":{"krate":1,"index":6735},"to":{"krate":0,"index":319}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":74781,"byte_end":74793,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":122}},"from":{"krate":1,"index":6735},"to":{"krate":0,"index":368}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":75053,"byte_end":75065,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":123}},"from":{"krate":1,"index":6738},"to":{"krate":0,"index":319}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\addr.rs","byte_start":75105,"byte_end":75117,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":124}},"from":{"krate":1,"index":6738},"to":{"krate":0,"index":368}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7953640,"byte_end":7953651,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7964355,"byte_end":7964366,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2837},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7964681,"byte_end":7964692,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"kind":{"Impl":{"id":127}},"from":{"krate":17,"index":966},"to":{"krate":2,"index":1852}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7965132,"byte_end":7965143,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2837},"to":{"krate":2,"index":1852}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\listener.rs","byte_start":7965469,"byte_end":7965480,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2837},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":7966539,"byte_end":7966547,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\incoming.rs","byte_start":7967185,"byte_end":7967193,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2839},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7969343,"byte_end":7969351,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7971806,"byte_end":7971814,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2845},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7972134,"byte_end":7972143,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2852},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7972956,"byte_end":7972964,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2845},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split.rs","byte_start":7973058,"byte_end":7973067,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2852},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976130,"byte_end":7976142,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2868},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976345,"byte_end":7976357,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2868},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7976367,"byte_end":7976380,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7979214,"byte_end":7979227,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2859},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7979532,"byte_end":7979546,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7980098,"byte_end":7980112,"line_start":220,"line_end":220,"column_start":15,"column_end":29},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2863},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7980272,"byte_end":7980286,"line_start":228,"line_end":228,"column_start":21,"column_end":35},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2863},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7981107,"byte_end":7981120,"line_start":257,"line_end":257,"column_start":27,"column_end":40},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2859},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\split_owned.rs","byte_start":7981216,"byte_end":7981230,"line_start":263,"line_end":263,"column_start":27,"column_end":41},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2863},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":7983365,"byte_end":7983374,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8008180,"byte_end":8008189,"line_start":834,"line_end":834,"column_start":39,"column_end":48},"kind":{"Impl":{"id":147}},"from":{"krate":17,"index":910},"to":{"krate":2,"index":1852}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8008625,"byte_end":8008634,"line_start":848,"line_end":848,"column_start":34,"column_end":43},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2874},"to":{"krate":2,"index":1852}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8008987,"byte_end":8008996,"line_start":862,"line_end":862,"column_start":20,"column_end":29},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2874},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8009310,"byte_end":8009319,"line_start":876,"line_end":876,"column_start":21,"column_end":30},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2874},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\tcp\\stream.rs","byte_start":8010063,"byte_end":8010072,"line_start":905,"line_end":905,"column_start":21,"column_end":30},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2874},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8011301,"byte_end":8011310,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8024866,"byte_end":8024875,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"kind":{"Impl":{"id":153}},"from":{"krate":17,"index":1006},"to":{"krate":2,"index":1852}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8025311,"byte_end":8025320,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2999},"to":{"krate":2,"index":1852}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\socket.rs","byte_start":8025640,"byte_end":8025649,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2999},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8027958,"byte_end":8027970,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3011},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8028173,"byte_end":8028185,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3011},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8028712,"byte_end":8028720,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8030352,"byte_end":8030360,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8031680,"byte_end":8031688,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3001},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\net\\udp\\split.rs","byte_start":8031779,"byte_end":8031787,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3006},"to":{"krate":2,"index":1836}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_ptr.rs","byte_start":84289,"byte_end":84298,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_ptr.rs","byte_start":84472,"byte_end":84481,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_ptr.rs","byte_start":84630,"byte_end":84639,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":84983,"byte_end":84992,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":85017,"byte_end":85026,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":85036,"byte_end":85045,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":85531,"byte_end":85540,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u16.rs","byte_start":85825,"byte_end":85834,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86175,"byte_end":86184,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86209,"byte_end":86218,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86228,"byte_end":86237,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86416,"byte_end":86425,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u32.rs","byte_start":86710,"byte_end":86719,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":88834,"byte_end":88842,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":88867,"byte_end":88875,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":88885,"byte_end":88893,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":89068,"byte_end":89076,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_u8.rs","byte_start":89360,"byte_end":89368,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":89708,"byte_end":89719,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":89744,"byte_end":89755,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":89765,"byte_end":89776,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":90459,"byte_end":90470,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":90760,"byte_end":90771,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2111}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\atomic_usize.rs","byte_start":90935,"byte_end":90946,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\loom\\std\\unsafe_cell.rs","byte_start":91134,"byte_end":91144,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\either.rs","byte_start":8032000,"byte_end":8032006,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3030},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\either.rs","byte_start":8032812,"byte_end":8032818,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3030},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\either.rs","byte_start":8033032,"byte_end":8033038,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3030},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":96248,"byte_end":96258,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":96523,"byte_end":96533,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3056},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":96992,"byte_end":96997,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":101722,"byte_end":101732,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3056},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":101841,"byte_end":101853,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3060},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":102240,"byte_end":102256,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":103103,"byte_end":103119,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3110},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":103660,"byte_end":103672,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\thread.rs","byte_start":103884,"byte_end":103889,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":94870,"byte_end":94874,"line_start":94,"line_end":94,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1939},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":94877,"byte_end":94881,"line_start":94,"line_end":94,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1927},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":95350,"byte_end":95353,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"kind":{"Impl":{"id":199}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\park\\mod.rs","byte_start":95442,"byte_end":95445,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"kind":{"Impl":{"id":200}},"from":{"krate":5,"index":3905},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\context.rs","byte_start":126539,"byte_end":126548,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":571},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":8035164,"byte_end":8035178,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":8038717,"byte_end":8038722,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3190},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":8039409,"byte_end":8039423,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3155},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":8040310,"byte_end":8040324,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3155},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":8040490,"byte_end":8040497,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":8040955,"byte_end":8040962,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3661},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":8041130,"byte_end":8041133,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":208}},"from":{"krate":5,"index":3905},"to":{"krate":0,"index":3625}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\basic_scheduler.rs","byte_start":8042231,"byte_end":8042237,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3164},"to":{"krate":0,"index":815}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":8049920,"byte_end":8049926,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3255},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":8049951,"byte_end":8049957,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3255},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":8050316,"byte_end":8050320,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\core.rs","byte_start":8051098,"byte_end":8051102,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8057484,"byte_end":8057493,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8060572,"byte_end":8060581,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3670},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8060824,"byte_end":8060833,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3670},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8061110,"byte_end":8061119,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3670},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\error.rs","byte_start":8061153,"byte_end":8061158,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":218}},"from":{"krate":1,"index":2541},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\harness.rs","byte_start":8061836,"byte_end":8061843,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\harness.rs","byte_start":8062320,"byte_end":8062327,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\harness.rs","byte_start":8064498,"byte_end":8064503,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3367},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":8076807,"byte_end":8076817,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3672},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":8076854,"byte_end":8076864,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3672},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":8076880,"byte_end":8076890,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":8077066,"byte_end":8077076,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3672},"to":{"krate":2,"index":1968}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":8077103,"byte_end":8077113,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3672},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":8078339,"byte_end":8078349,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3672},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\join.rs","byte_start":8078615,"byte_end":8078625,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3672},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\raw.rs","byte_start":8079872,"byte_end":8079879,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\raw.rs","byte_start":8081410,"byte_end":8081417,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3440},"to":{"krate":2,"index":1625}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\raw.rs","byte_start":8081507,"byte_end":8081514,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3440},"to":{"krate":2,"index":1937}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\state.rs","byte_start":8084196,"byte_end":8084201,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\state.rs","byte_start":8093057,"byte_end":8093065,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\state.rs","byte_start":8094942,"byte_end":8094947,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3489},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\state.rs","byte_start":8095106,"byte_end":8095114,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3676},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\waker.rs","byte_start":8096932,"byte_end":8096940,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3573},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8043250,"byte_end":8043254,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3607},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8043285,"byte_end":8043289,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3607},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8043426,"byte_end":8043434,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3615},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8043475,"byte_end":8043483,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3615},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8043608,"byte_end":8043612,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1939},"to":{"krate":0,"index":3625}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8043615,"byte_end":8043620,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1932},"to":{"krate":0,"index":3625}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8045407,"byte_end":8045411,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8046303,"byte_end":8046307,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8046476,"byte_end":8046484,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8046770,"byte_end":8046774,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3607},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8047014,"byte_end":8047018,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3607},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8047170,"byte_end":8047178,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3615},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\task\\mod.rs","byte_start":8047394,"byte_end":8047398,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3607},"to":{"krate":0,"index":768}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\blocking\\mod.rs","byte_start":127778,"byte_end":127790,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":129965,"byte_end":129972,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":137892,"byte_end":137899,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":138448,"byte_end":138455,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":138975,"byte_end":138982,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":142878,"byte_end":142885,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\builder.rs","byte_start":142964,"byte_end":142971,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":143766,"byte_end":143778,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":146656,"byte_end":146677,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3733},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":147507,"byte_end":147512,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":149620,"byte_end":149625,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\enter.rs","byte_start":149755,"byte_end":149760,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":150818,"byte_end":150824,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":153920,"byte_end":153926,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":163286,"byte_end":163301,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":163449,"byte_end":163464,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\handle.rs","byte_start":163622,"byte_end":163637,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":660},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\shell.rs","byte_start":165926,"byte_end":165931,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\shell.rs","byte_start":166537,"byte_end":166543,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3771},"to":{"krate":0,"index":815}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\spawner.rs","byte_start":167159,"byte_end":167166,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\runtime\\mod.rs","byte_start":115508,"byte_end":115515,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":171769,"byte_end":171775,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":173316,"byte_end":173326,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":747},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":174173,"byte_end":174189,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":174321,"byte_end":174337,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3823},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\coop.rs","byte_start":176077,"byte_end":176083,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":8102538,"byte_end":8102541,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":274}},"from":{"krate":5,"index":4232},"to":{"krate":0,"index":3858}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":8103263,"byte_end":8103271,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":8103361,"byte_end":8103369,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":8105522,"byte_end":8105529,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3881},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\registry.rs","byte_start":8105637,"byte_end":8105644,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8128415,"byte_end":8128424,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3959},"to":{"krate":0,"index":3868}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8128590,"byte_end":8128599,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3959},"to":{"krate":0,"index":3858}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8129072,"byte_end":8129083,"line_start":57,"line_end":57,"column_start":15,"column_end":26},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3964},"to":{"krate":0,"index":3868}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8130036,"byte_end":8130041,"line_start":86,"line_end":86,"column_start":6,"column_end":11},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8131960,"byte_end":8131969,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\signal\\windows.rs","byte_start":8133773,"byte_end":8133782,"line_start":212,"line_end":212,"column_start":36,"column_end":45},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3971},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":8162046,"byte_end":8162055,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":8162201,"byte_end":8162210,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4566},"to":{"krate":2,"index":1968}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\all.rs","byte_start":8162249,"byte_end":8162258,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":4566},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":8163209,"byte_end":8163218,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":4577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":8163364,"byte_end":8163373,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4577},"to":{"krate":2,"index":1968}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\any.rs","byte_start":8163412,"byte_end":8163421,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4577},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\chain.rs","byte_start":8164344,"byte_end":8164349,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":8268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\chain.rs","byte_start":8164529,"byte_end":8164534,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":8268},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8166079,"byte_end":8166093,"line_start":36,"line_end":36,"column_start":34,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":4127},"to":{"krate":0,"index":4056}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8166112,"byte_end":8166119,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":8247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8166403,"byte_end":8166410,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":8247},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8167386,"byte_end":8167392,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"kind":{"Impl":{"id":295}},"from":{"krate":5,"index":4932},"to":{"krate":0,"index":4056}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8167447,"byte_end":8167453,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"kind":{"Impl":{"id":296}},"from":{"krate":5,"index":4932},"to":{"krate":0,"index":4127}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8167842,"byte_end":8167845,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"kind":{"Impl":{"id":297}},"from":{"krate":5,"index":4232},"to":{"krate":0,"index":4056}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8167891,"byte_end":8167894,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":298}},"from":{"krate":5,"index":4232},"to":{"krate":0,"index":4127}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8168277,"byte_end":8168280,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"kind":{"Impl":{"id":299}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":4056}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8168328,"byte_end":8168331,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"kind":{"Impl":{"id":300}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":4127}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8168846,"byte_end":8168852,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"kind":{"Impl":{"id":301}},"from":{"krate":2,"index":30121},"to":{"krate":0,"index":4056}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8168941,"byte_end":8168947,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"kind":{"Impl":{"id":302}},"from":{"krate":2,"index":30121},"to":{"krate":0,"index":4127}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8170025,"byte_end":8170030,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"kind":{"Impl":{"id":303}},"from":{"krate":15,"index":341},"to":{"krate":0,"index":4056}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8170078,"byte_end":8170083,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"kind":{"Impl":{"id":304}},"from":{"krate":15,"index":341},"to":{"krate":0,"index":4127}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8170483,"byte_end":8170491,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"kind":{"Impl":{"id":305}},"from":{"krate":15,"index":535},"to":{"krate":0,"index":4056}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\collect.rs","byte_start":8170539,"byte_end":8170547,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"kind":{"Impl":{"id":306}},"from":{"krate":15,"index":535},"to":{"krate":0,"index":4127}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8171818,"byte_end":8171823,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4588},"to":{"krate":2,"index":1968}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8171854,"byte_end":8171859,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4588},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8171890,"byte_end":8171895,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4588},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\empty.rs","byte_start":8172438,"byte_end":8172443,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4588},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter.rs","byte_start":8173057,"byte_end":8173063,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":8174},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter.rs","byte_start":8173281,"byte_end":8173287,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":8174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter.rs","byte_start":8173406,"byte_end":8173412,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":8174},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter_map.rs","byte_start":8174498,"byte_end":8174507,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":8129},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter_map.rs","byte_start":8174728,"byte_end":8174737,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":8129},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\filter_map.rs","byte_start":8174859,"byte_end":8174868,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":8129},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fold.rs","byte_start":8175940,"byte_end":8175950,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":8101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fold.rs","byte_start":8176146,"byte_end":8176156,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":8101},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fuse.rs","byte_start":8177055,"byte_end":8177059,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":8053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\fuse.rs","byte_start":8177219,"byte_end":8177223,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":8053},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178166,"byte_end":8178170,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4595},"to":{"krate":2,"index":1968}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\iter.rs","byte_start":8178832,"byte_end":8178836,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4595},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\map.rs","byte_start":8179582,"byte_end":8179585,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":7986},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\map.rs","byte_start":8179774,"byte_end":8179777,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":7986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\map.rs","byte_start":8179898,"byte_end":8179901,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":7986},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\merge.rs","byte_start":8180746,"byte_end":8180751,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":7937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\merge.rs","byte_start":8181005,"byte_end":8181010,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":7937},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":8182522,"byte_end":8182526,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4601},"to":{"krate":2,"index":1968}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":8182560,"byte_end":8182564,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\next.rs","byte_start":8182705,"byte_end":8182709,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4601},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183205,"byte_end":8183209,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4609},"to":{"krate":2,"index":1968}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\once.rs","byte_start":8183836,"byte_end":8183840,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4609},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184387,"byte_end":8184394,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4615},"to":{"krate":2,"index":1968}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184425,"byte_end":8184432,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4615},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8184463,"byte_end":8184470,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4615},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\pending.rs","byte_start":8185163,"byte_end":8185170,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4615},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8190835,"byte_end":8190844,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8197845,"byte_end":8197854,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\stream_map.rs","byte_start":8199393,"byte_end":8199402,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4622},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip.rs","byte_start":8200618,"byte_end":8200622,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":7900},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip.rs","byte_start":8200832,"byte_end":8200836,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":7900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip.rs","byte_start":8200969,"byte_end":8200973,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":7900},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip_while.rs","byte_start":8202199,"byte_end":8202208,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":7855},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip_while.rs","byte_start":8202429,"byte_end":8202438,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":7855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\skip_while.rs","byte_start":8202623,"byte_end":8202632,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":7855},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":8203981,"byte_end":8203988,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4634},"to":{"krate":2,"index":1968}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":8204022,"byte_end":8204029,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\try_next.rs","byte_start":8204236,"byte_end":8204243,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4634},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take.rs","byte_start":8204853,"byte_end":8204857,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":7818},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take.rs","byte_start":8205067,"byte_end":8205071,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":7818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take.rs","byte_start":8205204,"byte_end":8205208,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":7818},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take_while.rs","byte_start":8206727,"byte_end":8206736,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":7769},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take_while.rs","byte_start":8206996,"byte_end":8207005,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":7769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\take_while.rs","byte_start":8207198,"byte_end":8207207,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":7769},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\timeout.rs","byte_start":8238432,"byte_end":8238439,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":7746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\timeout.rs","byte_start":8238794,"byte_end":8238801,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":7746},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8137288,"byte_end":8137294,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":16,"index":68},"to":{"krate":0,"index":4529}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\stream\\mod.rs","byte_start":8161276,"byte_end":8161278,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":4564},"to":{"krate":0,"index":4529}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8257269,"byte_end":8257276,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\barrier.rs","byte_start":8260556,"byte_end":8260573,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":6011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8271140,"byte_end":8271146,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4743},"to":{"krate":2,"index":1839}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8271273,"byte_end":8271279,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":4743},"to":{"krate":2,"index":1839}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8271440,"byte_end":8271444,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4737},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8271514,"byte_end":8271518,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4737},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274292,"byte_end":8274298,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4703},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274335,"byte_end":8274341,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4703},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274379,"byte_end":8274387,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4706},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274424,"byte_end":8274432,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4706},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8274448,"byte_end":8274454,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8280090,"byte_end":8280094,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8280486,"byte_end":8280492,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":4703},"to":{"krate":2,"index":1625}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8280672,"byte_end":8280678,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":4703},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8280832,"byte_end":8280840,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":4706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8285705,"byte_end":8285713,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":4706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8288466,"byte_end":8288471,"line_start":856,"line_end":856,"column_start":30,"column_end":35},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":4799},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8291885,"byte_end":8291893,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":4706},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8292343,"byte_end":8292351,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":4706},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8293535,"byte_end":8293539,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":4737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8294381,"byte_end":8294385,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":4737},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8295115,"byte_end":8295123,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":4706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8296435,"byte_end":8296439,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":4737},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8297163,"byte_end":8297167,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":4737},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8297965,"byte_end":8297971,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":4728},"to":{"krate":0,"index":768}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8298386,"byte_end":8298392,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":4703},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8298536,"byte_end":8298544,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":4706},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8298679,"byte_end":8298688,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":4733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8298861,"byte_end":8298870,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":4733},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8299161,"byte_end":8299170,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":6025},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8299443,"byte_end":8299452,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":6025},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8299479,"byte_end":8299491,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":6037},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\broadcast.rs","byte_start":8299833,"byte_end":8299845,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":6037},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\block.rs","byte_start":8306154,"byte_end":8306159,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":4886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\block.rs","byte_start":8316141,"byte_end":8316147,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":4900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\block.rs","byte_start":8316629,"byte_end":8316635,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":4900},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8317273,"byte_end":8317279,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":4954},"to":{"krate":2,"index":1625}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8317411,"byte_end":8317417,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":4954},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8317824,"byte_end":8317832,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":4963},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8319604,"byte_end":8319612,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":4963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322040,"byte_end":8322048,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":4963},"to":{"krate":2,"index":1968}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322108,"byte_end":8322116,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":4963},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\bounded.rs","byte_start":8322304,"byte_end":8322310,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":4954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8333700,"byte_end":8333702,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5028},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8334103,"byte_end":8334105,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":5037},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8334412,"byte_end":8334421,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":6082},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8334683,"byte_end":8334695,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":6089},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8336390,"byte_end":8336394,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5061},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8337027,"byte_end":8337035,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5073},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8337301,"byte_end":8337305,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5061},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8337354,"byte_end":8337358,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5061},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8337837,"byte_end":8337839,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8338537,"byte_end":8338539,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8338687,"byte_end":8338689,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8338867,"byte_end":8338869,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5028},"to":{"krate":2,"index":1625}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8339269,"byte_end":8339271,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5028},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8339680,"byte_end":8339682,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8342802,"byte_end":8342804,"line_start":344,"line_end":344,"column_start":21,"column_end":23},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5037},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8343240,"byte_end":8343244,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8343708,"byte_end":8343712,"line_start":387,"line_end":387,"column_start":21,"column_end":25},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5061},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8344261,"byte_end":8344273,"line_start":404,"line_end":404,"column_start":32,"column_end":44},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":6069},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\chan.rs","byte_start":8345873,"byte_end":8345884,"line_start":475,"line_end":475,"column_start":20,"column_end":31},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":445},"to":{"krate":0,"index":5051}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\list.rs","byte_start":8348601,"byte_end":8348603,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\list.rs","byte_start":8354307,"byte_end":8354309,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5186},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\list.rs","byte_start":8354586,"byte_end":8354588,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\list.rs","byte_start":8357987,"byte_end":8357989,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5190},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8358663,"byte_end":8358678,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5226},"to":{"krate":2,"index":1625}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8358819,"byte_end":8358834,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5226},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8359292,"byte_end":8359309,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5235},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8360287,"byte_end":8360304,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362776,"byte_end":8362793,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5235},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\unbounded.rs","byte_start":8362959,"byte_end":8362974,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364084,"byte_end":8364093,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":6082},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364253,"byte_end":8364262,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":6082},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364748,"byte_end":8364760,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":6089},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8364793,"byte_end":8364805,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":6089},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365145,"byte_end":8365157,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":6089},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365386,"byte_end":8365395,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":6100},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8365525,"byte_end":8365534,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":6100},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8366020,"byte_end":8366032,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":6105},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8366338,"byte_end":8366350,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":6105},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8366507,"byte_end":8366518,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":6115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8366617,"byte_end":8366628,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":6115},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8366758,"byte_end":8366769,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":6115},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8367273,"byte_end":8367289,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":6125},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mpsc\\error.rs","byte_start":8367326,"byte_end":8367342,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6125},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373658,"byte_end":8373663,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373717,"byte_end":8373722,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373776,"byte_end":8373786,"line_start":160,"line_end":160,"column_start":25,"column_end":35},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":5304},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8373851,"byte_end":8373866,"line_start":161,"line_end":161,"column_start":25,"column_end":40},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":5308},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8374153,"byte_end":8374165,"line_start":171,"line_end":171,"column_start":23,"column_end":35},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":6143},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8374302,"byte_end":8374314,"line_start":177,"line_end":177,"column_start":16,"column_end":28},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":6143},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8375122,"byte_end":8375127,"line_start":203,"line_end":203,"column_start":17,"column_end":22},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":6136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379700,"byte_end":8379705,"line_start":361,"line_end":361,"column_start":21,"column_end":26},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379789,"byte_end":8379794,"line_start":367,"line_end":367,"column_start":21,"column_end":26},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8379943,"byte_end":8379953,"line_start":378,"line_end":378,"column_start":26,"column_end":36},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":5304},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8380054,"byte_end":8380064,"line_start":384,"line_end":384,"column_start":27,"column_end":37},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5304},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8380211,"byte_end":8380221,"line_start":391,"line_end":391,"column_start":30,"column_end":40},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5304},"to":{"krate":2,"index":2111}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8380378,"byte_end":8380388,"line_start":397,"line_end":397,"column_start":45,"column_end":55},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5304},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8380554,"byte_end":8380564,"line_start":403,"line_end":403,"column_start":49,"column_end":59},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":5304},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8380742,"byte_end":8380757,"line_start":411,"line_end":411,"column_start":26,"column_end":41},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5308},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8380854,"byte_end":8380869,"line_start":417,"line_end":417,"column_start":27,"column_end":42},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":5308},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8381012,"byte_end":8381027,"line_start":424,"line_end":424,"column_start":30,"column_end":45},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":5308},"to":{"krate":2,"index":2111}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8381180,"byte_end":8381195,"line_start":430,"line_end":430,"column_start":45,"column_end":60},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5308},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\mutex.rs","byte_start":8381357,"byte_end":8381372,"line_start":436,"line_end":436,"column_start":49,"column_end":64},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5308},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8385336,"byte_end":8385344,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6160},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8385377,"byte_end":8385385,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6160},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8385648,"byte_end":8385654,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":6148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8389662,"byte_end":8389668,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":6148},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8391406,"byte_end":8391414,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8391924,"byte_end":8391932,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":6160},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8396762,"byte_end":8396770,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":6160},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\notify.rs","byte_start":8399728,"byte_end":8399734,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6153},"to":{"krate":0,"index":768}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8401610,"byte_end":8401619,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6189},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8401781,"byte_end":8401790,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":6189},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8401859,"byte_end":8401871,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":6201},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8402170,"byte_end":8402182,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":6201},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8403993,"byte_end":8403999,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":6177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410300,"byte_end":8410306,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":6177},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8410445,"byte_end":8410453,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":6183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8414844,"byte_end":8414852,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6183},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8414999,"byte_end":8415007,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6183},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8415470,"byte_end":8415475,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":5459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8419847,"byte_end":8419852,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":5459},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8419889,"byte_end":8419894,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5459},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8419919,"byte_end":8419924,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":5459},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8420293,"byte_end":8420298,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":5459},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8420693,"byte_end":8420698,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":6214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\oneshot.rs","byte_start":8422411,"byte_end":8422416,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":6214},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8425894,"byte_end":8425903,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":5572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8435824,"byte_end":8435833,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":5572},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8436034,"byte_end":8436040,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":5584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8436906,"byte_end":8436913,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":5578},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8437591,"byte_end":8437598,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":5578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8438397,"byte_end":8438404,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":5578},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8440046,"byte_end":8440053,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":5578},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8440100,"byte_end":8440112,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":6227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8440205,"byte_end":8440217,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":6227},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8440361,"byte_end":8440373,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6227},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8440420,"byte_end":8440435,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":6220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8441057,"byte_end":8441072,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6220},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8441358,"byte_end":8441373,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":6220},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\batch_semaphore.rs","byte_start":8441466,"byte_end":8441472,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":5584},"to":{"krate":0,"index":768}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8446741,"byte_end":8446750,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":5666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8462944,"byte_end":8462953,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":5666},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8463032,"byte_end":8463041,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":5666},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8463419,"byte_end":8463428,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":5666},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8463453,"byte_end":8463462,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":5666},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8463500,"byte_end":8463506,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":6232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8469912,"byte_end":8469918,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":6232},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8469991,"byte_end":8469997,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6232},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8470419,"byte_end":8470431,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8470611,"byte_end":8470623,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6237},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8470767,"byte_end":8470779,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6237},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8470826,"byte_end":8470841,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8471371,"byte_end":8471386,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6242},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8471672,"byte_end":8471687,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6242},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8471725,"byte_end":8471731,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8477144,"byte_end":8477152,"line_start":1034,"line_end":1034,"column_start":6,"column_end":14},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8480815,"byte_end":8480823,"line_start":1172,"line_end":1172,"column_start":21,"column_end":29},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6255},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore_ll.rs","byte_start":8481176,"byte_end":8481187,"line_start":1188,"line_end":1188,"column_start":6,"column_end":17},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8483916,"byte_end":8483925,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8486020,"byte_end":8486035,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8486280,"byte_end":8486300,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8486554,"byte_end":8486569,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6285},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\semaphore.rs","byte_start":8486677,"byte_end":8486697,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6292},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8490518,"byte_end":8490533,"line_start":113,"line_end":113,"column_start":21,"column_end":36},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8490800,"byte_end":8490815,"line_start":123,"line_end":123,"column_start":26,"column_end":41},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6327},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8491819,"byte_end":8491825,"line_start":156,"line_end":156,"column_start":25,"column_end":31},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6302},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8491879,"byte_end":8491885,"line_start":157,"line_end":157,"column_start":25,"column_end":31},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6302},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8491946,"byte_end":8491961,"line_start":158,"line_end":158,"column_start":25,"column_end":40},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6309},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492026,"byte_end":8492042,"line_start":159,"line_end":159,"column_start":25,"column_end":41},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6318},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8492100,"byte_end":8492106,"line_start":161,"line_end":161,"column_start":17,"column_end":23},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8495223,"byte_end":8495238,"line_start":264,"line_end":264,"column_start":32,"column_end":47},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6309},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8495377,"byte_end":8495393,"line_start":272,"line_end":272,"column_start":32,"column_end":48},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6318},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8495535,"byte_end":8495551,"line_start":280,"line_end":280,"column_start":35,"column_end":51},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6318},"to":{"krate":2,"index":2111}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8495673,"byte_end":8495679,"line_start":286,"line_end":286,"column_start":21,"column_end":27},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":6302},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\rwlock.rs","byte_start":8495763,"byte_end":8495769,"line_start":292,"line_end":292,"column_start":21,"column_end":27},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6302},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":8502044,"byte_end":8502055,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":5877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":8507982,"byte_end":8507993,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":5877},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":8508079,"byte_end":8508090,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":5877},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":8508223,"byte_end":8508234,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":5877},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":8508259,"byte_end":8508270,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":5877},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\task\\atomic_waker.rs","byte_start":8508366,"byte_end":8508371,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":541}},"from":{"krate":2,"index":8512},"to":{"krate":0,"index":5900}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8511912,"byte_end":8511921,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6357},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8512101,"byte_end":8512110,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6357},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8514269,"byte_end":8514277,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":6336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8515549,"byte_end":8515557,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":6336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8516923,"byte_end":8516931,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6336},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8517190,"byte_end":8517198,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6336},"to":{"krate":2,"index":1625}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8517501,"byte_end":8517509,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6336},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8517623,"byte_end":8517629,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8519164,"byte_end":8519170,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6343},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8519409,"byte_end":8519412,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6349},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8519553,"byte_end":8519559,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6363},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8519661,"byte_end":8519668,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8519891,"byte_end":8519898,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6372},"to":{"krate":2,"index":1653}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8520015,"byte_end":8520022,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6372},"to":{"krate":2,"index":1658}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8520052,"byte_end":8520059,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6372},"to":{"krate":2,"index":6398}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\sync\\watch.rs","byte_start":8520206,"byte_end":8520213,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6372},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\yield_now.rs","byte_start":8533418,"byte_end":8533426,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6406},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8540558,"byte_end":8540566,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8548408,"byte_end":8548416,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":6554},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8548555,"byte_end":8548563,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":6554},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8549528,"byte_end":8549536,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6554},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8549617,"byte_end":8549625,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6554},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8550492,"byte_end":8550500,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":7700},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8551385,"byte_end":8551391,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\local.rs","byte_start":8551954,"byte_end":8551957,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"kind":{"Impl":{"id":566}},"from":{"krate":5,"index":3905},"to":{"krate":0,"index":3625}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8555372,"byte_end":8555380,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8557156,"byte_end":8557164,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8557372,"byte_end":8557380,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6506},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8557701,"byte_end":8557716,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":7623},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8558017,"byte_end":8558022,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6534},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8558640,"byte_end":8558641,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6547},"to":{"krate":0,"index":6545}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8558826,"byte_end":8558837,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":6566},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8558981,"byte_end":8558992,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":6566},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\task\\task_local.rs","byte_start":8559139,"byte_end":8559150,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":6566},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\clock.rs","byte_start":8563735,"byte_end":8563740,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":7058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8574262,"byte_end":8574272,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8591915,"byte_end":8591925,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":7063},"to":{"krate":2,"index":1968}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8591953,"byte_end":8591963,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":7063},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8592100,"byte_end":8592110,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":7063},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8592492,"byte_end":8592497,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7088},"to":{"krate":0,"index":7007}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8594624,"byte_end":8594629,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7088},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8594759,"byte_end":8594762,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay_queue.rs","byte_start":8594849,"byte_end":8594856,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8597394,"byte_end":8597399,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\delay.rs","byte_start":8598377,"byte_end":8598382,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":7105},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\atomic_stack.rs","byte_start":8611706,"byte_end":8611717,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":7109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\atomic_stack.rs","byte_start":8613695,"byte_end":8613713,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":7113},"to":{"krate":2,"index":4996}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\atomic_stack.rs","byte_start":8614285,"byte_end":8614303,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":7113},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\entry.rs","byte_start":8618276,"byte_end":8618281,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":7117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\entry.rs","byte_start":8624509,"byte_end":8624514,"line_start":329,"line_end":329,"column_start":15,"column_end":20},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7117},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\entry.rs","byte_start":8624722,"byte_end":8624727,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7117},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\entry.rs","byte_start":8624752,"byte_end":8624757,"line_start":341,"line_end":341,"column_start":22,"column_end":27},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":7117},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\handle.rs","byte_start":8625134,"byte_end":8625140,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":7141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\handle.rs","byte_start":8625785,"byte_end":8625791,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":7141},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\registration.rs","byte_start":8626236,"byte_end":8626248,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":7145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\registration.rs","byte_start":8627158,"byte_end":8627170,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":7145},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\stack.rs","byte_start":8627454,"byte_end":8627459,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":7149},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\stack.rs","byte_start":8627550,"byte_end":8627555,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":7149},"to":{"krate":0,"index":7007}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":8603272,"byte_end":8603278,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":7153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":8606927,"byte_end":8606933,"line_start":234,"line_end":234,"column_start":18,"column_end":24},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":7153},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":8608922,"byte_end":8608928,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":7153},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":8609405,"byte_end":8609410,"line_start":327,"line_end":327,"column_start":6,"column_end":11},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":6822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\driver\\mod.rs","byte_start":8611027,"byte_end":8611032,"line_start":389,"line_end":389,"column_start":21,"column_end":26},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":6822},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8631827,"byte_end":8631832,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":7162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8632547,"byte_end":8632552,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":7162},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\error.rs","byte_start":8632579,"byte_end":8632584,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":7162},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8633290,"byte_end":8633297,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":7174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8637071,"byte_end":8637078,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7174},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8637207,"byte_end":8637214,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":610}},"from":{"krate":1,"index":7602},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8637329,"byte_end":8637336,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7174},"to":{"krate":2,"index":1992}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8637501,"byte_end":8637508,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7174},"to":{"krate":2,"index":2023}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8637613,"byte_end":8637620,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7174},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8637761,"byte_end":8637768,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":7174},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8637929,"byte_end":8637936,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7174},"to":{"krate":2,"index":2027}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\instant.rs","byte_start":8638043,"byte_end":8638050,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":7174},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8641786,"byte_end":8641794,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":7197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\interval.rs","byte_start":8643089,"byte_end":8643097,"line_start":164,"line_end":164,"column_start":32,"column_end":40},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":7197},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8646429,"byte_end":8646436,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":7202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8646565,"byte_end":8646572,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":7606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8647110,"byte_end":8647117,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":7606},"to":{"krate":2,"index":8336}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8647695,"byte_end":8647702,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":7202},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8647846,"byte_end":8647853,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":7202},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\timeout.rs","byte_start":8647890,"byte_end":8647895,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"kind":{"Impl":{"id":624}},"from":{"krate":1,"index":2541},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666035,"byte_end":8666043,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":7560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\throttle.rs","byte_start":8666858,"byte_end":8666866,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":7560},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\level.rs","byte_start":8657799,"byte_end":8657804,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":6980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\level.rs","byte_start":8662556,"byte_end":8662561,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":6980},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\stack.rs","byte_start":8663677,"byte_end":8663684,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":7007}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\mod.rs","byte_start":8649620,"byte_end":8649625,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\time\\wheel\\mod.rs","byte_start":8655333,"byte_end":8655337,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\bit.rs","byte_start":8667699,"byte_end":8667703,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":7452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\bit.rs","byte_start":8669177,"byte_end":8669181,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":7452},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\addr.rs","byte_start":8676400,"byte_end":8676407,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":7458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\entry.rs","byte_start":8679042,"byte_end":8679049,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":7307}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\generation.rs","byte_start":8679436,"byte_end":8679446,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":7473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\page.rs","byte_start":8680585,"byte_end":8680590,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":7330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\page.rs","byte_start":8680932,"byte_end":8680938,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":7332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\page.rs","byte_start":8684890,"byte_end":8684895,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":7330},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\page.rs","byte_start":8685201,"byte_end":8685207,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":7332},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\shard.rs","byte_start":8687350,"byte_end":8687355,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\shard.rs","byte_start":8689034,"byte_end":8689039,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7376},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\slot.rs","byte_start":8689416,"byte_end":8689420,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\stack.rs","byte_start":8690391,"byte_end":8690404,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":7420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\stack.rs","byte_start":8691232,"byte_end":8691245,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":7420},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\mod.rs","byte_start":8670779,"byte_end":8670783,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7435},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\mod.rs","byte_start":8670820,"byte_end":8670824,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7435},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\mod.rs","byte_start":8670847,"byte_end":8670851,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":7435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\slab\\mod.rs","byte_start":8672366,"byte_end":8672370,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":7435},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":180390,"byte_end":180400,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":760},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":180459,"byte_end":180469,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":760},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181758,"byte_end":181766,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181803,"byte_end":181811,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":181865,"byte_end":181875,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":184879,"byte_end":184889,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":760},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":185134,"byte_end":185144,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":186227,"byte_end":186235,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\linked_list.rs","byte_start":186434,"byte_end":186442,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\rand.rs","byte_start":196514,"byte_end":196522,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":7501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\wake.rs","byte_start":198062,"byte_end":198066,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1927},"to":{"krate":0,"index":815}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\wake.rs","byte_start":198069,"byte_end":198073,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1939},"to":{"krate":0,"index":815}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\wake.rs","byte_start":198384,"byte_end":198392,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":7510},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\intrusive_double_linked_list.rs","byte_start":202358,"byte_end":202366,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":7519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\intrusive_double_linked_list.rs","byte_start":202616,"byte_end":202624,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":7519},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\intrusive_double_linked_list.rs","byte_start":202729,"byte_end":202737,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":7519},"to":{"krate":2,"index":2111}},{"span":{"file_name":"C:\\Users\\Anubi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.22\\src\\util\\intrusive_double_linked_list.rs","byte_start":203046,"byte_end":203056,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":7528},"to":{"krate":4294967295,"index":4294967295}}]}